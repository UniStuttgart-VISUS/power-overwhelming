FPAttributeValueFile
n  SubType="IVI"
n  SubVersion="1"

v rsrtx_rngSampleMode DataType="i"

 RSRTX_VAL_REAL_TIME (0)
 "Real Time Mode: At slow time base settings the sampled points of the input signal are used to build the waveform, no waveform points are added. With fast time base settings, the sample rate is higher than the ADC sample rate. Waveform samples are added to the ADC samples with sin(x)/x interpolation.\n"
 RSRTX_VAL_EQUIVALENT_TIME (1)
 "Equivalent time: The waveform points are taken from several acquisitions of a repetive signal at a different time in relation to the trigger point.\n"

v rsrtx_rngWaveformArithmetics DataType="i"

 RSRTX_VAL_OFF (0)
 "The data of the current acquisition is recorded according to the decimation settings.\n"
 RSRTX_VAL_ENVELOPE (1)
 "Detects the minimum and maximum values in a sample interval over a number of acquisitions.\n"
 RSRTX_VAL_AVERAGE (2)
 "Calculates the average from the data of the current acquisition and a number of acquisitions before. The number of used acquisitions is set with RSRTX_ATTR_NUM_AVERAGES.\n"
 RSRTX_VAL_SMOOTH (3)
 "Calculates a mean value of several adjacent sample points.\n"
 RSRTX_VAL_FILTER (4)
 "Sets a low-pass filter with 3 dB attenuation at a configurable limit.\n"

v rsrtx_rngVerticalCoupling DataType="i"

 RSRTX_VAL_AC (0)
 "Connection through DC capacitor.\n"
 RSRTX_VAL_DC (1)
 "Direct connection with 50 Ohm termination.\n"
 RSRTX_VAL_DC_LIMIT (2)
 "Direct connection with 1 Megaohm termination\n"
 RSRTX_VAL_AC_LIMIT (3)
 "Connection through DC capacitor with 1 MOhm termination. The capacitor removes the DC offset voltage from the input signal.\n"
 RSRTX_VAL_GND (4)
 "Connection to the ground. All channel data is set to a constant ground value.\n"

v rsrtx_rngChannelBWLimit DataType="i"

 RSRTX_VAL_BW_FULL (0)
 "Use full bandwidth\n"
 RSRTX_VAL_BW_400 (1)
 "Limit to 400MHz\n"
 RSRTX_VAL_BW_200 (2)
 "Limit to 200MHz\n"
 RSRTX_VAL_BW_20 (3)
 "Limit to 20MHz\n"

v rsrtx_rngTriggerSource DataType="i"

 RSRTX_VAL_CHANNEL1 (1)
 "Analog input channel 1 is the trigger source. Available channels depend on the instrument type.\n"
 RSRTX_VAL_CHANNEL2 (2)
 "Analog input channel 2 is the trigger source. Available channels depend on the instrument type.\n"
 RSRTX_VAL_CHANNEL3 (3)
 "Analog input channel 3 is the trigger source. Available channels depend on the instrument type.\n"
 RSRTX_VAL_CHANNEL4 (4)
 "Analog input channel 4 is the trigger source. Available channels depend on the instrument type.\n"
 RSRTX_VAL_EXTERNAL (5)
 "External trigger input on the front panel.\n"
 RSRTX_VAL_LINE (6)
 "AC power supply line for the line trigger.\n"
 RSRTX_VAL_SBUS1 (7)
 "Serial bus 1. Requires at least one protocol option for serial bus (R&S RTM- K1 to K3).\n"
 RSRTX_VAL_SBUS2 (8)
 "Serial bus 2. Requires at least one protocol option for serial bus (R&S RTM- K1 to K3).\n"
 RSRTX_VAL_SBUS3 (9)
 "Serial bus 3. Requires at least one protocol option for serial bus (R&S RTM- K1 to K3).\n"
 RSRTX_VAL_SBUS4 (10)
 "Serial bus 4. Requires at least one protocol option for serial bus (R&S RTM- K1 to K3).\n"
 RSRTX_VAL_D0 (11)
 "Digital channels can be used as trigger sources for edge, width, timeout and pattern trigger. Require MSO option R&S RTM-B1.\n"
 RSRTX_VAL_D1 (12)
 "Digital channels can be used as trigger sources for edge, width, timeout and pattern trigger. Require MSO option R&S RTM-B1.\n"
 RSRTX_VAL_D2 (13)
 "Digital channels can be used as trigger sources for edge, width, timeout and pattern trigger. Require MSO option R&S RTM-B1.\n"
 RSRTX_VAL_D3 (14)
 "Digital channels can be used as trigger sources for edge, width, timeout and pattern trigger. Require MSO option R&S RTM-B1.\n"
 RSRTX_VAL_D4 (15)
 "Digital channels can be used as trigger sources for edge, width, timeout and pattern trigger. Require MSO option R&S RTM-B1.\n"
 RSRTX_VAL_D5 (16)
 "Digital channels can be used as trigger sources for edge, width, timeout and pattern trigger. Require MSO option R&S RTM-B1.\n"
 RSRTX_VAL_D6 (17)
 "Digital channels can be used as trigger sources for edge, width, timeout and pattern trigger. Require MSO option R&S RTM-B1.\n"
 RSRTX_VAL_D7 (18)
 "Digital channels can be used as trigger sources for edge, width, timeout and pattern trigger. Require MSO option R&S RTM-B1.\n"
 RSRTX_VAL_D8 (19)
 "Digital channels can be used as trigger sources for edge, width, timeout and pattern trigger. Require MSO option R&S RTM-B1.\n"
 RSRTX_VAL_D9 (20)
 "Digital channels can be used as trigger sources for edge, width, timeout and pattern trigger. Require MSO option R&S RTM-B1.\n"
 RSRTX_VAL_D10 (21)
 "Digital channels can be used as trigger sources for edge, width, timeout and pattern trigger. Require MSO option R&S RTM-B1.\n"
 RSRTX_VAL_D11 (22)
 "Digital channels can be used as trigger sources for edge, width, timeout and pattern trigger. Require MSO option R&S RTM-B1.\n"
 RSRTX_VAL_D12 (23)
 "Digital channels can be used as trigger sources for edge, width, timeout and pattern trigger. Require MSO option R&S RTM-B1.\n"
 RSRTX_VAL_D13 (24)
 "Digital channels can be used as trigger sources for edge, width, timeout and pattern trigger. Require MSO option R&S RTM-B1.\n"
 RSRTX_VAL_D14 (25)
 "Digital channels can be used as trigger sources for edge, width, timeout and pattern trigger. Require MSO option R&S RTM-B1.\n"
 RSRTX_VAL_D15 (26)
 "Digital channels can be used as trigger sources for edge, width, timeout and pattern trigger. Require MSO option R&S RTM-B1.\n"

v rsrtx_rngTriggerSlope DataType="i"

 RSRTX_VAL_POSITIVE (0)
 "Rising Edge, a positive voltage change\n"
 RSRTX_VAL_NEGATIVE (1)
 "Falling Edge, a negative voltage change\n"
 RSRTX_VAL_EITHER (2)
 "Rising as well as the falling edge.\n"

v rsrtx_rngPolarity DataType="i"

 RSRTX_VAL_POLARITY_NEGATIVE (0)
 "Negative\n"
 RSRTX_VAL_POLARITY_POSITIVE (1)
 "Positive\n"

v rsrtx_rngWidthCondition DataType="i"

 RSRTX_VAL_SHORTER (0)
 "Triggers on pulses shorter than the reference time\n"
 RSRTX_VAL_LONGER (1)
 "Triggers on pulses longer than the reference time\n"
 RSRTX_VAL_WITHIN (2)
 "Triggers on pulses inside a specified range\n"
 RSRTX_VAL_OUTSIDE (3)
 "Triggers on pulses outside a specified range\n"

v rsrtx_rngTVTriggerEvent DataType="i"

 RSRTX_VAL_TV_EVENT_EVEN (0)
 "Triggers only on the field start of even fields. Only available for interlaced scanning.\n"
 RSRTX_VAL_TV_EVENT_ODD (1)
 "Triggers only on the field start of odd fields. Only available for interlaced scanning.\n"
 RSRTX_VAL_TV_EVENT_ANY_FIELD (2)
 "All fields, triggers on the frame start (progressive scanning) or any field start (interlaced scanning).\n"
 RSRTX_VAL_TV_EVENT_LINE (3)
 "Triggers on the beginning of a specified line in any field. The line number is set with RSRTX_ATTR_TV_TRIGGER_LINE_NUMBER.\n"
 RSRTX_VAL_TV_EVENT_ANY_LINE (4)
 "Triggers on the beginning of all video signal lines.\n"

v rsrtx_rngCursorFunction DataType="i"

 RSRTX_VAL_CURSOR_HORIZONTAL (0)
 "Horizontal: Measures the time from the trigger time to each cursor point, the time between the two cursors and the frequency calculated from that time\n"
 RSRTX_VAL_CURSOR_VERTICAL (1)
 "Vertical: Measures the voltages at the two cursor positions and the delta of the two values\n"
 RSRTX_VAL_CURSOR_PAIRED (2)
 "Paired\n"
 RSRTX_VAL_CURSOR_HRAT (3)
 "H Ratio\n"
 RSRTX_VAL_CURSOR_VRAT (4)
 "V Ratio\n"
 RSRTX_VAL_CURSOR_PPC (5)
 "Count positive pulses\n"
 RSRTX_VAL_CURSOR_NPC (6)
 "Count negative pulses\n"
 RSRTX_VAL_CURSOR_REC (7)
 "Count rising edges\n"
 RSRTX_VAL_CURSOR_FEC (8)
 "Count falling edges\n"
 RSRTX_VAL_CURSOR_MEAN (9)
 "Mean value\n"
 RSRTX_VAL_CURSOR_RMS (10)
 "Root mean square\n"
 RSRTX_VAL_CURSOR_RTIM (11)
 "Rise time\n"
 RSRTX_VAL_CURSOR_FTIM (12)
 "Fall time\n"
 RSRTX_VAL_CURSOR_PEAK (13)
 "Peak value\n"
 RSRTX_VAL_CURSOR_UPE (14)
 "Upper peak value\n"
 RSRTX_VAL_CURSOR_LPE (15)
 "Lower peak value\n"
 RSRTX_VAL_CURSOR_BWIDTH (16)
 "Burst Width\n"
 RSRTX_VAL_CURSOR_HVER (17)
 "Combines the Horizontal cursor and Vertiical cursor measurements\n"

v rsrtx_rngXRatioMeasurementUnit DataType="i"

 RSRTX_VAL_UNIT_RATIO (0)
 "Floating value\n"
 RSRTX_VAL_UNIT_PCT (1)
 "Percent\n"
 RSRTX_VAL_UNIT_DEGREE (2)
 "Degree\n"
 RSRTX_VAL_UNIT_RAD (3)
 "Radian\n"

v rsrtx_rngYRatioMeasurementUnit DataType="i"

 RSRTX_VAL_UNIT_RATIO (0)
 "Floating value\n"
 RSRTX_VAL_UNIT_PCT (1)
 "Percent\n"

v rsrtx_rngInterpolation DataType="i"

 RSRTX_VAL_SINE_X (0)
 "sin(x)/x: Interpolation by means of a sin(x)/x curve.\n"
 RSRTX_VAL_LINEAR (1)
 "Linear: Linear interpolation between two adjacent sample points\n"
 RSRTX_VAL_SAMPLE_HOLD (2)
 "Sample/Hold: causes a histogram-like interpolation\n"

v rsrtx_rngMeasurementCategory DataType="i"

 RSRTX_VAL_AMPTIME (0)
 "Amplitude And Time: Amplitude and time measurements\n"

v rsrtx_rngFFTWindowType DataType="i"

 RSRTX_VAL_RECTANGULAR (0)
 "Rectangular: The rectangular window has the best frequency resolution, but a poor amplitude accuracy and is recommended for separating two tones with almost equal amplitudes and a small frequency distance.\n"
 RSRTX_VAL_HAMMING (1)
 "Hamming: The Hamming window is bell shaped and has a good frequency resolution and fair amplitude accuracy. It is recommended for frequency response measurements as well as sine waves, periodic signals and narrow-band noise\n"
 RSRTX_VAL_HANN (2)
 "Hann: The Hann window is bell shaped and has a slightly worse frequency resolution but smaller sidelobe level than the Hamming window. The applications are the same.\n"
 RSRTX_VAL_BLACKMAN (3)
 "Blackman: The Blackman window is bell shaped and has a poor frequency resolution, but very good amplitude accuracy. It is recommended mainly for signals with single frequencies to detect harmonics.\n"
 RSRTX_VAL_FLAT (4)
 "Flat Top: The flat top window has low amplitude measurement errors but a poor frequency resolution. Use this window for accurate single- tone measurements and for measurement of amplitudes of sinusoidal frequency components.\n"

v rsrtx_rngProtocolI2CFrameState DataType="i"

 RSRTX_VAL_FRAME_STATE_OK (0)
 "The frame is complete.\n"
 RSRTX_VAL_FRAME_STATE_INCOMPLETE (1)
 "The frame is not completely contained in the acquisition.\n"
 RSRTX_VAL_FRAME_STATE_UNEXPSTOP (2)
 "Unexpected stop.\n"
 RSRTX_VAL_FRAME_STATE_INSUFFICIENT (3)
 "Insuffcient indicates that the frame is not completely contained in the acquisition.\n"
 RSRTX_VAL_FRAME_STATE_ADDIFFERENT (4)
 "Add different.\n"

v rsrtx_rngProtocolAckBit DataType="i"

 RSRTX_VAL_I2C_EITHER (0)
 "Either\n"
 RSRTX_VAL_I2C_ACK (1)
 "Ack bit\n"
 RSRTX_VAL_I2C_NACK (2)
 "NAck bit\n"
 RSRTX_VAL_I2C_INCOMPLETE (3)
 "Missing bit\n"

v rsrtx_rngProtocolSPIBitOrder DataType="i"

 RSRTX_VAL_SPI_MSBF (0)
 "Most significant bit\n"
 RSRTX_VAL_SPI_LSBF (1)
 "Least significant bit\n"

v rsrtx_rngAudioSource DataType="i"

 RSRTX_VAL_AUDIO_SOURCE_CH1 (1)
 "Channel 1\n"
 RSRTX_VAL_AUDIO_SOURCE_CH2 (2)
 "Channel 2\n"
 RSRTX_VAL_AUDIO_SOURCE_CH3 (3)
 "Channel 3\n"
 RSRTX_VAL_AUDIO_SOURCE_CH4 (4)
 "Channel 4\n"
 RSRTX_VAL_AUDIO_SOURCE_D0 (5)
 "Digital Channel 0\n"
 RSRTX_VAL_AUDIO_SOURCE_D1 (6)
 "Digital Channel 1\n"
 RSRTX_VAL_AUDIO_SOURCE_D2 (7)
 "Digital Channel 2\n"
 RSRTX_VAL_AUDIO_SOURCE_D3 (8)
 "Digital Channel 3\n"
 RSRTX_VAL_AUDIO_SOURCE_D4 (9)
 "Digital Channel 4\n"
 RSRTX_VAL_AUDIO_SOURCE_D5 (10)
 "Digital Channel 5\n"
 RSRTX_VAL_AUDIO_SOURCE_D6 (11)
 "Digital Channel 6\n"
 RSRTX_VAL_AUDIO_SOURCE_D7 (12)
 "Digital Channel 7\n"
 RSRTX_VAL_AUDIO_SOURCE_D8 (13)
 "Digital Channel 8\n"
 RSRTX_VAL_AUDIO_SOURCE_D9 (14)
 "Digital Channel 9\n"
 RSRTX_VAL_AUDIO_SOURCE_D10 (15)
 "Digital Channel 10\n"
 RSRTX_VAL_AUDIO_SOURCE_D11 (16)
 "Digital Channel 11\n"
 RSRTX_VAL_AUDIO_SOURCE_D12 (17)
 "Digital Channel 12\n"
 RSRTX_VAL_AUDIO_SOURCE_D13 (18)
 "Digital Channel 13\n"
 RSRTX_VAL_AUDIO_SOURCE_D14 (19)
 "Digital Channel 14\n"
 RSRTX_VAL_AUDIO_SOURCE_D15 (20)
 "Digital Channel 15\n"

v rsrtx_rngSPIChipSelectSource DataType="i"

 RSRTX_VAL_SPI_CS_SOURCE_CH1 (1)
 "Channel 1\n"
 RSRTX_VAL_SPI_CS_SOURCE_CH2 (2)
 "Channel 2\n"
 RSRTX_VAL_SPI_CS_SOURCE_CH3 (3)
 "Channel 3\n"
 RSRTX_VAL_SPI_CS_SOURCE_CH4 (4)
 "Channel 4\n"
 RSRTX_VAL_SPI_CS_SOURCE_D0 (5)
 "Digital Channel 0\n"
 RSRTX_VAL_SPI_CS_SOURCE_D1 (6)
 "Digital Channel 1\n"
 RSRTX_VAL_SPI_CS_SOURCE_D2 (7)
 "Digital Channel 2\n"
 RSRTX_VAL_SPI_CS_SOURCE_D3 (8)
 "Digital Channel 3\n"
 RSRTX_VAL_SPI_CS_SOURCE_D4 (9)
 "Digital Channel 4\n"
 RSRTX_VAL_SPI_CS_SOURCE_D5 (10)
 "Digital Channel 5\n"
 RSRTX_VAL_SPI_CS_SOURCE_D6 (11)
 "Digital Channel 6\n"
 RSRTX_VAL_SPI_CS_SOURCE_D7 (12)
 "Digital Channel 7\n"
 RSRTX_VAL_SPI_CS_SOURCE_D8 (13)
 "Digital Channel 8\n"
 RSRTX_VAL_SPI_CS_SOURCE_D9 (14)
 "Digital Channel 9\n"
 RSRTX_VAL_SPI_CS_SOURCE_D10 (15)
 "Digital Channel 10\n"
 RSRTX_VAL_SPI_CS_SOURCE_D11 (16)
 "Digital Channel 11\n"
 RSRTX_VAL_SPI_CS_SOURCE_D12 (17)
 "Digital Channel 12\n"
 RSRTX_VAL_SPI_CS_SOURCE_D13 (18)
 "Digital Channel 13\n"
 RSRTX_VAL_SPI_CS_SOURCE_D14 (19)
 "Digital Channel 14\n"
 RSRTX_VAL_SPI_CS_SOURCE_D15 (20)
 "Digital Channel 15\n"

v rsrtx_rngMOSISource DataType="i"

 RSRTX_VAL_MOSI_SOURCE_CH1 (1)
 "Channel 1\n"
 RSRTX_VAL_MOSI_SOURCE_CH2 (2)
 "Channel 2\n"
 RSRTX_VAL_MOSI_SOURCE_CH3 (3)
 "Channel 3\n"
 RSRTX_VAL_MOSI_SOURCE_CH4 (4)
 "Channel 4\n"
 RSRTX_VAL_MOSI_SOURCE_D0 (5)
 "Digital Channel 0\n"
 RSRTX_VAL_MOSI_SOURCE_D1 (6)
 "Digital Channel 1\n"
 RSRTX_VAL_MOSI_SOURCE_D2 (7)
 "Digital Channel 2\n"
 RSRTX_VAL_MOSI_SOURCE_D3 (8)
 "Digital Channel 3\n"
 RSRTX_VAL_MOSI_SOURCE_D4 (9)
 "Digital Channel 4\n"
 RSRTX_VAL_MOSI_SOURCE_D5 (10)
 "Digital Channel 5\n"
 RSRTX_VAL_MOSI_SOURCE_D6 (11)
 "Digital Channel 6\n"
 RSRTX_VAL_MOSI_SOURCE_D7 (12)
 "Digital Channel 7\n"
 RSRTX_VAL_MOSI_SOURCE_D8 (13)
 "Digital Channel 8\n"
 RSRTX_VAL_MOSI_SOURCE_D9 (14)
 "Digital Channel 9\n"
 RSRTX_VAL_MOSI_SOURCE_D10 (15)
 "Digital Channel 10\n"
 RSRTX_VAL_MOSI_SOURCE_D11 (16)
 "Digital Channel 11\n"
 RSRTX_VAL_MOSI_SOURCE_D12 (17)
 "Digital Channel 12\n"
 RSRTX_VAL_MOSI_SOURCE_D13 (18)
 "Digital Channel 13\n"
 RSRTX_VAL_MOSI_SOURCE_D14 (19)
 "Digital Channel 14\n"
 RSRTX_VAL_MOSI_SOURCE_D15 (20)
 "Digital Channel 15\n"

v rsrtx_rngMISOSource DataType="i"

 RSRTX_VAL_MISO_SOURCE_NONE (0)
 "Disables the optional MISO line.\n"
 RSRTX_VAL_MISO_SOURCE_CH1 (1)
 "Channel 1\n"
 RSRTX_VAL_MISO_SOURCE_CH2 (2)
 "Channel 2\n"
 RSRTX_VAL_MISO_SOURCE_CH3 (3)
 "Channel 3\n"
 RSRTX_VAL_MISO_SOURCE_CH4 (4)
 "Channel 4\n"
 RSRTX_VAL_MISO_SOURCE_D0 (5)
 "Digital Channel 0\n"
 RSRTX_VAL_MISO_SOURCE_D1 (6)
 "Digital Channel 1\n"
 RSRTX_VAL_MISO_SOURCE_D2 (7)
 "Digital Channel 2\n"
 RSRTX_VAL_MISO_SOURCE_D3 (8)
 "Digital Channel 3\n"
 RSRTX_VAL_MISO_SOURCE_D4 (9)
 "Digital Channel 4\n"
 RSRTX_VAL_MISO_SOURCE_D5 (10)
 "Digital Channel 5\n"
 RSRTX_VAL_MISO_SOURCE_D6 (11)
 "Digital Channel 6\n"
 RSRTX_VAL_MISO_SOURCE_D7 (12)
 "Digital Channel 7\n"
 RSRTX_VAL_MISO_SOURCE_D8 (13)
 "Digital Channel 8\n"
 RSRTX_VAL_MISO_SOURCE_D9 (14)
 "Digital Channel 9\n"
 RSRTX_VAL_MISO_SOURCE_D10 (15)
 "Digital Channel 10\n"
 RSRTX_VAL_MISO_SOURCE_D11 (16)
 "Digital Channel 11\n"
 RSRTX_VAL_MISO_SOURCE_D12 (17)
 "Digital Channel 12\n"
 RSRTX_VAL_MISO_SOURCE_D13 (18)
 "Digital Channel 13\n"
 RSRTX_VAL_MISO_SOURCE_D14 (19)
 "Digital Channel 14\n"
 RSRTX_VAL_MISO_SOURCE_D15 (20)
 "Digital Channel 15\n"

v rsrtx_rngProtocolSPIPolarity DataType="i"

 RSRTX_VAL_ACTLOW (0)
 "Low active (low = 1)\n"
 RSRTX_VAL_ACTHIGH (1)
 "High active (high = 1)\n"

v rsrtx_rngProtocolSPIFrameState DataType="i"

 RSRTX_VAL_FRAME_STATE_OK (0)
 "Ok\n"
 RSRTX_VAL_FRAME_STATE_INCFIRST (1)
 "Incomplete first\n"
 RSRTX_VAL_FRAME_STATE_INCLAST (2)
 "Incomplete last\n"
 RSRTX_VAL_FRAME_STATE_INSUFFICIENT (3)
 "Insufficient\n"
 RSRTX_VAL_FRAME_STATE_VOID (4)
 "Void\n"

v rsrtx_rngUARTSource DataType="i"

 RSRTX_VAL_UART_SOURCE_CH1 (1)
 "Channel 1\n"
 RSRTX_VAL_UART_SOURCE_CH2 (2)
 "Channel 2\n"
 RSRTX_VAL_UART_SOURCE_CH3 (3)
 "Channel 3\n"
 RSRTX_VAL_UART_SOURCE_CH4 (4)
 "Channel 4\n"
 RSRTX_VAL_UART_SOURCE_D0 (5)
 "Digital Channel 0\n"
 RSRTX_VAL_UART_SOURCE_D1 (6)
 "Digital Channel 1\n"
 RSRTX_VAL_UART_SOURCE_D2 (7)
 "Digital Channel 2\n"
 RSRTX_VAL_UART_SOURCE_D3 (8)
 "Digital Channel 3\n"
 RSRTX_VAL_UART_SOURCE_D4 (9)
 "Digital Channel 4\n"
 RSRTX_VAL_UART_SOURCE_D5 (10)
 "Digital Channel 5\n"
 RSRTX_VAL_UART_SOURCE_D6 (11)
 "Digital Channel 6\n"
 RSRTX_VAL_UART_SOURCE_D7 (12)
 "Digital Channel 7\n"
 RSRTX_VAL_UART_SOURCE_D8 (13)
 "Digital Channel 8\n"
 RSRTX_VAL_UART_SOURCE_D9 (14)
 "Digital Channel 9\n"
 RSRTX_VAL_UART_SOURCE_D10 (15)
 "Digital Channel 10\n"
 RSRTX_VAL_UART_SOURCE_D11 (16)
 "Digital Channel 11\n"
 RSRTX_VAL_UART_SOURCE_D12 (17)
 "Digital Channel 12\n"
 RSRTX_VAL_UART_SOURCE_D13 (18)
 "Digital Channel 13\n"
 RSRTX_VAL_UART_SOURCE_D14 (19)
 "Digital Channel 14\n"
 RSRTX_VAL_UART_SOURCE_D15 (20)
 "Digital Channel 15\n"

v rsrtx_rngUARTTxSource DataType="i"

 RSRTX_VAL_UART_SOURCE_NONE (01)
 "Disables the optional TX line\n"
 RSRTX_VAL_UART_SOURCE_CH1 (1)
 "Channel 1\n"
 RSRTX_VAL_UART_SOURCE_CH2 (2)
 "Channel 2\n"
 RSRTX_VAL_UART_SOURCE_CH3 (3)
 "Channel 3\n"
 RSRTX_VAL_UART_SOURCE_CH4 (4)
 "Channel 4\n"
 RSRTX_VAL_UART_SOURCE_D0 (5)
 "Digital Channel 0\n"
 RSRTX_VAL_UART_SOURCE_D1 (6)
 "Digital Channel 1\n"
 RSRTX_VAL_UART_SOURCE_D2 (7)
 "Digital Channel 2\n"
 RSRTX_VAL_UART_SOURCE_D3 (8)
 "Digital Channel 3\n"
 RSRTX_VAL_UART_SOURCE_D4 (9)
 "Digital Channel 4\n"
 RSRTX_VAL_UART_SOURCE_D5 (10)
 "Digital Channel 5\n"
 RSRTX_VAL_UART_SOURCE_D6 (11)
 "Digital Channel 6\n"
 RSRTX_VAL_UART_SOURCE_D7 (12)
 "Digital Channel 7\n"
 RSRTX_VAL_UART_SOURCE_D8 (13)
 "Digital Channel 8\n"
 RSRTX_VAL_UART_SOURCE_D9 (14)
 "Digital Channel 9\n"
 RSRTX_VAL_UART_SOURCE_D10 (15)
 "Digital Channel 10\n"
 RSRTX_VAL_UART_SOURCE_D11 (16)
 "Digital Channel 11\n"
 RSRTX_VAL_UART_SOURCE_D12 (17)
 "Digital Channel 12\n"
 RSRTX_VAL_UART_SOURCE_D13 (18)
 "Digital Channel 13\n"
 RSRTX_VAL_UART_SOURCE_D14 (19)
 "Digital Channel 14\n"
 RSRTX_VAL_UART_SOURCE_D15 (20)
 "Digital Channel 15\n"

v rsrtx_rngProtocolUARTParity DataType="i"

 RSRTX_VAL_UART_NONE (0)
 "No parity bit is used.\n"
 RSRTX_VAL_UART_ODD (1)
 "The parity bit is set to 1 if the number of data bits set to 1 is even.\n"
 RSRTX_VAL_UART_EVEN (2)
 "The parity bit is set to 1 if the number of data bits set to 1 is odd.\n"

v rsrtx_rngProtocolUARTStopBits DataType="i"

 RSRTX_VAL_UART_B1 (0)
 "1 stop bit\n"
 RSRTX_VAL_UART_B1_5 (1)
 "1.5 stop bit\n"
 RSRTX_VAL_UART_B2 (2)
 "2 stop bits\n"

v rsrtx_rngProtocolUARTTriggerType DataType="i"

 RSRTX_VAL_UART_TRIGGER_BURSTSTART (0)
 "Burst start\n"
 RSRTX_VAL_UART_TRIGGER_SBIT (1)
 "Start bit\n"
 RSRTX_VAL_UART_TRIGGER_NTHS (2)
 "N-th symbol\n"
 RSRTX_VAL_UART_TRIGGER_SYMB (3)
 "Symbol\n"
 RSRTX_VAL_UART_TRIGGER_PATT (4)
 "Pattern\n"
 RSRTX_VAL_UART_TRIGGER_PERR (5)
 "Parity error\n"
 RSRTX_VAL_UART_TRIGGER_SPER (6)
 "Stop bit error\n"
 RSRTX_VAL_UART_TRIGGER_BRE (7)
 "Break\n"

v rsrtx_rngSignalStyle DataType="i"

 RSRTX_VAL_SIGNAL_STYLE_VECTORS (0)
 "The individual data points are connected by a line.\n"
 RSRTX_VAL_SIGNAL_STYLE_DOTS (1)
 "Only the individual data points are displayed.\n"

v rsrtx_rngHardcopyDeviceOrientation DataType="i"

 RSRTX_VAL_HARDCOPY_ORIENTATION_PORTRAIT (0)
 "Portrait orientation\n"
 RSRTX_VAL_HARDCOPY_ORIENTATION_LANDSCAPE (1)
 "Landscape orientation\n"

v rsrtx_rngWaveformParameter DataType="i"

 RSRTX_VAL_WAV_CH1 (1)
 "Channel 1\n"
 RSRTX_VAL_WAV_CH2 (2)
 "Channel 2\n"
 RSRTX_VAL_WAV_CH3 (3)
 "Channel 3\n"
 RSRTX_VAL_WAV_CH4 (4)
 "Channel 4\n"
 RSRTX_VAL_WAV_M1 (5)
 "Math Waveform 1\n"
 RSRTX_VAL_WAV_M2 (6)
 "Math Waveform 2\n"
 RSRTX_VAL_WAV_M3 (7)
 "Math Waveform 3\n"
 RSRTX_VAL_WAV_M4 (8)
 "Math Waveform 4\n"
 RSRTX_VAL_WAV_M5 (9)
 "Math Waveform 5\n"
 RSRTX_VAL_WAV_R1 (10)
 "Reference Waveform 1\n"
 RSRTX_VAL_WAV_R2 (11)
 "Reference Waveform 2\n"
 RSRTX_VAL_WAV_R3 (12)
 "Reference Waveform 3\n"
 RSRTX_VAL_WAV_R4 (13)
 "Reference Waveform 4\n"
 RSRTX_VAL_WAV_D0 (14)
 "Digital 0\n"
 RSRTX_VAL_WAV_D1 (15)
 "Digital 1\n"
 RSRTX_VAL_WAV_D2 (16)
 "Digital 2\n"
 RSRTX_VAL_WAV_D3 (17)
 "Digital 3\n"
 RSRTX_VAL_WAV_D4 (18)
 "Digital 4\n"
 RSRTX_VAL_WAV_D5 (19)
 "Digital 5\n"
 RSRTX_VAL_WAV_D6 (20)
 "Digital 6\n"
 RSRTX_VAL_WAV_D7 (21)
 "Digital 7\n"
 RSRTX_VAL_WAV_D8 (22)
 "Digital 8\n"
 RSRTX_VAL_WAV_D9 (23)
 "Digital 9\n"
 RSRTX_VAL_WAV_D10 (24)
 "Digital 10\n"
 RSRTX_VAL_WAV_D11 (25)
 "Digital11\n"
 RSRTX_VAL_WAV_D12 (26)
 "Digital 12\n"
 RSRTX_VAL_WAV_D13 (27)
 "Digital 13\n"
 RSRTX_VAL_WAV_D14 (28)
 "Digital 14\n"
 RSRTX_VAL_WAV_D15 (29)
 "Digital 15\n"
 RSRTX_VAL_WAV_D70 (30)
 "Digital 70\n"
 RSRTX_VAL_WAV_D158 (31)
 "Digital 158\n"
 RSRTX_VAL_WAV_SPEC (32)
 "Spectrum\n"
 RSRTX_VAL_WAV_XY2 (33)
 "XY2\n"
 RSRTX_VAL_WAV_MINH (34)
 "Minimum Hold\n"
 RSRTX_VAL_WAV_MAXH (35)
 "Maximum Hold\n"
 RSRTX_VAL_WAV_AVER (36)
 "Average\n"
 RSRTX_VAL_WAV_QMA (37)
 "QMA\n"
 RSRTX_VAL_WAV_XY1 (38)
 "XY1\n"

v rsrtx_rngColorBrightness DataType="i"

 RSRTX_VAL_COLOR_NORM (0)
 "Values that occur frequently are brighter than rare values.\n"
 RSRTX_VAL_COLOR_INVERSE (1)
 "Rare values are brighter than frequent values, inverse to the NORMal brightness.\n"
 RSRTX_VAL_COLOR_FCOLOR (2)
 "Rare values are displayed in blue, while more frequent values are red and very frequent values are displayed in yellow or white, with various colors inbetween.\n"
 RSRTX_VAL_COLOR_INVCOLOR (3)
 "Inverses the FColor setting: rare values are yellow or white while frequent values are blue.\n"

v rsrtx_rngDiagramMode DataType="i"

 RSRTX_VAL_DISPLAY_YT (0)
 "Default time diagram with a time axis in x-direction and the signal amplitudes displayed in y-direction.\n"
 RSRTX_VAL_DISPLAY_XY (1)
 "XY-diagram, combines the voltage levels of two waveforms in one diaagram.\n"

v rsrtx_rngLanguage DataType="i"

 RSRTX_VAL_DISPLAY_ENGLISH (0)
 "\n"
 RSRTX_VAL_DISPLAY_GERMAN (1)
 "\n"
 RSRTX_VAL_DISPLAY_FRENCH (2)
 "\n"
 RSRTX_VAL_DISPLAY_SPANISH (3)
 "\n"
 RSRTX_VAL_DISPLAY_RUSSIAN (4)
 "\n"
 RSRTX_VAL_DISPLAY_SCHIN (5)
 "\n"
 RSRTX_VAL_DISPLAY_TCHIN (6)
 "\n"
 RSRTX_VAL_DISPLAY_JAPAN (7)
 "\n"
 RSRTX_VAL_DISPLAY_KOREAN (8)
 "\n"
 RSRTX_VAL_DISPLAY_ITALIAN (9)
 "\n"
 RSRTX_VAL_DISPLAY_PORTUGUESE (10)
 "\n"
 RSRTX_VAL_DISPLAY_CZECH (11)
 "\n"
 RSRTX_VAL_DISPLAY_POLISH (12)
 "\n"

v rsrtx_rngGridStyle DataType="i"

 RSRTX_VAL_GRID_LINES (0)
 "Displays the grid as horizontal and vertical lines.\n"
 RSRTX_VAL_GRID_CROSS (1)
 "Displays crosshairs instead of a grid.\n"
 RSRTX_VAL_GRID_NONE (2)
 "No grid is displayed.\n"

v rsrtx_rngSource DataType="i"

 RSRTX_VAL_SOURCE_CH1 (1)
 "Channel 1\n"
 RSRTX_VAL_SOURCE_CH2 (2)
 "Channel 2\n"
 RSRTX_VAL_SOURCE_CH3 (3)
 "Channel 3\n"
 RSRTX_VAL_SOURCE_CH4 (4)
 "Channel 4\n"

v rsrtx_rngXY2Source DataType="i"

 RSRTX_VAL_SOURCE_NONE (0)
 "None\n"
 RSRTX_VAL_SOURCE_CH1 (1)
 "channel 1\n"
 RSRTX_VAL_SOURCE_CH2 (2)
 "channel 2\n"
 RSRTX_VAL_SOURCE_CH3 (3)
 "channel 3\n"
 RSRTX_VAL_SOURCE_CH4 (4)
 "channel 4\n"

v rsrtx_rngIntensityMode DataType="i"

 RSRTX_VAL_ZMODE_ANALOG (0)
 "Modulated intensity; Intensity is modulated continuously  according to the selected Source Z.\n"
 RSRTX_VAL_ZMODE_DIGITAL (1)
 "Intensity is determined by a threshold value defined with DISPlay: XY: ZTHReshold. If the Z signal value is below the selected threshold, the corresponding x/y point is not dsplayed. If the Z signal value is above the threshold, the x/y point is displayed with the defined intensity level.\n"
 RSRTX_VAL_ZMODE_OFF (2)
 "Intensity control is deactivated.\n"

v rsrtx_rngHardcopyDevice DataType="i"

 RSRTX_VAL_HARDCOPY_DEVICE_MEM (0)
 "Directs the hardcopy to a file. \n"
 RSRTX_VAL_HARDCOPY_DEVICE_PRINT (1)
 "Directs the hardcopy to the printer.\n"

v rsrtx_rngHardcopyDeviceLang DataType="i"

 RSRTX_VAL_HARDCOPY_DEVICE_LANG_BMP (1)
 "bmp output format.\n"
 RSRTX_VAL_HARDCOPY_DEVICE_LANG_PNG (0)
 "png output format\n"
 RSRTX_VAL_HARDCOPY_DEVICE_LANG_GDI (2)
 "gdi output format\n"
 RSRTX_VAL_HARDCOPY_DEVICE_LANG_GIF (3)
 "gif output format\n"

v rsrtx_rngPageSize DataType="i"

 RSRTX_VAL_PAGE_A4 (0)
 "A4 size\n"
 RSRTX_VAL_PAGE_A5 (1)
 "A5 size\n"
 RSRTX_VAL_PAGE_B5 (2)
 "B5 size\n"
 RSRTX_VAL_PAGE_B6 (3)
 "B6 size\n"
 RSRTX_VAL_PAGE_EX (4)
 "Executive size\n"
 RSRTX_VAL_PAGE_LEGAL (5)
 "\n"
 RSRTX_VAL_PAGE_LETTER (6)
 "\n"

v rsrtx_rngMaskCondition DataType="i"

 RSRTX_VAL_MASKCOND_RUN (0)
 "Run\n"
 RSRTX_VAL_MASKCOND_STOP (1)
 "Stop\n"
 RSRTX_VAL_MASKCOND_PAUSE (2)
 "Pause\n"

v rsrtx_rngProbeButtonAction DataType="i"

 RSRTX_VAL_PROBE_BUTTON_NO_ACTION (0)
 "Nothing is started on pressing the micro button.\n"
 RSRTX_VAL_PROBE_BUTTON_RUN_CONTINUOUS (1)
 "Run continuous: The acquisition is running as long as the probe button is pressed.\n"
 RSRTX_VAL_PROBE_BUTTON_RUN_SINGLE (2)
 "Run single: starts one acquisition.\n"
 RSRTX_VAL_PROBE_BUTTON_AUTOSET (3)
 "Starts the autoset procedure.\n"

v rsrtx_rngTriggerCoupling DataType="i"

 RSRTX_VAL_COUPLING_DIRECT (0)
 "Direct Current coupling. The trigger signal remains unchanged.\n"
 RSRTX_VAL_COUPLING_ALTERNATING (1)
 "Alternating Current coupling. A 5 Hz high pass filter removes the DC offset voltage from the trigger signal.\n"
 RSRTX_VAL_COUPLING_HIGHFREQ (2)
 "High frequency coupling. A 15 kHz high-pass filter removes lower frequencies from the trigger signal. Use this mode only with very  high frequency signals.\n"

v rsrtx_rngProtocolI2CAccessBit DataType="i"

 RSRTX_VAL_I2C_TRIGGER_READ (1)
 "Trigger on master read access.\n"
 RSRTX_VAL_I2C_TRIGGER_WRITE (2)
 "Trigger on master write access.\n"

v rsrtx_rngAddressLength DataType="i"

 RSRTX_VAL_LENGTH_NORMAL (0)
 "Normal\n"
 RSRTX_VAL_LENGTH_EXTENDED (1)
 "Extended\n"

v rsrtx_rngProtocolI2CTriggerType DataType="i"

 RSRTX_VAL_TRIGGER_MODE_START (0)
 "Start of the message. The start condition is a falling slope on SDA while SCL is high.\n"
 RSRTX_VAL_TRIGGER_MODE_RESTART (1)
 "Restarted message. The restart is a repeated start condition.\n"
 RSRTX_VAL_TRIGGER_MODE_STOP (2)
 "End of the message. The stop condition is a rising slope on SDA while SCL is high.\n"
 RSRTX_VAL_TRIGGER_MODE_MISSING (3)
 "Missing acknowledge. If the transfer failed, at the moment of the acknowledge bit the SCL and the SDA lines are both on high level.\n"
 RSRTX_VAL_TRIGGER_MODE_PATT (4)
 "Triggers on a set of trigger conditions: read or write access of the master, to an address, or/and to a bit pattern in the message. For a complete configuration of the pattern mode, you have to set:  TRIGger: A: I2C: ACCess (read/write access), and  TRIGger: A: I2C: AMODe and TRIGger: A: I2C: ADDRess  (address), and/or  TRIGger: A: I2C: POFFset and TRIGger: A: I2C: PLENgth  and TRIGger: A: I2C: PATTern (pattern).\n"

v rsrtx_rngHysteresisMode DataType="i"

 RSRTX_VAL_HYSTERESIS_AUTO (0)
 "Auto\n"
 RSRTX_VAL_HYSTERESIS_SMALL (1)
 "Small\n"
 RSRTX_VAL_HYSTERESIS_MEDIUM (2)
 "Medium\n"
 RSRTX_VAL_HYSTERESIS_LARGE (3)
 "Large\n"
 RSRTX_VAL_HYSTERESIS_MANUAL (4)
 "Manual\n"

v rsrtx_rngTriggerMode DataType="i"

 RSRTX_VAL_TRIGGER_AUTO (0)
 "The instrument triggers repeatedly after a time interval if the trigger conditions are not fulfilled. If a real trigger occurs, it takes  precedence.\n"
 RSRTX_VAL_TRIGGER_NORMAL (1)
 "The instrument acquires a waveform only if a trigger occurs.\n"
 RSRTX_VAL_TRIGGER_DELAY (2)
 "Time delay, set with TRIGger: B: DELay. Defines the delay type of the B-trigger.\n"
 RSRTX_VAL_TRIGGER_EVENTS (3)
 "Event count delay, set with TRIGger: B: EVENt: COUNt. Defines the delay type of the B-trigger.\n"

v rsrtx_rngTriggerPatternFunction DataType="i"

 RSRTX_VAL_TRG_PATTERN_AND (0)
 "The required states of all channels must appear in the input signal  at the same time.\n"
 RSRTX_VAL_TRG_PATTERN_OR (1)
 "At least one of the channels must have the required state.\n"

v rsrtx_rngProtocolSPITriggerType DataType="i"

 RSRTX_VAL_SPI_MODE_BURSTSTART (0)
 "Burst start, sets the trigger event to the start of the frame. The frame starts when the chip select signal CS changes to the active  state.\n"
 RSRTX_VAL_SPI_MODE_BURSTEND (1)
 "Burst end, sets the trigger event to the end of the message.\n"
 RSRTX_VAL_SPI_MODE_BIT (2)
 "Sets the trigger event to the specified bit number. To define the bit  number, use TRIGger: A: SPI: POFFset.\n"
 RSRTX_VAL_SPI_MODE_PATTERN (3)
 "Sets the trigger event to a serial pattern.\n"

v rsrtx_rngTriggerType DataType="i"

 RSRTX_VAL_EDGE_TRIGGER (0)
 "Edge Trigger\n"
 RSRTX_VAL_WIDTH_TRIGGER (1)
 "WidthTtrigger\n"
 RSRTX_VAL_VIDEO_TRIGGER (2)
 "Video Trigger\n"
 RSRTX_VAL_PATTERN_TRIGGER (3)
 "Pattern Trigger, Logic Trigger\n"
 RSRTX_VAL_BUS_TRIGGER (4)
 "Bus Trigger\n"
 RSRTX_VAL_RISE_TIME_TRIGGER (5)
 "Rise Time Trigger\n"
 RSRTX_VAL_RUNT_TRIGGER (6)
 "Runt Trigger\n"
 RSRTX_VAL_LINE_TRIGGER (7)
 "Trigger on power supply line\n"

v rsrtx_rngTVStandard DataType="i"

 RSRTX_VAL_TV_STANDART_PAL (0)
 "PAL\n"
 RSRTX_VAL_TV_STANDART_NTSC (1)
 "NTSC\n"
 RSRTX_VAL_TV_STANDART_SECAM (2)
 "Secam\n"
 RSRTX_VAL_TV_STANDART_PALM (3)
 "PALM\n"
 RSRTX_VAL_TV_STANDART_I576 (4)
 "I576\n"
 RSRTX_VAL_TV_STANDART_P720 (5)
 "P720\n"
 RSRTX_VAL_TV_STANDART_P1080 (6)
 "P1080\n"
 RSRTX_VAL_TV_STANDART_I1080 (7)
 "I1080\n"

v rsrtx_rngColorScheme DataType="i"

 RSRTX_VAL_SCHEME_COLOR (0)
 "Color\n"
 RSRTX_VAL_SCHEME_GRAY (1)
 "Grayscale\n"
 RSRTX_VAL_SCHEME_INVERTED (2)
 "Inverts the colors of the output, i.e. a dark waveform is printed on a white background.\n"

v rsrtx_rngAcquisitionType DataType="i"

 RSRTX_VAL_SAMPLE (0)
 "One of n samples in a sample interval of the ADC is recorded as waveform point.\n"
 RSRTX_VAL_PEAK_DETECT (1)
 "Peak Detect: the minimum and the maximum of n samples in a sample interval are recorded as waveform points.\n"
 RSRTX_VAL_HI_RES (2)
 "High resolution: The average of n sample points is recorded as waveform point.\n"

v rsrtx_rngAmplitudeTimeMeasurementType DataType="i"

 RSRTX_VAL_MEAS_FREQUENCY (1)
 "\n"
 RSRTX_VAL_MEAS_PERIOD (2)
 "\n"
 RSRTX_VAL_MEAS_PEAK (3)
 "\n"
 RSRTX_VAL_MEAS_UPEAK (4)
 "\n"
 RSRTX_VAL_MEAS_LPEAK (5)
 "\n"
 RSRTX_VAL_MEAS_PPC (6)
 "\n"
 RSRTX_VAL_MEAS_NPC (7)
 "\n"
 RSRTX_VAL_MEAS_REC (8)
 "\n"
 RSRTX_VAL_MEAS_FEC (9)
 "\n"
 RSRTX_VAL_MEAS_HIGH (10)
 "\n"
 RSRTX_VAL_MEAS_LOW (11)
 "\n"
 RSRTX_VAL_MEAS_AMP (12)
 "\n"
 RSRTX_VAL_MEAS_MEAN (13)
 "\n"
 RSRTX_VAL_MEAS_RMS (14)
 "\n"
 RSRTX_VAL_MEAS_RTM (15)
 "\n"
 RSRTX_VAL_MEAS_FTIM (16)
 "\n"
 RSRTX_VAL_MEAS_PDCY (17)
 "\n"
 RSRTX_VAL_MEAS_NDCY (18)
 "\n"
 RSRTX_VAL_MEAS_PPW (19)
 "\n"
 RSRTX_VAL_MEAS_NPW (20)
 "\n"
 RSRTX_VAL_MEAS_CYCM (21)
 "\n"
 RSRTX_VAL_MEAS_CYCR (22)
 "\n"
 RSRTX_VAL_MEAS_SSTDD (23)
 "\n"
 RSRTX_VAL_MEAS_TFR (24)
 "\n"
 RSRTX_VAL_MEAS_TPER (25)
 "\n"
 RSRTX_VAL_MEAS_DEL (26)
 "\n"
 RSRTX_VAL_MEAS_PHA (27)
 "\n"
 RSRTX_VAL_MEAS_BWID (28)
 "\n"
 RSRTX_VAL_MEAS_CYCS (29)
 "\n"
 RSRTX_VAL_MEAS_POV (30)
 "\n"
 RSRTX_VAL_MEAS_NOV (31)
 "\n"
 RSRTX_VAL_MEAS_TBFR (32)
 "\n"
 RSRTX_VAL_MEAS_TBP (33)
 "\n"
 RSRTX_VAL_MEAS_SRR (34)
 "\n"
 RSRTX_VAL_MEAS_SRF (35)
 "\n"
 RSRTX_VAL_MEAS_DTOT (36)
 "\n"

v rsrtx_rngProtocolType DataType="i"

 RSRTX_VAL_PTYPE_PARALLEL (0)
 "Parallel\n"
 RSRTX_VAL_PTYPE_CPARALLEL (1)
 "CParallel\n"
 RSRTX_VAL_PTYPE_I2C (2)
 "I2C\n"
 RSRTX_VAL_PTYPE_SPI (3)
 "SPI\n"
 RSRTX_VAL_PTYPE_SSPI (4)
 "SSPI\n"
 RSRTX_VAL_PTYPE_UART (5)
 "UART\n"
 RSRTX_VAL_PTYPE_CAN (6)
 "CAN\n"
 RSRTX_VAL_PTYPE_LIN (7)
 "LIN\n"
 RSRTX_VAL_PTYPE_AUDIO (8)
 "Audio\n"
 RSRTX_VAL_PTYPE_MILSTD (9)
 "MILSTD\n"
 RSRTX_VAL_PTYPE_ARINC (10)
 "ARINC429\n"

v rsrtx_rngProtocolFormat DataType="i"

 RSRTX_VAL_PFORMAT_ASCI (0)
 "Ascii\n"
 RSRTX_VAL_PFORMAT_HEX (1)
 "Hexadecimal\n"
 RSRTX_VAL_PFORMAT_BIN (2)
 "Binary\n"
 RSRTX_VAL_PFORMAT_DEC (3)
 "Decimal\n"
 RSRTX_VAL_PFORMAT_OCT (4)
 "Octal\n"

v rsrtx_rngProtocolHeight DataType="i"

 RSRTX_VAL_PHEIGHT_SMALL (0)
 "Small\n"
 RSRTX_VAL_PHEIGHT_MEDIUM (1)
 "Medium\n"
 RSRTX_VAL_PHEIGHT_LARGE (2)
 "Large\n"
 RSRTX_VAL_PHEIGHT_DIV1 (3)
 "DIV1\n"
 RSRTX_VAL_PHEIGHT_DIV2 (4)
 "DIV2\n"
 RSRTX_VAL_PHEIGHT_DIV4 (5)
 "DIV4\n"
 RSRTX_VAL_PHEIGHT_DIV8 (6)
 "DIV8\n"

v rsrtx_rngRelativeMode DataType="i"

 RSRTX_VAL_MEAS_RELATIVE_TEN (0)
 "TEN: 10, 50 and 90%\n"
 RSRTX_VAL_MEAS_RELATIVE_TWENTY (1)
 "TWENty: 20, 50 and 80%\n"
 RSRTX_VAL_MEAS_RELATIVE_FIVE (2)
 "FIVE: 5, 50 and 95 %\n"
 RSRTX_VAL_MEAS_RELATIVE_USER (3)
 "USER: levels are defined by user\n"

v rsrtx_rngChannelPolarity DataType="i"

 RSRTX_VAL_POLARITY_NORM (0)
 "Normal\n"
 RSRTX_VAL_POLARITY_INV (1)
 "Inverted\n"

v rsrtx_rngExternalTriggerCoupling DataType="i"

 RSRTX_VAL_COUPLING_AC (0)
 "AC\n"
 RSRTX_VAL_COUPLING_DC (1)
 "DC\n"

v rsrtx_rngSearchCondition DataType="i"

 RSRTX_VAL_SEARCHCOND_EDGE (0)
 "Edge\n"
 RSRTX_VAL_SEARCHCOND_WIDTH (1)
 "Width\n"
 RSRTX_VAL_SEARCHCOND_PEAK (2)
 "Peak\n"
 RSRTX_VAL_SEARCHCOND_RUNT (3)
 "Runt\n"
 RSRTX_VAL_SEARCHCOND_RTIME (4)
 "Rise Time\n"
 RSRTX_VAL_SEARCHCOND_D2C (5)
 "Data2Clock\n"
 RSRTX_VAL_SEARCHCOND_PATTERN (6)
 "Pattern\n"
 RSRTX_VAL_SEARCHCOND_PROTOCOL (7)
 "Protocol\n"
 RSRTX_VAL_SEARCHCOND_WINDOW (8)
 "Window\n"

v rsrtx_rngSearchSource DataType="i"

 RSRTX_VAL_MEASUREMENT_SOURCE_C1 (0)
 "Channel Waveform 1\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_C2 (1)
 "Channel Waveform 2\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_C3 (2)
 "Channel Waveform 3\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_C4 (3)
 "Channel Waveform 4\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_MA1 (4)
 "Math Waveform 1\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_MA2 (5)
 "Math Waveform 2\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_MA3 (6)
 "Math Waveform 3\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_MA4 (7)
 "Math Waveform 4\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_RE1 (8)
 "Reference Waveform 1\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_RE2 (9)
 "Reference Waveform 2\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_RE3 (10)
 "Reference Waveform 3\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_RE4 (11)
 "Reference Waveform 4\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_SBUS1 (12)
 "SerialBus 1\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_SBUS2 (13)
 "SerialBus 2\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_SBUS3 (14)
 "SerialBus 3\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_SBUS4 (15)
 "SerialBus 4\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_QMA (37)
 "QMA\n"

v rsrtx_rngSearchSlope DataType="i"

 RSRTX_VAL_POSITIVE (0)
 "Positive\n"
 RSRTX_VAL_NEGATIVE (1)
 "Negative\n"
 RSRTX_VAL_EITHER (2)
 "Either\n"

v rsrtx_rngSearchRange DataType="i"

 RSRTX_VAL_SHORTER (0)
 "Shorter\n"
 RSRTX_VAL_LONGER (1)
 "Longer\n"
 RSRTX_VAL_WITHIN (2)
 "Within\n"
 RSRTX_VAL_OUTSIDE (3)
 "Outside\n"

v rsrtx_rngScalingUnit DataType="i"

 RSRTX_VAL_FFT_LIN (0)
 "Linear\n"
 RSRTX_VAL_FFT_DBM (1)
 "DBM\n"
 RSRTX_VAL_FFT_DBV (2)
 "DBV\n"

v rsrtx_rngProbeUnit DataType="i"

 RSRTX_VAL_PROBE_UNIT_V (0)
 "V\n"
 RSRTX_VAL_PROBE_UNIT_A (1)
 "A\n"

v rsrtx_rngWaveformSamplesRange DataType="i"

 RSRTX_VAL_WAVEFORM_SAMPLES_DEFAULT (0)
 "Waveform samples that are displayed on the screen\n"
 RSRTX_VAL_WAVEFORM_SAMPLES_MAXIMUM (1)
 "All waveform samples that are stored in the memory.\n"
 RSRTX_VAL_WAVEFORM_SAMPLES_DISPLAY_MAXIMUM (2)
 "Waveform samples stored in the current waveform record but only for the displayed time range\n"

v rsrtx_rngMaskTestActionExecution DataType="i"

 RSRTX_VAL_MASK_ACTION_EXECUTION_OFF (0)
 "No action is executed.\n"
 RSRTX_VAL_MASK_ACTION_EXECUTION_EACH (1)
 "Each\n"
 RSRTX_VAL_MASK_ACTION_EXECUTION_SINGLE (2)
 "The selected action is executed on each violation of the mask.\n"
 RSRTX_VAL_MASK_ACTION_EXECUTION_CYCLIC (3)
 "The selected action is executed repeatedly after each n-th violation.\n"

v rsrtx_rngSearchTriggerPatternCombination DataType="i"

 RSRTX_VAL_PATTERN_COMBINATION_AND (0)
 "AND\n"
 RSRTX_VAL_PATTERN_COMBINATION_OR (1)
 "OR\n"
 RSRTX_VAL_PATTERN_COMBINATION_NAND (2)
 "NAND\n"
 RSRTX_VAL_PATTERN_COMBINATION_NOR (3)
 "NOR\n"

v rsrtx_rngSearchGateMode DataType="i"

 RSRTX_VAL_SEARCH_GATE_ALL (0)
 "All\n"
 RSRTX_VAL_SEARCH_GATE_DISPLAY (1)
 "Display\n"
 RSRTX_VAL_SEARCH_GATE_USER (2)
 "User\n"

v rsrtx_rngProtocolSPITriggerSource DataType="i"

 RSRTX_VAL_SPI_MISO (3)
 "MISO\n"
 RSRTX_VAL_SPI_MOSI (4)
 "MOSI\n"

v rsrtx_rngProtocolLINStandard DataType="i"

 RSRTX_VAL_LIN_STANDARD_AUTO (0)
 "Auto\n"
 RSRTX_VAL_LIN_STANDARD_1X (1)
 "v 1.x\n"
 RSRTX_VAL_LIN_STANDARD_2X (2)
 "v 2.x\n"
 RSRTX_VAL_LIN_STANDARD_J2602 (3)
 "J2602\n"

v rsrtx_rngProtocolLINTriggerMode DataType="i"

 RSRTX_VAL_LIN_FRAME_START (0)
 "Start of Frame (Sync)\n"
 RSRTX_VAL_LIN_FRAME_ID (1)
 "Identifier\n"
 RSRTX_VAL_LIN_FRAME_ID_DATA (2)
 "Identifier + Data\n"
 RSRTX_VAL_LIN_FRAME_WAKEUP (3)
 "Wakeup Frame\n"
 RSRTX_VAL_LIN_ERR_COND (4)
 "Error Condition\n"

v rsrtx_rngProtocolCondition DataType="i"

 RSRTX_VAL_COND_NQ (0)
 "!= Not equal\n"
 RSRTX_VAL_COND_EQ (1)
 "=  Equal\n"
 RSRTX_VAL_COND_LT (2)
 "<  Less than\n"
 RSRTX_VAL_COND_GT (3)
 ">  Greater than\n"

v rsrtx_rngProtocolSearchEvent DataType="i"

 RSRTX_VAL_SEARCH_EVENT_FRAME (0)
 "Frame\n"
 RSRTX_VAL_SEARCH_EVENT_ERROR (1)
 "Error\n"
 RSRTX_VAL_SEARCH_EVENT_ID (2)
 "Identifier\n"
 RSRTX_VAL_SEARCH_EVENT_IDDT (3)
 "ID and Data\n"
 RSRTX_VAL_SEARCH_EVENT_IDERR (4)
 "ID Error\n"

v rsrtx_rngProtocolLINSearchFrameSetup DataType="i"

 RSRTX_VAL_LIN_SEARCH_FRAME_SOF (0)
 "Start of Frame\n"
 RSRTX_VAL_LIN_SEARCH_FRAME_WAKEUP (1)
 "Wakeup Frame\n"

v rsrtx_rngProtocolCANLineType DataType="i"

 RSRTX_VAL_CAN_LOW (0)
 "CAN-Low\n"
 RSRTX_VAL_CAN_HIGH (1)
 "CAN-High\n"

v rsrtx_rngProtocolCANTriggerMode DataType="i"

 RSRTX_VAL_CAN_FRAME_START (0)
 "Start of Frame\n"
 RSRTX_VAL_CAN_FRAME_END (1)
 "End of Frame\n"
 RSRTX_VAL_CAN_MSG_ID (2)
 "Identifier\n"
 RSRTX_VAL_CAN_MSG_IDDT (3)
 "Identifier + Data\n"
 RSRTX_VAL_CAN_FRAME_TYPE (4)
 "Frame Type\n"
 RSRTX_VAL_CAN_ERROR_COND (5)
 "Error Condition\n"

v rsrtx_rngProtocolCANTriggerFrameType DataType="i"

 RSRTX_VAL_CAN_FRAME_TYPE_DATA (0)
 "Data\n"
 RSRTX_VAL_CAN_FRAME_TYPE_REMOTE (1)
 "Remote\n"
 RSRTX_VAL_CAN_FRAME_TYPE_ERROR (2)
 "Error\n"
 RSRTX_VAL_CAN_FRAME_TYPE_OVER_LOAD (3)
 "Over Load\n"
 RSRTX_VAL_CAN_FRAME_TYPE_ANY (4)
 "Any\n"

v rsrtx_rngProtocolCANIDType DataType="i"

 RSRTX_VAL_CAN_ID_TYPE_B11 (0)
 "Standard format, 11 bit\n"
 RSRTX_VAL_CAN_ID_TYPE_B29 (1)
 "Extended format, 29 bit\n"
 RSRTX_VAL_CAN_ID_TYPE_ANY (2)
 "Any\n"

v rsrtx_rngProtocolCANSearchFrameSetup DataType="i"

 RSRTX_VAL_CAN_SEARCH_FRAME_SOF (0)
 "Start of Frame\n"
 RSRTX_VAL_CAN_SEARCH_FRAME_EOF (1)
 "End of Frame\n"
 RSRTX_VAL_CAN_SEARCH_FRAME_OVER (2)
 "Overload Frame\n"
 RSRTX_VAL_CAN_SEARCH_FRAME_ERR (3)
 "Error Frame\n"
 RSRTX_VAL_CAN_SEARCH_FRAME_DTA11 (4)
 "Data Frame with 11bit Identifier\n"
 RSRTX_VAL_CAN_SEARCH_FRAME_DTA29 (5)
 "Data Frame with 29bit Identifier\n"
 RSRTX_VAL_CAN_SEARCH_FRAME_REM11 (6)
 "Remote Frame with 11bit Identifier\n"
 RSRTX_VAL_CAN_SEARCH_FRAME_REM29 (7)
 "Remote Frame with 29bit Identifier\n"

v rsrtx_rngProtocolCANSearchFrameType DataType="i"

 RSRTX_VAL_CAN_SEARCH_FRAME_TYPE_DATA (0)
 "Data\n"
 RSRTX_VAL_CAN_SEARCH_FRAME_TYPE_REMOTE (1)
 "Remote\n"
 RSRTX_VAL_CAN_SEARCH_FRAME_TYPE_ANY (2)
 "Any\n"

v rsrtx_rngProtocolLINPolarity DataType="i"

 RSRTX_VAL_LIN_ACTLOW (0)
 "Low active (low = 0)\n"
 RSRTX_VAL_LIN_ACTHIGH (1)
 "High active (high = 1)\n"

v rsrtx_rngProtocolSPIMISOPolarity DataType="i"

 RSRTX_VAL_ACTLOW (0)
 "Low active (low = 1)\n"
 RSRTX_VAL_ACTHIGH (1)
 "High active (high = 1)\n"

v rsrtx_rngDigitalHysteresis DataType="i"

 RSRTX_VAL_DIGITAL_HYSTERESIS_SMALL (0)
 "Small\n"
 RSRTX_VAL_DIGITAL_HYSTERESIS_MEDIUM (1)
 "Medium\n"
 RSRTX_VAL_DIGITAL_HYSTERESIS_LARGE (2)
 "Large\n"

v rsrtx_rngTriggerHoldoffMode DataType="i"

 RSRTX_VAL_HOLDOFF_MODE_TIME (0)
 "Time\n"
 RSRTX_VAL_HOLDOFF_MODE_OFF (1)
 "Off\n"

v rsrtx_rngTriggerPatternMode DataType="i"

 RSRTX_VAL_PATTERN_MODE_OFF (0)
 "Disables the time limitation.\n"
 RSRTX_VAL_PATTERN_MODE_TIMEOUT (1)
 "Defines how long at least the result of the state pattern condition\n"
 RSRTX_VAL_PATTERN_MODE_WIDTH (2)
 "Defines a time range for keeping up the true result of the pattern\n"

v rsrtx_rngTriggerOutMode DataType="i"

 RSRTX_VAL_TRIGGER_OUT_MODE_OFF (0)
 "No output\n"
 RSRTX_VAL_TRIGGER_OUT_MODE_TRIG (1)
 "Outputs a pulse when the instrument triggers.\n"
 RSRTX_VAL_TRIGGER_OUT_MODE_MASK (2)
 "Outputs a pulse when a mask is violated. This function is only available if a mask is specified.\n"
 RSRTX_VAL_TRIGGER_OUT_MODE_REF (3)
 "Outputs a 10 MHz reference frequency.\n"
 RSRTX_VAL_TRIGGER_OUT_MODE_GEN (4)
 "Outputs the waveform specified using the function generator (requires option R&S RTB-B6)\n"

v rsrtx_rngDigitalTechnology DataType="i"

 RSRTX_VAL_DIGITAL_TECHNOLOGY_TTL (0)
 "TTL\n"
 RSRTX_VAL_DIGITAL_TECHNOLOGY_ECL (1)
 "ECL\n"
 RSRTX_VAL_DIGITAL_TECHNOLOGY_CMOS (2)
 "CMOS\n"
 RSRTX_VAL_DIGITAL_TECHNOLOGY_MANUAL (3)
 "Manual\n"

v rsrtx_rngParallelBusFrameEnabled DataType="i"

 RSRTX_PARALLEL_BUS_ENABLED_OK (0)
 "Ok\n"
 RSRTX_PARALLEL_BUS_ENABLED_ERROR (1)
 "Error\n"
 RSRTX_PARALLEL_BUS_ENABLED_INS (2)
 "Insufficient\n"

v rsrtx_rngI2CFrameTransferDirection DataType="i"

 RSRTX_VAL_TRANSFER_DIRECTION_INC (0)
 "The frame is not completely contained in the acquisition.\n"
 RSRTX_VAL_TRANSFER_DIRECTION_READ (1)
 "Read\n"
 RSRTX_VAL_TRANSFER_DIRECTION_WRITE (2)
 "Write\n"
 RSRTX_VAL_TRANSFER_DIRECTION_EITH (3)
 "Either\n"
 RSRTX_VAL_TRANSFER_DIRECTION_UNDF (4)
 "Access is not defined.\n"

v rsrtx_rngFrameAddressLength DataType="i"

 RSRTX_VAL_FRAME_ADDRESS_LENGTH_BIT7 (0)
 "7 Bit\n"
 RSRTX_VAL_FRAME_ADDRESS_LENGTH_BIT10 (1)
 "10 Bit\n"

v rsrtx_rngLINFrameStatus DataType="i"

 RSRTX_VAL_LIN_FRAME_STATUS_OK (0)
 "Ok\n"
 RSRTX_VAL_LIN_FRAME_STATUS_UART (1)
 "UART\n"
 RSRTX_VAL_LIN_FRAME_STATUS_CHCK (2)
 "Checksum\n"
 RSRTX_VAL_LIN_FRAME_STATUS_PRER (3)
 "Protocol Error\n"
 RSRTX_VAL_LIN_FRAME_STATUS_SYER (4)
 "System Error\n"
 RSRTX_VAL_LIN_FRAME_STATUS_WAK (5)
 "Weakup\n"
 RSRTX_VAL_LIN_FRAME_STATUS_INS (6)
 "Insufficient\n"
 RSRTX_VAL_LIN_FRAME_STATUS_ERR (7)
 "Error\n"
 RSRTX_VAL_LIN_FRAME_STATUS_LEN (8)
 "Lener\n"

v rsrtx_rngLINChecksum DataType="i"

 RSRTX_VAL_LIN_CHECKSUM_OK (0)
 "Ok\n"
 RSRTX_VAL_LIN_CHECKSUM_ERR (1)
 "Error\n"
 RSRTX_VAL_LIN_CHECKSUM_UNDF (2)
 "Undefined\n"

v rsrtx_rngLINParity DataType="i"

 RSRTX_VAL_LIN_PARITY_OK (0)
 "Ok\n"
 RSRTX_VAL_LIN_PARITY_PRER (1)
 "Parity Error\n"
 RSRTX_VAL_LIN_PARITY_UVAL (2)
 "Unexpected Value\n"
 RSRTX_VAL_LIN_PARITY_INS (3)
 "Insufficient\n"

v rsrtx_rngLINFrameVersion DataType="i"

 RSRTX_VAL_FRAME_VERSION_V1X (0)
 "V1X\n"
 RSRTX_VAL_FRAME_VERSION_V2X (1)
 "V2X\n"
 RSRTX_VAL_FRAME_VERSION_UNK (2)
 "Unknown\n"

v rsrtx_rngLINByteEnabled DataType="i"

 RSRTX_VAL_LIN_BYTE_ENABLED_OK (0)
 "Ok\n"
 RSRTX_VAL_LIN_BYTE_ENABLED_INS (1)
 "Insufficient\n"
 RSRTX_VAL_LIN_BYTE_ENABLED_UART (2)
 "At least one UART error occured. LIN uses UART words without\n"

v rsrtx_rngUARTWordEnabled DataType="i"

 RSRTX_VAL_UART_STATE_OK (0)
 "Ok\n"
 RSRTX_VAL_UART_STATE_FRST (1)
 "Frst\n"
 RSRTX_VAL_UART_STATE_FREN (2)
 "Fren\n"
 RSRTX_VAL_UART_STATE_FRME (3)
 "Frme\n"
 RSRTX_VAL_UART_STATE_STER (4)
 "Ster\n"
 RSRTX_VAL_UART_STATE_SPER (5)
 "Sper\n"
 RSRTX_VAL_UART_STATE_PRER (6)
 "Prer\n"
 RSRTX_VAL_UART_STATE_INS (7)
 "Insufficient\n"
 RSRTX_VAL_UART_STATE_BRE (8)
 "Break\n"

v rsrtx_rngCANFrameType DataType="i"

 RSRTX_VAL_CAN_FRAME_TYPE_DATA (0)
 "Data\n"
 RSRTX_VAL_CAN_FRAME_TYPE_REM (1)
 "Remote\n"
 RSRTX_VAL_CAN_FRAME_TYPE_ERR (2)
 "Error\n"
 RSRTX_VAL_CAN_FRAME_TYPE_OVLD (3)
 "Overload\n"

v rsrtx_rngCANFrameStatus DataType="i"

 RSRTX_VAL_CAN_FRAME_STATUS_OK (0)
 "Ok\n"
 RSRTX_VAL_CAN_FRAME_STATUS_BTST (1)
 "Bit Stuffing Error\n"
 RSRTX_VAL_CAN_FRAME_STATUS_CRCD (2)
 "Wrong CRC\n"
 RSRTX_VAL_CAN_FRAME_STATUS_ACKD (3)
 "Wrong ACK\n"
 RSRTX_VAL_CAN_FRAME_STATUS_CRC (4)
 "Cyclic Redundancy Check\n"
 RSRTX_VAL_CAN_FRAME_STATUS_EOFD (5)
 "Wrong End of Frame\n"
 RSRTX_VAL_CAN_FRAME_STATUS_NOAC (6)
 "Acknowledge Missing\n"
 RSRTX_VAL_CAN_FRAME_STATUS_INS (7)
 "Insufficient\n"

v rsrtx_rngCANAckState DataType="i"

 RSRTX_VAL_CAN_ACK_OK (0)
 "Ok\n"
 RSRTX_VAL_CAN_ACK_UNDF (1)
 "Undefined\n"

v rsrtx_rngMeasurementSource DataType="i"

 RSRTX_VAL_MEASUREMENT_SOURCE_NONE (0)
 "None\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_CH1 (1)
 "Channel 1\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_CH2 (2)
 "Channel 2\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_CH3 (3)
 "Channel 3\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_CH4 (4)
 "Channel 4\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_M1 (5)
 "Math 1\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_M2 (6)
 "Math 2\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_M3 (7)
 "Math 3\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_M4 (8)
 "Math 4\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_M5 (9)
 "Math 5\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_R1 (10)
 "Reference 1\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_R2 (11)
 "Reference 2\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_R3 (12)
 "Reference 3\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_R4 (13)
 "Reference 4\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_TRIG (14)
 "Trigger\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_D1 (15)
 "Digital Channel 1\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_D2 (16)
 "Digital Channel 2\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_D3 (17)
 "Digital Channel 3\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_D4 (18)
 "Digital Channel 4\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_D5 (19)
 "Digital Channel 5\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_D6 (20)
 "Digital Channel 6\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_D7 (21)
 "Digital Channel 7\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_D8 (22)
 "Digital Channel 8\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_D9 (23)
 "Digital Channel 9\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_D10 (24)
 "Digital Channel 10\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_D11 (25)
 "Digital Channel 11\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_D12 (26)
 "Digital Channel 12\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_D13 (27)
 "Digital Channel 13\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_D14 (28)
 "Digital Channel 14\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_D15 (29)
 "Digital Channel 15\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_D70 (30)
 "Active digital channels D0...D7 (pod 1), available if MSO option B1 is installed.\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_D158 (31)
 "Active digital channels D8...D15 (pod 2), available if MSO option B1 is installed.\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_D0 (32)
 "Digital Channel 0\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_SPEC (33)
 "Mormal spectrum waveform\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_MINH (34)
 "Waveform of the minimum amplitude spectrum\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_MAXH (35)
 "Waveform of the maximum amplitude spectrum\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_AVER (36)
 "Avarage amplitude spectrum\n"
 RSRTX_VAL_MEASUREMENT_SOURCE_QMA (37)
 "QMA\n"

v rsrtx_rngPowerAnalysisType DataType="i"

 RSRTX_VAL_POWER_ANALYSIS_TYPE_OFF (0)
 "Off\n"
 RSRTX_VAL_POWER_ANALYSIS_TYPE_QUAL (1)
 "Quality\n"
 RSRTX_VAL_POWER_ANALYSIS_TYPE_CONS (2)
 "Consumption\n"
 RSRTX_VAL_POWER_ANALYSIS_TYPE_HARM (3)
 "Current Harmonics\n"
 RSRTX_VAL_POWER_ANALYSIS_TYPE_RIPP (4)
 "Ripple\n"
 RSRTX_VAL_POWER_ANALYSIS_TYPE_SPEC (5)
 "Spectrum\n"
 RSRTX_VAL_POWER_ANALYSIS_TYPE_SLEW (6)
 "Slewrate\n"
 RSRTX_VAL_POWER_ANALYSIS_TYPE_DONR (7)
 "Dynamic On Resistance\n"
 RSRTX_VAL_POWER_ANALYSIS_TYPE_EFFS (8)
 "Efficiency\n"
 RSRTX_VAL_POWER_ANALYSIS_TYPE_TURN (9)
 "Turn Off\n"
 RSRTX_VAL_POWER_ANALYSIS_TYPE_TRAN (10)
 "Transient\n"
 RSRTX_VAL_POWER_ANALYSIS_TYPE_SWITC (11)
 "Switchingloss\n"
 RSRTX_VAL_POWER_ANALYSIS_TYPE_MOD (12)
 "Modulation\n"
 RSRTX_VAL_POWER_ANALYSIS_TYPE_INR (13)
 "Inrush Current\n"
 RSRTX_VAL_POWER_ANALYSIS_TYPE_SOA (14)
 "Safe Operating Area\n"

v rsrtx_rngStatistics DataType="i"

 RSRTX_VAL_STATISTICS_ACT (0)
 "Actual\n"
 RSRTX_VAL_STATISTICS_AVG (1)
 "Average\n"
 RSRTX_VAL_STATISTICS_STDD (2)
 "Standard Deviation\n"
 RSRTX_VAL_STATISTICS_NPE (3)
 "Minimum\n"
 RSRTX_VAL_STATISTICS_PPE (4)
 "Maximum\n"
 RSRTX_VAL_STATISTICS_WFMC (5)
 "Waveform Count\n"

v rsrtx_rngQualityType DataType="i"

 RSRTX_VAL_QUALITY_TYPE_RMS (0)
 "RMS\n"
 RSRTX_VAL_QUALITY_TYPE_FREQ (1)
 "Frequency\n"
 RSRTX_VAL_QUALITY_TYPE_CRES (2)
 "Crest Factor\n"

v rsrtx_rngQualityTypePower DataType="i"

 RSRTX_VAL_QUALITY_TYPE_POWER_REAL (0)
 "Real Power\n"
 RSRTX_VAL_QUALITY_TYPE_POWER_REAC (1)
 "Reactive\n"
 RSRTX_VAL_QUALITY_TYPE_POWER_APP (2)
 "Apparent\n"
 RSRTX_VAL_QUALITY_TYPE_POWER_PFAC (3)
 "Factor\n"
 RSRTX_VAL_QUALITY_TYPE_POWER_PHAS (4)
 "Phase\n"

v rsrtx_rngHarmonicsStandard DataType="i"

 RSRTX_VAL_CURRENT_HARMONICS_STANDARD_ENA (0)
 "ENA\n"
 RSRTX_VAL_CURRENT_HARMONICS_STANDARD_ENB (1)
 "ENB\n"
 RSRTX_VAL_CURRENT_HARMONICS_STANDARD_ENC (2)
 "ENC\n"
 RSRTX_VAL_CURRENT_HARMONICS_STANDARD_END (3)
 "END\n"
 RSRTX_VAL_CURRENT_HARMONICS_STANDARD_MIL (4)
 "MIL\n"
 RSRTX_VAL_CURRENT_HARMONICS_STANDARD_RTC (5)
 "RTC\n"

v rsrtx_rngHarmonicsType DataType="i"

 RSRTX_VAL_HARMONICS_TYPE_VIOLENT_COUNT (0)
 "Violent Count\n"
 RSRTX_VAL_HARMONICS_TYPE_FREQUENCY (1)
 "Frequency\n"
 RSRTX_VAL_HARMONICS_TYPE_LEVEL (2)
 "Level\n"
 RSRTX_VAL_HARMONICS_TYPE_MINIMUM (3)
 "Minimum\n"
 RSRTX_VAL_HARMONICS_TYPE_MAXIMUM (4)
 "Maximum\n"
 RSRTX_VAL_HARMONICS_TYPE_AVERAGE (5)
 "Mean\n"
 RSRTX_VAL_HARMONICS_TYPE_LIMIT (6)
 "Limit\n"
 RSRTX_VAL_HARMONICS_TYPE_WFMC (7)
 "Waveform Count\n"

v rsrtx_rngLimitCheck DataType="i"

 RSRTX_VAL_FAIL (0)
 "Fail\n"
 RSRTX_VAL_PASS (1)
 "Pass\n"

v rsrtx_rngRippleType DataType="i"

 RSRTX_VAL_RIPPLE_TYPE_FREQUENCY (0)
 "Frequency\n"
 RSRTX_VAL_RIPPLE_TYPE_PEAK (1)
 "Peak\n"
 RSRTX_VAL_RIPPLE_TYPE_STD_DEV (2)
 "Standard Deviation\n"
 RSRTX_VAL_RIPPLE_TYPE_UPEAK (3)
 "Upper Peak\n"
 RSRTX_VAL_RIPPLE_TYPE_LPEAK (4)
 "Lower Peak\n"
 RSRTX_VAL_RIPPLE_TYPE_MEAN (5)
 "Mean\n"
 RSRTX_VAL_RIPPLE_TYPE_PERIOD (6)
 "Period\n"
 RSRTX_VAL_RIPPLE_TYPE_PDCYCLE (7)
 "Positive Duty Cycle\n"
 RSRTX_VAL_RIPPLE_TYPE_NDCYCLE (8)
 "Negative Duty Cycle\n"

v rsrtx_rngSpectrumType DataType="i"

 RSRTX_VAL_SPECTRUM_TYPE_FREQUENCY (0)
 "Frequency\n"
 RSRTX_VAL_SPECTRUM_TYPE_LEVEL (1)
 "Level\n"
 RSRTX_VAL_SPECTRUM_TYPE_MINIMUM (2)
 "Minimum\n"
 RSRTX_VAL_SPECTRUM_TYPE_MAXIMUM (3)
 "Maximum\n"
 RSRTX_VAL_SPECTRUM_TYPE_AVERAGE (4)
 "Average\n"
 RSRTX_VAL_SPECTRUM_TYPE_WFMC (5)
 "Waveform Count\n"

v rsrtx_rngHarmonicsFundamental DataType="i"

 RSRTX_VAL_HARMONICS_FUNDAMENTAL_AUTO (0)
 "Auto\n"
 RSRTX_VAL_HARMONICS_FUNDAMENTAL_F60 (1)
 "F50\n"
 RSRTX_VAL_HARMONICS_FUNDAMENTAL_F50 (2)
 "F60\n"

v rsrtx_rngSlewRateType DataType="i"

 RSRTX_VAL_SLEW_RATE_TYPE_UPEAK (1)
 "Upper Peak\n"
 RSRTX_VAL_SLEW_RATE_TYPE_LPEAK (0)
 "Lower Peak\n"

v rsrtx_rngModulationType DataType="i"

 RSRTX_VAL_MODULATION_TYPE_PER (0)
 "Period\n"
 RSRTX_VAL_MODULATION_TYPE_FREQ (1)
 "Frequency\n"
 RSRTX_VAL_MODULATION_TYPE_PDCY (2)
 "Positive Duty Cycle\n"
 RSRTX_VAL_MODULATION_TYPE_NDCY (3)
 "Negative Duty Cycle\n"
 RSRTX_VAL_MODULATION_TYPE_PPW (4)
 "Positive Pulse Width\n"
 RSRTX_VAL_MODULATION_TYPE_NPW (5)
 "Negative Pulse Width\n"

v rsrtx_rngModulationResultType DataType="i"

 RSRTX_VAL_MODULATION_RESULT_TYPE_LPE (0)
 "Lower Peak\n"
 RSRTX_VAL_MODULATION_RESULT_TYPE_UPE (1)
 "Upper Peak\n"
 RSRTX_VAL_MODULATION_RESULT_TYPE_MEAN (2)
 "Mean\n"
 RSRTX_VAL_MODULATION_RESULT_TYPE_RMS (3)
 "RMS\n"
 RSRTX_VAL_MODULATION_RESULT_TYPE_STDD (4)
 "Standard Deviation\n"

v rsrtx_rngEfficiencyType DataType="i"

 RSRTX_VAL_EFFICIENCY_TYPE_EFFICIENCY (0)
 "Efficiency\n"
 RSRTX_VAL_EFFICIENCY_TYPE_INPUT (1)
 "Input\n"
 RSRTX_VAL_EFFICIENCY_TYPE_OUTPUT (2)
 "Output\n"

v rsrtx_rngSwitchinglossType DataType="i"

 RSRTX_VAL_SWITCHINGLOSS_TYPE_ENERGY (0)
 "Energy\n"
 RSRTX_VAL_SWITCHINGLOSS_TYPE_POWER (1)
 "Power\n"

v rsrtx_rngOnOffType DataType="i"

 RSRTX_VAL_ON_OFF_TYPE_ON (1)
 "On\n"
 RSRTX_VAL_ON_OFF_TYPE_OFF (0)
 "Off\n"

v rsrtx_rngPowerAnalysisSource DataType="i"

 RSRTX_VAL_POWER_ANALYSIS_SOURCE_CH1 (1)
 "Channel 1\n"
 RSRTX_VAL_POWER_ANALYSIS_SOURCE_CH2 (2)
 "Channel 2\n"
 RSRTX_VAL_POWER_ANALYSIS_SOURCE_CH3 (3)
 "Channel 3\n"
 RSRTX_VAL_POWER_ANALYSIS_SOURCE_CH4 (4)
 "Channel 4\n"
 RSRTX_VAL_POWER_ANALYSIS_SOURCE_RE1 (5)
 "RE1\n"
 RSRTX_VAL_POWER_ANALYSIS_SOURCE_RE2 (6)
 "RE2\n"
 RSRTX_VAL_POWER_ANALYSIS_SOURCE_RE3 (7)
 "RE3\n"
 RSRTX_VAL_POWER_ANALYSIS_SOURCE_RE4 (8)
 "RE4\n"

v rsrtx_rngAudioVariant DataType="i"

 RSRTX_VAL_AUDIO_VARIANT_I2S (0)
 "Inter-IC Sound standard audio format.\n"
 RSRTX_VAL_AUDIO_VARIANT_LJ (1)
 "Left-justified data format\n"
 RSRTX_VAL_AUDIO_VARIANT_RJ (2)
 "Right-justified data format\n"
 RSRTX_VAL_AUDIO_VARIANT_TDM (3)
 "Time Division Multiplexed audio format\n"

v rsrtx_rngAudioClockPolarity DataType="i"

 RSRTX_VAL_FALLING (0)
 "Falling\n"
 RSRTX_VAL_RISING (1)
 "Rising\n"

v rsrtx_rngAudioWSPolarity DataType="i"

 RSRTX_VAL_NORMAL (0)
 "Normal\n"
 RSRTX_VAL_INVERT (1)
 "Invert\n"

v rsrtx_rngAudioChannelOrder DataType="i"

 RSRTX_VAL_AUDIO_ORDER_LEFT (0)
 "Left First\n"
 RSRTX_VAL_AUDIO_ORDER_RIGHT (1)
 "Right First\n"

v rsrtx_rngProtocolAudioBitOrder DataType="i"

 RSRTX_VAL_AUDIO_MSBF (0)
 "Most significant bit\n"
 RSRTX_VAL_AUDIO_LSBF (1)
 "Least significant bit\n"

v rsrtx_rngAudioTriggerType DataType="i"

 RSRTX_VAL_AUDIO_TRIGGER_DATA (0)
 "Data\n"
 RSRTX_VAL_AUDIO_TRIGGER_WINDOW (1)
 "Window\n"
 RSRTX_VAL_AUDIO_TRIGGER_WSEL (2)
 "Word Select\n"
 RSRTX_VAL_AUDIO_TRIGGER_ECON (3)
 "Error Condition\n"

v rsrtx_rngAudioFrameStatus DataType="i"

 RSRTX_VAL_AUDIO_FRAME_STATE_OK (0)
 "The frame is valid\n"
 RSRTX_VAL_AUDIO_FRAME_STATE_ERR (1)
 "An error occured in the frame\n"
 RSRTX_VAL_AUDIO_FRAME_STATE_INS (2)
 "The frame is not completely contained in the acquisition. The acquired part of the frame is valid.\n"

v rsrtx_rngTrackDisplayMode DataType="i"

 RSRTX_VAL_TRACK_DISPLAY_MODE_SEQ (0)
 "Sequential\n"
 RSRTX_VAL_TRACK_DISPLAY_MODE_PAR (1)
 "Parallel\n"
 RSRTX_VAL_TRACK_DISPLAY_MODE_STR (2)
 "Sequential + Track\n"
 RSRTX_VAL_TRACK_DISPLAY_MODE_PTR (3)
 "Parallel + Track\n"
 RSRTX_VAL_TRACK_DISPLAY_MODE_TRAC (4)
 "Track\n"
 RSRTX_VAL_TRACK_DISPLAY_MODE_SDS (5)
 "Sequential + Bits\n"

v rsrtx_rngAudioTriggerCondition DataType="i"

 RSRTX_VAL_AUDIO_CONDITION_OFF (0)
 "No range is defined.\n"
 RSRTX_VAL_AUDIO_CONDITION_EQU (1)
 "Equal. Requires one data word to be set.\n"
 RSRTX_VAL_AUDIO_CONDITION_NEQ (2)
 "Not equal. Requires one data word to be set.\n"
 RSRTX_VAL_AUDIO_CONDITION_GTH (3)
 "Greater than. Requires one data word to be set.\n"
 RSRTX_VAL_AUDIO_CONDITION_LTH (4)
 "Less than. Requires one data word to be set.\n"
 RSRTX_VAL_AUDIO_CONDITION_INR (5)
 "In range. Requires two data words to be set.\n"
 RSRTX_VAL_AUDIO_CONDITION_OOR (6)
 "Out of range. Requires two data words to be set.\n"

v rsrtx_rngAudioTriggerCombination DataType="i"

 RSRTX_VAL_AUDIO_COMBINATION_AND (0)
 "And\n"
 RSRTX_VAL_AUDIO_COMBINATION_OR (1)
 "Or\n"

v rsrtx_rngSelfAlignmentState DataType="i"

 RSRTX_VAL_SELF_ALIGNMENT_NO_ALIGNMENT (0)
 "No Alignment\n"
 RSRTX_VAL_SELF_ALIGNMENT_RUN (1)
 "Run\n"
 RSRTX_VAL_SELF_ALIGNMENT_ERROR (2)
 "Error\n"
 RSRTX_VAL_SELF_ALIGNMENT_OK (3)
 "Ok\n"
 RSRTX_VAL_SELF_ALIGNMENT_ABORT (4)
 "Abort\n"

v rsrtx_rngMILSTDCodeType DataType="i"

 RSRTX_VAL_MILSTD_CODE_TYPE_DBC (0)
 "Dynamic bus control\n"
 RSRTX_VAL_MILSTD_CODE_TYPE_TSYN (1)
 "Synchronize without data\n"
 RSRTX_VAL_MILSTD_CODE_TYPE_TST (2)
 "Transmit status word\n"
 RSRTX_VAL_MILSTD_CODE_TYPE_SEL (3)
 "Selftest\n"
 RSRTX_VAL_MILSTD_CODE_TYPE_TSH (4)
 "Transmitter shutdown\n"
 RSRTX_VAL_MILSTD_CODE_TYPE_OTSH (5)
 "Override transmitter shutdown\n"
 RSRTX_VAL_MILSTD_CODE_TYPE_ITER (6)
 "Inhibit terminal flag\n"
 RSRTX_VAL_MILSTD_CODE_TYPE_OIT (7)
 "Override inhibit terminal flag\n"
 RSRTX_VAL_MILSTD_CODE_TYPE_RES (8)
 "Reset remote terminal\n"
 RSRTX_VAL_MILSTD_CODE_TYPE_VECT (9)
 "Transmit vector word\n"
 RSRTX_VAL_MILSTD_CODE_TYPE_RSYN (10)
 "Synchronize with data\n"
 RSRTX_VAL_MILSTD_CODE_TYPE_TLAS (11)
 "Transmit last command word\n"
 RSRTX_VAL_MILSTD_CODE_TYPE_BITW (12)
 "BitWord\n"
 RSRTX_VAL_MILSTD_CODE_TYPE_STSH (13)
 "Sselected transmitter shutdown\n"
 RSRTX_VAL_MILSTD_CODE_TYPE_OSTS (14)
 "Override selected transmitter shutdown\n"
 RSRTX_VAL_MILSTD_CODE_TYPE_ANY (15)
 "Any\n"

v rsrtx_rngMILSTDStatus DataType="i"

 RSRTX_VAL_MILSTD_STATUS_OK (0)
 "Ok\n"
 RSRTX_VAL_MILSTD_STATUS_INS (1)
 "Insufficient\n"
 RSRTX_VAL_MILSTD_STATUS_PERR (2)
 "PError\n"
 RSRTX_VAL_MILSTD_STATUS_MERR (3)
 "Message Error\n"
 RSRTX_VAL_MILSTD_STATUS_TERR (4)
 "Terror\n"
 RSRTX_VAL_MILSTD_STATUS_SERR (5)
 "Serror\n"

v rsrtx_rngMILSTDDirection DataType="i"

 RSRTX_VAL_MILSTD_DIRECTION_TRANSMIT (0)
 "Transmit\n"
 RSRTX_VAL_MILSTD_DIRECTION_RECEIVE (1)
 "Receive\n"
 RSRTX_VAL_MILSTD_DIRECTION_EITHER (2)
 "Either\n"

v rsrtx_rngMILSTDType DataType="i"

 RSRTX_VAL_MILSTD_TYPE_COMMAND (0)
 "Command\n"
 RSRTX_VAL_MILSTD_TYPE_STATUS (1)
 "Status\n"
 RSRTX_VAL_MILSTD_TYPE_DATA (2)
 "Data\n"
 RSRTX_VAL_MILSTD_TYPE_CMCMODE (3)
 "CMCMode\n"

v rsrtx_rngMILSTDTriggerType DataType="i"

 RSRTX_VAL_MILSTD_TRIGGER_TYPE_SYNC (0)
 "Synchronization\n"
 RSRTX_VAL_MILSTD_TRIGGER_TYPE_FRAME (1)
 "Frame\n"
 RSRTX_VAL_MILSTD_TRIGGER_TYPE_ERROR (2)
 "Error\n"
 RSRTX_VAL_MILSTD_TRIGGER_TYPE_STATUS (3)
 "Status\n"
 RSRTX_VAL_MILSTD_TRIGGER_TYPE_DATA (4)
 "Data\n"
 RSRTX_VAL_MILSTD_TRIGGER_TYPE_COMMAND (5)
 "Command\n"
 RSRTX_VAL_MILSTD_TRIGGER_TYPE_CDATA (6)
 "CData\n"

v rsrtx_rngMILSTDTriggerSync DataType="i"

 RSRTX_VAL_MILSTD_TRIGGER_SYNC_CST (0)
 "C/S\n"
 RSRTX_VAL_MILSTD_TRIGGER_SYNC_DATA (1)
 "Data\n"
 RSRTX_VAL_MILSTD_TRIGGER_SYNC_ALL (2)
 "All\n"

v rsrtx_rngMILSTDTriggerWord DataType="i"

 RSRTX_VAL_MILSTD_TRIGGER_WORD_COMMAND (0)
 "Command\n"
 RSRTX_VAL_MILSTD_TRIGGER_WORD_STATUS (1)
 "Status\n"
 RSRTX_VAL_MILSTD_TRIGGER_WORD_DATA (2)
 "Data\n"
 RSRTX_VAL_MILSTD_TRIGGER_WORD_ALL (3)
 "All\n"

v rsrtx_rngMILSTDTriggerCommandType DataType="i"

 RSRTX_VAL_MILSTD_TRIGGER_COMMAND_AWORD (0)
 "Triggers on an address or word count\n"
 RSRTX_VAL_MILSTD_TRIGGER_COMMAND_MCODE (1)
 "Triggers on a mode code\n"

v rsrtx_rngMILSTDCondition DataType="i"

 RSRTX_VAL_MILSTD_CONDITION_OFF (0)
 "Off\n"
 RSRTX_VAL_MILSTD_CONDITION_EQU (1)
 "Equal\n"
 RSRTX_VAL_MILSTD_CONDITION_NEQ (2)
 "Not equal\n"
 RSRTX_VAL_MILSTD_CONDITION_GTH (3)
 "Greather Than\n"
 RSRTX_VAL_MILSTD_CONDITION_GEQ (4)
 "Greater Equal\n"
 RSRTX_VAL_MILSTD_CONDITION_LEQ (5)
 "Less Equal\n"
 RSRTX_VAL_MILSTD_CONDITION_LTH (6)
 "Less Than\n"
 RSRTX_VAL_MILSTD_CONDITION_WITH (7)
 "Within\n"
 RSRTX_VAL_MILSTD_CONDITION_OUTS (8)
 "Outside\n"

v rsrtx_rngMILSTDSubAddress DataType="i"

 RSRTX_VAL_MILSTD_TRIGGER_SUB_ADDRESS_A0 (0)
 "A0\n"
 RSRTX_VAL_MILSTD_TRIGGER_SUB_ADDRESS_A31 (1)
 "A31\n"
 RSRTX_VAL_MILSTD_TRIGGER_SUB_ADDRESS_EITH (2)
 "Either\n"

v rsrtx_rngMILSTDSearchCondition DataType="i"

 RSRTX_VAL_MILSTD_SEARCH_CONDITION_WORD_START (0)
 "Word Start\n"
 RSRTX_VAL_MILSTD_SEARCH_CONDITION_ERROR (1)
 "Error\n"
 RSRTX_VAL_MILSTD_SEARCH_CONDITION_STATUS (2)
 "Status\n"
 RSRTX_VAL_MILSTD_SEARCH_CONDITION_DATA (3)
 "Data\n"
 RSRTX_VAL_MILSTD_SEARCH_CONDITION_COMMAND (4)
 "Command\n"
 RSRTX_VAL_MILSTD_SEARCH_CONDITION_MODE_CODE (5)
 "Mode Code\n"
 RSRTX_VAL_MILSTD_SEARCH_CONDITION_COMMAND_DATA (6)
 "Command Data\n"

v rsrtx_rngMILSTDSearchError DataType="i"

 RSRTX_VAL_MILSTD_SEARCH_ERROR_SYNCHRONIZATION (0)
 "Synchronization\n"
 RSRTX_VAL_MILSTD_SEARCH_ERROR_PARITY (1)
 "Parity\n"
 RSRTX_VAL_MILSTD_SEARCH_ERROR_TIMEOUT (2)
 "Timeout\n"
 RSRTX_VAL_MILSTD_SEARCH_ERROR_MANCHESTER (3)
 "Manchester\n"
 RSRTX_VAL_MILSTD_SEARCH_ERROR_ANY (4)
 "Any\n"

v rsrtx_rngHistoryPlayer DataType="i"

 RSRTX_VAL_HISTORY_PLAYER_RUN (1)
 "Run\n"
 RSRTX_VAL_HISTORY_PLAYER_STOP (0)
 "Stop\n"

v rsrtx_rngHistorySpeed DataType="i"

 RSRTX_VAL_HISTORY_SPEED_SLOW (0)
 "Slow\n"
 RSRTX_VAL_HISTORY_SPEED_MEDIUM (1)
 "Medium\n"
 RSRTX_VAL_HISTORY_SPEED_FAST (2)
 "Fast\n"
 RSRTX_VAL_HISTORY_SPEED_AUTO (3)
 "Auto\n"

v rsrtx_rngThresholdHysteresis DataType="i"

 RSRTX_VAL_TRESHOLD_HYSTERESIS_SMALL (0)
 "Small\n"
 RSRTX_VAL_TRESHOLD_HYSTERESIS_MEDIUM (1)
 "Medium\n"
 RSRTX_VAL_TRESHOLD_HYSTERESIS_LARGE (2)
 "Large\n"

v rsrtx_rngStatus DataType="i"

 RSRTX_VAL_STATUS_0 (0)
 "0\n"
 RSRTX_VAL_STATUS_1 (1)
 "1\n"
 RSRTX_VAL_STATUS_X (2)
 "X\n"

v rsrtx_rngProtocolARINC429Polarity DataType="i"

 RSRTX_VAL_ARINC429_POLARITY_ALEG (0)
 "Selects A Leg polarity\n"
 RSRTX_VAL_ARINC429_POLARITY_BLEG (1)
 "Selects B Leg polarity\n"
 RSRTX_VAL_ARINC429_POLARITY_NORM (2)
 "Normal\n"
 RSRTX_VAL_ARINC429_POLARITY_INV (3)
 "Inverted\n"

v rsrtx_rngProtocolARINC429BitRateMode DataType="i"

 RSRTX_VAL_ARINC429_BIT_RATE_MODE_LOW (0)
 "Sets the bit rate mode to low speed.\n"
 RSRTX_VAL_ARINC429_BIT_RATE_MODE_HIGH (1)
 "Sets the bit rate mode to high speed.\n"
 RSRTX_VAL_ARINC429_BIT_RATE_MODE_USER (2)
 "User\n"

v rsrtx_rngARINC429WordStatus DataType="i"

 RSRTX_VAL_ARINC_WORD_STATUS_OK (0)
 "The word is valid.\n"
 RSRTX_VAL_ARINC_WORD_STATUS_CERR (1)
 "coding error occured.\n"
 RSRTX_VAL_ARINC_WORD_STATUS_GERR (2)
 "timing gap error occured.\n"
 RSRTX_VAL_ARINC_WORD_STATUS_PRER (3)
 "parity error occured.\n"
 RSRTX_VAL_ARINC_WORD_STATUS_INS (4)
 "Insufficient\n"
 RSRTX_VAL_ARINC_WORD_STATUS_INC (5)
 "Incomplete\n"

v rsrtx_rngProtocolARINC429DataFormat DataType="i"

 RSRTX_VAL_ARINC429_DATA_FORMAT_DATA (0)
 "Data\n"
 RSRTX_VAL_ARINC429_DATA_FORMAT_DSSM (1)
 "SSM+Data\n"
 RSRTX_VAL_ARINC429_DATA_FORMAT_DSDI (2)
 "SDI+Data\n"
 RSRTX_VAL_ARINC429_DATA_FORMAT_DSSS (3)
 "SSM+Data +SDI\n"

v rsrtx_rngProtocolARINC429Operator DataType="i"

 RSRTX_VAL_ARINC_COND_NQ (0)
 "Sets the operator to not equal.\n"
 RSRTX_VAL_ARINC_COND_EQ (1)
 "Sets the operator to equal.\n"
 RSRTX_VAL_ARINC_COND_LT (2)
 "Sets the operator to less than.\n"
 RSRTX_VAL_ARINC_COND_LE (3)
 "Sets the operator to less or equal than.\n"
 RSRTX_VAL_ARINC_COND_GT (4)
 "Sets the operator to greater than.\n"
 RSRTX_VAL_ARINC_COND_GE (5)
 "Sets the operator to greater or equal than.\n"
 RSRTX_VAL_ARINC_COND_WITH (6)
 "Sets the operator to in Within.\n"
 RSRTX_VAL_ARINC_COND_OUTS (7)
 "Sets the operator to Outside.\n"

v rsrtx_rngARINCSsmSdi DataType="i"

 RSRTX_VAL_ARINC_SSM_SDI_ANY (0)
 "ANY\n"
 RSRTX_VAL_ARINC_SSM_SDI_S00 (1)
 "S00\n"
 RSRTX_VAL_ARINC_SSM_SDI_S01 (2)
 "S01\n"
 RSRTX_VAL_ARINC_SSM_SDI_S10 (3)
 "S10\n"
 RSRTX_VAL_ARINC_SSM_SDI_S11 (4)
 "S11\n"

v rsrtx_rngARINC429TimingCondition DataType="i"

 RSRTX_VAL_ARINC_CONDITION_TIMING_GTH (0)
 "Sets the operator to greater than.\n"
 RSRTX_VAL_ARINC_CONDITION_TIMING_LTH (1)
 "Sets the operator to less than.\n"
 RSRTX_VAL_ARINC_CONDITION_TIMING_WITH (2)
 "Sets the operator to in Within.\n"
 RSRTX_VAL_ARINC_CONDITION_TIMING_OUTS (3)
 "Sets the operator to Outside.\n"

v rsrtx_rngARINC429WordType DataType="i"

 RSRTX_VAL_ARINC_WORD_TYPE_START (0)
 "Start\n"
 RSRTX_VAL_ARINC_WORD_TYPE_STOP (1)
 "Stop\n"

v rsrtx_rngARINC429Type DataType="i"

 RSRTX_VAL_TRIGGER_ARINC_TYPE_WORD (0)
 "Word\n"
 RSRTX_VAL_TRIGGER_ARINC_TYPE_ERROR (1)
 "Error\n"
 RSRTX_VAL_TRIGGER_ARINC_TYPE_LABEL (2)
 "Label\n"
 RSRTX_VAL_TRIGGER_ARINC_TYPE_LDATA (3)
 "LabelData\n"
 RSRTX_VAL_TRIGGER_ARINC_TYPE_TTIME (4)
 "Time\n"

v rsrtx_rngARINC429Error DataType="i"

 RSRTX_VAL_ARINC_ERROR_ANY (0)
 "Any\n"
 RSRTX_VAL_ARINC_ERROR_PARITY (1)
 "Parity\n"
 RSRTX_VAL_ARINC_ERROR_GAP (2)
 "Gap\n"
 RSRTX_VAL_ARINC_ERROR_CODING (3)
 "Coding\n"

v rsrtx_rngMILSTDTransmissionType DataType="i"

 RSRTX_MILSTD_TRANSMISSION_TYPE_BCRT (0)
 "Bus controller to remote terminal transmission\n"
 RSRTX_MILSTD_TRANSMISSION_TYPE_RTBC (1)
 "Remote terminal to bus controller transmission\n"
 RSRTX_MILSTD_TRANSMISSION_TYPE_RTRT (2)
 "Remote terminal to remote terminal transmission\n"
 RSRTX_MILSTD_TRANSMISSION_TYPE_MCD (3)
 "Mode code data\n"

v rsrtx_rngMILSTDSearchWordStart DataType="i"

 RSRTX_VAL_MILSTD_WORD_START_STATUS (0)
 "Status\n"
 RSRTX_VAL_MILSTD_WORD_START_DATA (1)
 "Data\n"
 RSRTX_VAL_MILSTD_WORD_START_COMMAND (2)
 "Command\n"

v rsrtx_rngHardcopyCommandSet DataType="i"

 RSRTX_VAL_COMMAND_SET_PCL5 (0)
 "PCL5\n"
 RSRTX_VAL_COMMAND_SET_PCLXI (1)
 "PCL XI\n"
 RSRTX_VAL_COMMAND_SET_PS (2)
 "Postscript\n"
 RSRTX_VAL_COMMAND_SET_DESK (3)
 "Deskjet\n"

v rsrtx_rngScaleLinLog DataType="i"

 RSRTX_VAL_SCALE_LIN (0)
 "Linear  scale\n"
 RSRTX_VAL_SCALE_LOG (1)
 "Logarithmic scale\n"

v rsrtx_rngHarmonicsFundamentalMIL DataType="i"

 RSRTX_VAL_HARMONICS_FUNDAMENTAL_MIL_F60 (0)
 "F60\n"
 RSRTX_VAL_HARMONICS_FUNDAMENTAL_MIL_F400 (1)
 "F400\n"

v rsrtx_rngHarmonicsFundamentalRTC DataType="i"

 RSRTX_VAL_HARMONICS_FUNDAMENTAL_RTC_F400 (0)
 "F400\n"
 RSRTX_VAL_HARMONICS_FUNDAMENTAL_RTC_NVF (1)
 "NVF\n"
 RSRTX_VAL_HARMONICS_FUNDAMENTAL_RTC_WVF (2)
 "WVF\n"

v rsrtx_rngProbeInputImpedance DataType="i"

 RSRTX_VAL_UNKNOWN (0)
 "Unknown termination\n"
 RSRTX_VAL_50OHM (1)
 "50 Ohm termination\n"
 RSRTX_VAL_1MOHM (2)
 "1 Mega Ohm termination\n"

v RsRtx_rngClockedSource DataType="i"

 RSRTX_VAL_CLOCKED_SOURCE_D0 (0)
 "D0\n"
 RSRTX_VAL_CLOCKED_SOURCE_D1 (1)
 "D1\n"
 RSRTX_VAL_CLOCKED_SOURCE_D2 (2)
 "D2\n"
 RSRTX_VAL_CLOCKED_SOURCE_D3 (3)
 "D3\n"
 RSRTX_VAL_CLOCKED_SOURCE_D4 (4)
 "D4\n"
 RSRTX_VAL_CLOCKED_SOURCE_D5 (5)
 "D5\n"
 RSRTX_VAL_CLOCKED_SOURCE_D6 (6)
 "D6\n"
 RSRTX_VAL_CLOCKED_SOURCE_D7 (7)
 "D7\n"
 RSRTX_VAL_CLOCKED_SOURCE_D8 (8)
 "D8\n"
 RSRTX_VAL_CLOCKED_SOURCE_D9 (9)
 "D9\n"
 RSRTX_VAL_CLOCKED_SOURCE_D10 (10)
 "D10\n"
 RSRTX_VAL_CLOCKED_SOURCE_D11 (11)
 "D11\n"
 RSRTX_VAL_CLOCKED_SOURCE_D12 (12)
 "D12\n"
 RSRTX_VAL_CLOCKED_SOURCE_D13 (13)
 "D13\n"
 RSRTX_VAL_CLOCKED_SOURCE_D14 (14)
 "D14\n"
 RSRTX_VAL_CLOCKED_SOURCE_D15 (15)
 "D15\n"

v RsRtx_rngParallelBitSource DataType="i"

 RSRTX_VAL_PARALLEL_BIT_SOURCE_D0 (0)
 "D0\n"
 RSRTX_VAL_PARALLEL_BIT_SOURCE_D1 (1)
 "D1\n"
 RSRTX_VAL_PARALLEL_BIT_SOURCE_D2 (2)
 "D2\n"
 RSRTX_VAL_PARALLEL_BIT_SOURCE_D3 (3)
 "D3\n"
 RSRTX_VAL_PARALLEL_BIT_SOURCE_D4 (4)
 "D4\n"
 RSRTX_VAL_PARALLEL_BIT_SOURCE_D5 (5)
 "D5\n"
 RSRTX_VAL_PARALLEL_BIT_SOURCE_D6 (6)
 "D6\n"
 RSRTX_VAL_PARALLEL_BIT_SOURCE_D7 (7)
 "D7\n"
 RSRTX_VAL_PARALLEL_BIT_SOURCE_D8 (8)
 "D8\n"
 RSRTX_VAL_PARALLEL_BIT_SOURCE_D9 (9)
 "D9\n"
 RSRTX_VAL_PARALLEL_BIT_SOURCE_D10 (10)
 "D10\n"
 RSRTX_VAL_PARALLEL_BIT_SOURCE_D11 (11)
 "D11\n"
 RSRTX_VAL_PARALLEL_BIT_SOURCE_D12 (12)
 "D12\n"
 RSRTX_VAL_PARALLEL_BIT_SOURCE_D13 (13)
 "D13\n"
 RSRTX_VAL_PARALLEL_BIT_SOURCE_D14 (14)
 "D14\n"
 RSRTX_VAL_PARALLEL_BIT_SOURCE_D15 (15)
 "D15\n"

v RsRtx_rngDVMType DataType="i"

 RSRTX_VAL_DVM_TYPE_DC (0)
 "Mean value of the signal.\n"
 RSRTX_VAL_DVM_TYPE_ACDC (1)
 "RMS value of the signal.\n"
 RSRTX_VAL_DVM_TYPE_ACRM (2)
 "RMS value of the signal's AC component.\n"
 RSRTX_VAL_DVM_TYPE_UPE (3)
 "Maximum value.\n"
 RSRTX_VAL_DVM_TYPE_LPE (4)
 "Minimum value\n"
 RSRTX_VAL_DVM_TYPE_PEAK (5)
 "Peak-to-peak value (maximum - minimum).\n"
 RSRTX_VAL_DVM_TYPE_CRES (6)
 "Crest factor.\n"
 RSRTX_VAL_DVM_TYPE_OFF (7)
 "Disables the measurement.\n"

v RsRtx_rngDVMPosition DataType="i"

 RSRTX_VAL_DVM_POSITION_TLEFT (0)
 "Top Left Corner\n"
 RSRTX_VAL_DVM_POSITION_TRIGHT (1)
 "Top Right Corner\n"
 RSRTX_VAL_DVM_POSITION_BLEFT (2)
 "Bottom Left Corner\n"
 RSRTX_VAL_DVM_POSITION_BRIGHT (3)
 "Bottom Right Corner\n"

v RsRtx_rngMagnitudeScale DataType="i"

 RSRTX_VAL_MAGNITUDE_SCALE_LIN (0)
 "Linear\n"
 RSRTX_VAL_MAGNITUDE_SCALE_DBM (1)
 "dBM\n"
 RSRTX_VAL_MAGNITUDE_SCALE_DBC (2)
 "dBV\n"
 RSRTX_VAL_MAGNITUDE_SCALE_DBUV (3)
 "dBuV\n"

v RsRtx_rngSpectrumFrequencyWindowType DataType="i"

 RSRTX_VAL_SPECTRUM_FREQ_WINDOW_TYPE_RECT (0)
 "The rectangular window has high frequency accuracy with thin spectral lines, but with increased noise. Use this function preferably with pulse response tests where start and end values are zero.\n"
 RSRTX_VAL_SPECTRUM_FREQ_WINDOW_TYPE_HAMM (1)
 "The Hamming window has higher noise level inside the spectrum than Hann or Blackman, but smaller than the rectangular window. The width of the spectral lines is thinner than the other bell-shaped functions. Use this window to measure amplitudes of a periodical signal precisely.\n"
 RSRTX_VAL_SPECTRUM_FREQ_WINDOW_TYPE_HANN (2)
 "The noise level within the spectrum is reduced and the width of the spectral lines enlarges. Use this window to measure amplitudes of a periodical signal precisely.\n"
 RSRTX_VAL_SPECTRUM_FREQ_WINDOW_TYPE_BLAC (3)
 "In the Blackman window the amplitudes can be measured very precisely. However, determining the frequency is more difficult. Use this window to measure amplitudes of a periodical signal precisely.\n"
 RSRTX_VAL_SPECTRUM_FREQ_WINDOW_TYPE_FLAT (4)
 "The flat top window has low amplitude measurement errors but a poor frequency resolution. Use this window for accurate single- tone measurements and for measurement of amplitudes of sinusoidal frequency components.\n"

v RsRtx_rngSpectrumMarkerDisplay DataType="i"

 RSRTX_VAL_SPECTRUM_MARKER_OFF (0)
 "Off\n"
 RSRTX_VAL_SPECTRUM_MARKER_INDEX (1)
 "Index\n"
 RSRTX_VAL_SPECTRUM_MARKER_RESULT (2)
 "Result\n"

v RsRtx_rngSpectrumMarkerSource DataType="i"

 RSRTX_VAL_SPECTRUM_MARKER_SOURCE_SPEC (0)
 "Spectrum \n"
 RSRTX_VAL_SPECTRUM_MARKER_SOURCE_MINH (1)
 "Min Hold\n"
 RSRTX_VAL_SPECTRUM_MARKER_SOURCE_MAXH (2)
 "Max Hold\n"
 RSRTX_VAL_SPECTRUM_MARKER_SOURCE_AVER (3)
 "Average\n"

v RsRtx_rngSpectrumMarkerSetupDetectionMode DataType="i"

 RSRTX_VAL_SPECTRUM_MARKER_DETECTION_LEVEL (0)
 "Level only detects a peak when a certain minimum level is reached.\n"
 RSRTX_VAL_SPECTRUM_MARKER_DETECTION_ADVANCED (1)
 "Enables a more precise advanced peak definition.\n"

v RsRtx_rngSpectrumMarkerReferenceMode DataType="i"

 RSRTX_VAL_SPECTRUM_MARKER_REF_MODE_OFF (0)
 "Off\n"
 RSRTX_VAL_SPECTRUM_MARKER_REF_MODE_INDICATED (1)
 "The reference marker is set to the peak with a specified index number.\n"
 RSRTX_VAL_SPECTRUM_MARKER_REF_MODE_RANGE (2)
 "The peak with the highest level within the selected range is set as the reference marker.\n"

v RsRtx_rngSpectrumMarkerResultMode DataType="i"

 RSRTX_VAL_SPECTRUM_MARKER_RESULT_MODE_ABSOLUTE (0)
 "The absolute values for both the frequency and level are displayed.\n"
 RSRTX_VAL_SPECTRUM_MARKER_RESULT_MODE_FREQUENCY (1)
 "The delta between the reference freqeuncy and the corresponding freqeuncy value as well as the absolute level are displayed.\n"
 RSRTX_VAL_SPECTRUM_MARKER_RESULT_MODE_LEVEL (2)
 "The delta between the reference level and the corresponding level value as well as the absolute frequency are displayed.\n"
 RSRTX_VAL_SPECTRUM_MARKER_RESULT_MODE_FLEVEL (3)
 "The delta between the reference freqency/level and the corresponding freqency/level value are displayed.\n"

v RsRtx_rngSpectrumMarkerTablePosition DataType="i"

 RSRTX_VAL_SPECTRUM_MARKER_TABLE_POSITION_TOP (0)
 "Top\n"
 RSRTX_VAL_SPECTRUM_MARKER_TABLE_POSITION_BOTTOM (1)
 "Bottom\n"
 RSRTX_VAL_SPECTRUM_MARKER_TABLE_POSITION_FULL (2)
 "Fullscreen\n"

v RsRtx_rngSpectrumDisplayColorScheme DataType="i"

 RSRTX_VAL_SPECTRUM_COLOR_SCHEME_MONOCHROM (0)
 "Monochrom\n"
 RSRTX_VAL_SPECTRUM_COLOR_SCHEME_TEMPERATURE (1)
 "Temperature\n"
 RSRTX_VAL_SPECTRUM_COLOR_SCHEME_RAINBOW (2)
 "Rainbow\n"

v RsRtx_rngContentFormat DataType="i"

 RSRTX_VAL_CONTENT_FORMAT_ALL (0)
 "Extended result including file, date, time and attributes\n"
 RSRTX_VAL_CONTENT_FORMAT_WTIME (1)
 "Result including file, date, time\n"

v RsRtx_rngAcquisitionMode DataType="i"

 RSRTX_VAL_ACQUISTION_MODE_REFRESH (0)
 "The aquisitions are displayed as they are done.\n"
 RSRTX_VAL_ACQUISTION_MODE_AVERAGE (1)
 "The aquisitions are averaged.\n"
 RSRTX_VAL_ACQUISTION_MODE_ENVELOPE (2)
 "The envelope of a repetitive signal is shown, representing the borders in which the signal occurs.\n"

v RsRtx_rngAcquisitionState DataType="i"

 RSRTX_VAL_ACQ_STATE_RUN (0)
 "Set: Starts the acquisition. Read: The acquisition is running.\n"
 RSRTX_VAL_ACQ_STATE_STOP (1)
 "Set: Stops the acquisition when it is finished. Read: Acquisition is stopped.\n"
 RSRTX_VAL_ACQ_STATE_COMPLETE (2)
 "Set: Not available. Read: The current acquisition is finished and completed.\n"
 RSRTX_VAL_ACQ_STATE_BREAK (3)
 "Set: Immediate interrupt of current acquisition. Read: acquisition is finished but interrupted.\n"

v RsRtx_rngMathOperation DataType="i"

 RSRTX_VAL_MATH_OPERATION_ADD (0)
 "\n"
 RSRTX_VAL_MATH_OPERATION_SUB (1)
 "\n"
 RSRTX_VAL_MATH_OPERATION_MUL (2)
 "\n"
 RSRTX_VAL_MATH_OPERATION_DIV (3)
 "\n"

v rsrtx_rngMathSource DataType="i"

 RSRTX_VAL_CHANNEL1 (1)
 "Channel 1\n"
 RSRTX_VAL_CHANNEL2 (2)
 "Channel 2\n"
 RSRTX_VAL_CHANNEL3 (3)
 "Channel 3\n"
 RSRTX_VAL_CHANNEL4 (4)
 "Channel 4\n"

v RsRtx_rngAbsoluteRelative DataType="i"

 RSRTX_VAL_ABS (0)
 "\n"
 RSRTX_VAL_REL (1)
 "\n"

v RsRtx_rngDeviceMode DataType="i"

 RSRTX_VAL_DEVICE_MODE_YT (0)
 "\n"
 RSRTX_VAL_DEVICE_MODE_ZOOM (1)
 "\n"
 RSRTX_VAL_DEVICE_MODE_XY (2)
 "\n"
 RSRTX_VAL_DEVICE_MODE_QMEAS (3)
 "\n"
 RSRTX_VAL_DEVICE_MODE_UPDATE (4)
 "\n"
 RSRTX_VAL_DEVICE_MODE_AUTOSET (5)
 "\n"
 RSRTX_VAL_DEVICE_MODE_MASKTEST (6)
 "\n"
 RSRTX_VAL_DEVICE_MODE_FFT (7)
 "\n"

v RsRtx_rngPersistenceType DataType="i"

 RSRTX_VAL_PERSISTENCE_OFF (0)
 "\n"
 RSRTX_VAL_PERSISTENCE_TIME (1)
 "\n"
 RSRTX_VAL_PERSISTENCE_INFINITE (2)
 "\n"

v rsrtx_rngHardcopyFormat DataType="i"

 RSRTX_VAL_HARDCOPY_FORMAT_BMP (1)
 "bmp output format.\n"
 RSRTX_VAL_HARDCOPY_FORMAT_PNG (0)
 "png output format\n"

v RsRtx_rngLogicThreshold DataType="i"

 RSRTX_VAL_LOGIC_THRESHOLD_TTL (0)
 "1.4 V\n"
 RSRTX_VAL_LOGIC_THRESHOLD_ECL (1)
 "-1.3 V\n"
 RSRTX_VAL_LOGIC_THRESHOLD_CMOS (2)
 "2.5 V\n"
 RSRTX_VAL_LOGIC_THRESHOLD_USER (3)
 "\n"

v rsrtx_rngLogicHysteresis DataType="i"

 RSRTX_VAL_HYSTERESIS_SMALL (1)
 "Small\n"
 RSRTX_VAL_HYSTERESIS_MEDIUM (2)
 "Medium\n"
 RSRTX_VAL_HYSTERESIS_LARGE (3)
 "Large\n"

v RsRtx_rngLogicType DataType="i"

 RSRTX_VAL_LOGIC_TYPE_SAMPLE (0)
 "\n"
 RSRTX_VAL_LOGIC_TYPE_PEAKDETECT (1)
 "\n"

v RsRtx_rngWaveformGeneratorFunctionType DataType="i"

 RSRTX_VAL_WAVE_GEN_FUNCTION_TYPE_SIN (0)
 "\n"
 RSRTX_VAL_WAVE_GEN_FUNCTION_TYPE_SQU (1)
 "\n"
 RSRTX_VAL_WAVE_GEN_FUNCTION_TYPE_RAMP (2)
 "\n"
 RSRTX_VAL_WAVE_GEN_FUNCTION_TYPE_DC (3)
 "\n"
 RSRTX_VAL_WAVE_GEN_FUNCTION_TYPE_PULS (4)
 "\n"
 RSRTX_VAL_WAVE_GEN_FUNCTION_TYPE_SINC (5)
 "\n"
 RSRTX_VAL_WAVE_GEN_FUNCTION_TYPE_TRI (6)
 "\n"
 RSRTX_VAL_WAVE_GEN_FUNCTION_TYPE_EXP (7)
 "\n"
 RSRTX_VAL_WAVE_GEN_FUNCTION_TYPE_ARB (8)
 "\n"

v RsRtx_rngWaveformGeneratorModulationType DataType="i"

 RSRTX_VAL_WAVE_GEN_MODULATION_TYPE_AM (0)
 "Amplitude modulation\n"
 RSRTX_VAL_WAVE_GEN_MODULATION_TYPE_FM (1)
 "Frequency modulation\n"
 RSRTX_VAL_WAVE_GEN_MODULATION_TYPE_ASK (2)
 "Amplitude shift keying (ASK) modulation\n"
 RSRTX_VAL_WAVE_GEN_MODULATION_TYPE_FSK (3)
 "Frequency shift keying (FSK) modulation\n"

v RsRtx_rngWaveformGeneratorArbitrarySource DataType="i"

 RSRTX_VAL_WAVE_GEN_CH1 (1)
 "\n"
 RSRTX_VAL_WAVE_GEN_CH2 (2)
 "\n"
 RSRTX_VAL_WAVE_GEN_CH3 (3)
 "\n"
 RSRTX_VAL_WAVE_GEN_CH4 (4)
 "\n"

v RsRtx_rngWaveformGeneratorLoad DataType="i"

 RSRTX_ATTR_WAVE_GEN_OUTPUT_LOAD_FIFTYOHM (0)
 "\n"
 RSRTX_ATTR_WAVE_GEN_OUTPUT_LOAD_HIGHZ (1)
 "\n"

v RsRtx_rngWaveformGeneratorModulationFunctionType DataType="i"

 RSRTX_VAL_WAVE_GEN_MOD_FUNCTION_TYPE_SIN (0)
 "\n"
 RSRTX_VAL_WAVE_GEN_MOD_FUNCTION_TYPE_SQU (1)
 "\n"
 RSRTX_VAL_WAVE_GEN_MOD_FUNCTION_TYPE_RAMP (2)
 "\n"
 RSRTX_VAL_WAVE_GEN_MOD_FUNCTION_TYPE_TRI (3)
 "\n"

v RsRtx_rngWaveformGeneratorOutputDestination DataType="i"

 RSRTX_VAL_WAVE_GEN_OUTPUT_DESTINATION_BNC (0)
 "\n"
 RSRTX_VAL_WAVE_GEN_OUTPUT_DESTINATION_P3 (1)
 "\n"

v RsRtx_rngPatternGeneratorFunctionType DataType="i"

 RSRTX_VAL_PATT_GEN_FUNCTION_TYPE_SQUARE (0)
 "Square wave function (e.g. for manual probe compensation).\n"
 RSRTX_VAL_PATT_GEN_FUNCTION_TYPE_COUNTER (1)
 "Definition of a 4-bit wide counter pattern.\n"
 RSRTX_VAL_PATT_GEN_FUNCTION_TYPE_ARB (2)
 "Definition of a 4-bit wide and 2048 samples deep pattern.\n"
 RSRTX_VAL_PATT_GEN_FUNCTION_TYPE_SPI (3)
 "SPI BUS signals for measurements without measurement object. Data rate 100 kBit/s, 250 kBit/s or 1 MBit/s.\n"
 RSRTX_VAL_PATT_GEN_FUNCTION_TYPE_I2C (4)
 "I2C BUS signals for measurements without measurement object. Data rate 100 kBit/s, 400 kBit/s, 1 MBit/s or 3.4 MBit/s.\n"
 RSRTX_VAL_PATT_GEN_FUNCTION_TYPE_UART (5)
 "UART BUS signals for measurements without measurement object. Data rate 9600 Bit/s, 115.2 kBit/s and 1 MBit/s.\n"
 RSRTX_VAL_PATT_GEN_FUNCTION_TYPE_CAN (6)
 "CAN BUS signals for measurements without measurement object up to 50 MBit/s.\n"
 RSRTX_VAL_PATT_GEN_FUNCTION_TYPE_LIN (7)
 "LIN BUS signals for measurements without measurement object up to 50 MBit/s.\n"
 RSRTX_VAL_PATT_GEN_FUNCTION_TYPE_MANUAL (8)
 "Manual pattern mode.\n"
 RSRTX_VAL_PATT_GEN_FUNCTION_TYPE_AUDIO_I2S (9)
 "Audio-I2S BUS signal.\n"
 RSRTX_VAL_PATT_GEN_FUNCTION_TYPE_AUDIO_TDM (10)
 "Audio-TDM BUS signal.\n"
 RSRTX_VAL_PATT_GEN_FUNCTION_TYPE_TEST_PWM (11)
 "Test signals with pulse width modulation.\n"
 RSRTX_VAL_PATT_GEN_FUNCTION_TYPE_PWM (12)
 "Pulse width modulated signal.\n"
 RSRTX_VAL_PATT_GEN_FUNCTION_TYPE_LED_PWM (13)
 "Pulse width modulated signal for LED color control.\n"

v RsRtx_rngPatternGeneratorCounterDirection DataType="i"

 RSRTX_VAL_PATT_GEN_DIRECTION_DOWN (0)
 "\n"
 RSRTX_VAL_PATT_GEN_DIRECTION_UP (1)
 "\n"

v RsRtx_rngPatternGeneratorTriggerMode DataType="i"

 RSRTX_VAL_PATT_GEN_TRIGGER_MODE_CONT (0)
 "\n"
 RSRTX_VAL_PATT_GEN_TRIGGER_MODE_SING (1)
 "\n"

v rsrtx_rngWindowRange DataType="i"

 RSRTX_VAL_RANGE_ENTER (0)
 "The signal crosses the upper or lower level and thus enters the win- dow made up of these two levels.\n"
 RSRTX_VAL_RANGE_EXIT (1)
 "Searches for events when the signal leaves the window.\n"
 RSRTX_VAL_RANGE_WITHIN (2)
 "The signal stays between the upper and lower level for a specified time.\n"
 RSRTX_VAL_RANGE_OUTSIDE (3)
 "The signal stays above the upper level or below the lower level for a specified time.\n"
 RSRTX_VAL_RANGE_PASS (4)
 "The signal crosses both levels in a specified time. The time measure- ment starts when the signal crosses the first level.\n"
 RSRTX_VAL_RANGE_NPASS (5)
 "The signal crosses one level, but does not cross the second level in a specified time.\n"

v RsRtx_rngSpectrumAnalysisMode DataType="i"

 RSRTX_VAL_SPECTRUM_MODE_SPECTRUM (0)
 "\n"
 RSRTX_VAL_SPECTRUM_MODE_FFT (1)
 "\n"

v RsRtx_rngInterface DataType="i"

 RSRTX_VAL_INTERFACE_ETH (0)
 "\n"
 RSRTX_VAL_INTERFACE_USB (1)
 "\n"

v RsRtx_rngUSBClass DataType="i"

 RSRTX_VAL_USB_CLASS_TMC (0)
 "Test & Measurement Class\n"
 RSRTX_VAL_USB_CLASS_VCP (1)
 "Virtual Com Port\n"
 RSRTX_VAL_USB_CLASS_MTP (2)
 "Media Transfer Protocol\n"

v RsRtx_rngEthernetTransfer DataType="i"

 RSRTX_VAL_ETHERNET_TRANSFER_AUTO (0)
 "Automatic transfer speed\n"
 RSRTX_VAL_ETHERNET_TRANSFER_FD10 (1)
 "Full duplex10 Mbps\n"
 RSRTX_VAL_ETHERNET_TRANSFER_FD100 (2)
 "Full duplex 100 Mbps\n"
 RSRTX_VAL_ETHERNET_TRANSFER_HD10 (3)
 "Half duplex10 Mbps\n"
 RSRTX_VAL_ETHERNET_TRANSFER_HD100 (4)
 "Half duplex 100 Mbps\n"

v RsRtx_rngTimeoutRange DataType="i"

 RSRTX_VAL_TIMEOUT_RANGE_LOW (0)
 "The signal level stays below the trigger level.\n"
 RSRTX_VAL_TIMEOUT_RANGE_HIGH (1)
 "The signal level stays above the trigger level.\n"
 RSRTX_VAL_TIMEOUT_RANGE_EITHER (2)
 "\n"

v RsRtx_rngMILSTDTriggerFrame DataType="i"

 RSRTX_MILSTD_FRAME_COMMAND (0)
 "\n"
 RSRTX_MILSTD_FRAME_STATUS (1)
 "\n"
 RSRTX_MILSTD_FRAME_DATA (2)
 "\n"
 RSRTX_MILSTD_FRAME_ALL (3)
 "\n"

v RsRtx_rngPointSelection DataType="i"

 RSRTX_VAL_POINT_SELECTION_DEFAULT (0)
 "Waveform points that are visible on the screen. At maximum waveform rate, the instrument stores more samples than visible on the screen, and DEF returns less values than acquired.\n"
 RSRTX_VAL_POINT_SELECTION_MAX (1)
 "All waveform samples that are stored in the memory. Only avail- able if acquisition is stopped.\n"
 RSRTX_VAL_POINT_SELECTION_DMAX (2)
 "Display maximum: Waveform samples stored in the current waveform record but only for the displayed time range. At maxi- mum waveform rate, the instrument stores more samples than visible on the screen, and DMAX returns more values than DEF. Only available if acquisition is stopped.\n"

v RsRtx_rngUARTTriggerSource DataType="i"

 RSRTX_VAL_UART_TRIGGER_SOURCE_RX (0)
 "\n"
 RSRTX_VAL_UART_TRIGGER_SOURCE_TX (1)
 "\n"

v RsRtx_rngUARTFrameSource DataType="i"

 RSRTX_VAL_UART_FRAME_SOURCE_RX (0)
 "\n"
 RSRTX_VAL_UART_FRAME_SOURCE_TX (1)
 "\n"

v rsrtx_rngSearchResultType DataType="i"

 RSRTX_VAL_SEARCHCOND_EDGE (0)
 "Edge\n"
 RSRTX_VAL_SEARCHCOND_WIDTH (1)
 "Width\n"
 RSRTX_VAL_SEARCHCOND_PEAK (2)
 "Peak\n"
 RSRTX_VAL_SEARCHCOND_RUNT (3)
 "Runt\n"
 RSRTX_VAL_SEARCHCOND_RTIME (4)
 "Rise Time\n"
 RSRTX_VAL_SEARCHCOND_D2C (5)
 "Data2Clock\n"
 RSRTX_VAL_SEARCHCOND_PATTERN (6)
 "Pattern\n"
 RSRTX_VAL_SEARCHCOND_PROTOCOL (7)
 "Protocol\n"
 RSRTX_VAL_SEARCHCOND_WINDOW (8)
 "Window\n"

v rsrtx_rngSearchResultSlope DataType="i"

 RSRTX_VAL_POSITIVE (0)
 "Rising Edge, a positive voltage change\n"
 RSRTX_VAL_NEGATIVE (1)
 "Falling Edge, a negative voltage change\n"
 RSRTX_VAL_EITHER (2)
 "Rising as well as the falling edge.\n"

v RsRtx_rngMemoryMode DataType="i"

 RSRTX_VAL_MEMORY_MODE_AUTOMATIC (0)
 "Automatically by the instrument\n"
 RSRTX_VAL_MEMORY_MODE_PREDEFINED (1)
 "Predefined values are set with RSRTX_ATTR_RECORD_LENGTH\n"
 RSRTX_VAL_MEMORY_MODE_MANUAL (2)
 "User-defined value is set with RSRTX_ATTR_RECORD_LENGTH. The number of available history segments is adjusted automatically.\n"

v RsRtx_rngBodeAmplitudeMode DataType="i"

 RSRTX_VAL_BODE_CONSTANT (0)
 "In the amplitude constant mode, there is a fixed amplitude for all frequencies.\n"
 RSRTX_VAL_BODE_PROFILE (1)
 "In the amplitude profile mode, you can define different amplitudes for different frequency.\n"

v RsRtx_rngBodeSourceChannel DataType="i"

 RSRTX_VAL_BODE_SOURCE_CHANNEL1 (0)
 "Channel 1\n"
 RSRTX_VAL_BODE_SOURCE_CHANNEL2 (1)
 "Channel 2\n"
 RSRTX_VAL_BODE_SOURCE_CHANNEL3 (2)
 "Channel 3\n"
 RSRTX_VAL_BODE_SOURCE_CHANNEL4 (3)
 "Channel 4\n"

v RsRtx_rngBodePlotMeasurementState DataType="i"

 RSRTX_VAL_BODE_MEASUREMENT_STOP (0)
 "Bode plot measurement is stopped.\n"
 RSRTX_VAL_BODE_MEASUREMENT_RUN (1)
 "Bode plot measurement is running.\n"

v RsRtx_rngUARTFrameState DataType="i"

 RSRTX_VAL_UART_FRAME_OK (0)
 "The frame is valid.\n"
 RSRTX_VAL_UART_FRAME_START_ERROR (1)
 "Start error, no start bit found.\n"
 RSRTX_VAL_UART_FRAME_STOP_ERROR (2)
 "Stop error, no stop condition found.\n"
 RSRTX_VAL_UART_FRAME_PARITY_ERROR (3)
 "Parity error, which indicates a transmission error.\n"
 RSRTX_VAL_UART_FRAME_BREAK (4)
 "Break condition found. A start bit is not followed by a stop bit, and the data line remains at logic 0 for longer than a UART word.\n"
 RSRTX_VAL_UART_FRAME_INCOMPLETE (5)
 "The frame is not completely contained in the acquisition. The acquired part of the frame is valid.\n"

v RsRtx_rngIdleStatePolarity DataType="i"

 RSRTX_VAL_UART_POLARITY_IDLE_HIGH (0)
 "Idle high, high = 1\n"
 RSRTX_VAL_UART_POLARITY_IDLE_LOW (1)
 "Idle low, low = 1\n"

v RsRtx_rngMathWaveformColor DataType="i"

 RSRTX_VALUE_WAVEFORM_COLOR_DEFAULT (0)
 "Default monochrome color.\n"
 RSRTX_VALUE_WAVEFORM_COLOR_TEMPERATURE (1)
 "Temperature colors. Blue corresponds to rare occurrences of the samples, while white indicates frequent ones.\n"
 RSRTX_VALUE_WAVEFORM_COLOR_RAINBOW (2)
 "Rainbow colors. Blue corresponds to rare occurrences of the samples, while red indicates frequent ones.\n"
 RSRTX_VALUE_WAVEFORM_COLOR_FIRE (3)
 "Fire colors. Yellow corresponds to rare occurrences of the samples, while red indicates frequent ones.\n"
 RSRTX_VALUE_WAVEFORM_COLOR_YELLOW (4)
 "Yellow\n"
 RSRTX_VALUE_WAVEFORM_COLOR_GREEN (5)
 "Green\n"
 RSRTX_VALUE_WAVEFORM_COLOR_ORANGE (6)
 "Orange\n"
 RSRTX_VALUE_WAVEFORM_COLOR_BLUE (7)
 "Blue\n"
 RSRTX_VALUE_WAVEFORM_COLOR_LIGHT_BLUE (8)
 "Light blue\n"
 RSRTX_VALUE_WAVEFORM_COLOR_WHITE (9)
 "White\n"
 RSRTX_VALUE_WAVEFORM_COLOR_CYAN (10)
 "Cyan\n"
 RSRTX_VALUE_WAVEFORM_COLOR_PINK (11)
 "Pink\n"
 RSRTX_VALUE_WAVEFORM_COLOR_RED (12)
 "Red\n"

v RsRtx_rngChannelWaveformColor DataType="i"

 RSRTX_VALUE_WAVEFORM_COLOR_DEFAULT (0)
 "Default monochrome color.\n"
 RSRTX_VALUE_WAVEFORM_COLOR_TEMPERATURE (1)
 "Temperature colors. Blue corresponds to rare occurrences of the samples, while white indicates frequent ones.\n"
 RSRTX_VALUE_WAVEFORM_COLOR_RAINBOW (2)
 "Rainbow colors. Blue corresponds to rare occurrences of the samples, while red indicates frequent ones.\n"
 RSRTX_VALUE_WAVEFORM_COLOR_FIRE (3)
 "Fire colors. Yellow corresponds to rare occurrences of the samples, while red indicates frequent ones.\n"

v RsRtx_rngMaskCaptureMode DataType="i"

 RSRTX_VAL_MASK_CAPTURE_ALL (0)
 "All acquisitions are stored in segments\n"
 RSRTX_VAL_MASK_CAPTURE_FAILED (1)
 "Only failed acquisitions are stored in segments\n"

v RsRtx_rngPWMMotorDirection DataType="i"

 RSRTX_VAL_POSITIVE (0)
 "Positive motor direction\n"
 RSRTX_VAL_NEGATIVE (1)
 "Negative motor direction\n"

v RsRtx_rngReferenceWaveformColor DataType="i"

 RSRTX_VALUE_WAVEFORM_COLOR_DEFAULT (0)
 "Default monochrome color.\n"
 RSRTX_VALUE_WAVEFORM_COLOR_TEMPERATURE (1)
 "Temperature colors. Blue corresponds to rare occurrences of the samples, while white indicates frequent ones.\n"
 RSRTX_VALUE_WAVEFORM_COLOR_RAINBOW (2)
 "Rainbow colors. Blue corresponds to rare occurrences of the samples, while red indicates frequent ones.\n"
 RSRTX_VALUE_WAVEFORM_COLOR_FIRE (3)
 "Fire colors. Yellow corresponds to rare occurrences of the samples, while red indicates frequent ones.\n"
 RSRTX_VALUE_WAVEFORM_COLOR_YELLOW (4)
 "Yellow\n"
 RSRTX_VALUE_WAVEFORM_COLOR_GREEN (5)
 "Green\n"
 RSRTX_VALUE_WAVEFORM_COLOR_ORANGE (6)
 "Orange\n"
 RSRTX_VALUE_WAVEFORM_COLOR_BLUE (7)
 "Blue\n"
 RSRTX_VALUE_WAVEFORM_COLOR_LIGHT_BLUE (8)
 "Light blue\n"
 RSRTX_VALUE_WAVEFORM_COLOR_WHITE (9)
 "White\n"
 RSRTX_VALUE_WAVEFORM_COLOR_CYAN (10)
 "Cyan\n"
 RSRTX_VALUE_WAVEFORM_COLOR_PINK (11)
 "Pink\n"
 RSRTX_VALUE_WAVEFORM_COLOR_RED (12)
 "Red\n"

v RsRtx_rngCounterSource DataType="i"

 RSRTX_VAL_COUNTER_SOURCE_TRIGGER (0)
 "Trigger\n"
 RSRTX_VAL_COUNTER_SOURCE_CHANNEL1 (1)
 "Channel 1\n"
 RSRTX_VAL_COUNTER_SOURCE_CHANNEL2 (2)
 "Channel 2\n"
 RSRTX_VAL_COUNTER_SOURCE_CHANNEL3 (3)
 "Channel 3\n"
 RSRTX_VAL_COUNTER_SOURCE_CHANNEL4 (4)
 "Channel 4\n"

v rsrtx_rngWaveformExportParameter DataType="i"

 RSRTX_VAL_WAV_CH1 (1)
 "Channel 1\n"
 RSRTX_VAL_WAV_CH2 (2)
 "Channel 2\n"
 RSRTX_VAL_WAV_CH3 (3)
 "Channel 3\n"
 RSRTX_VAL_WAV_CH4 (4)
 "Channel 4\n"
 RSRTX_VAL_WAV_M1 (5)
 "Math Waveform 1\n"
 RSRTX_VAL_WAV_M2 (6)
 "Math Waveform 2\n"
 RSRTX_VAL_WAV_M3 (7)
 "Math Waveform 3\n"
 RSRTX_VAL_WAV_M4 (8)
 "Math Waveform 4\n"
 RSRTX_VAL_WAV_M5 (9)
 "Math Waveform 5\n"
 RSRTX_VAL_WAV_R1 (10)
 "Reference Waveform 1\n"
 RSRTX_VAL_WAV_R2 (11)
 "Reference Waveform 2\n"
 RSRTX_VAL_WAV_R3 (12)
 "Reference Waveform 3\n"
 RSRTX_VAL_WAV_R4 (13)
 "Reference Waveform 4\n"
 RSRTX_VAL_WAV_D70 (30)
 "Digital 70\n"
 RSRTX_VAL_WAV_D158 (31)
 "Digital 158\n"

v rsrtx_rngReferenceWaveformParameter DataType="i"

 RSRTX_VAL_WAV_CH1 (1)
 "Channel 1\n"
 RSRTX_VAL_WAV_CH2 (2)
 "Channel 2\n"
 RSRTX_VAL_WAV_CH3 (3)
 "Channel 3\n"
 RSRTX_VAL_WAV_CH4 (4)
 "Channel 4\n"
 RSRTX_VAL_WAV_M1 (5)
 "Math Waveform 1\n"
 RSRTX_VAL_WAV_M2 (6)
 "Math Waveform 2\n"
 RSRTX_VAL_WAV_M3 (7)
 "Math Waveform 3\n"
 RSRTX_VAL_WAV_M4 (8)
 "Math Waveform 4\n"
 RSRTX_VAL_WAV_M5 (9)
 "Math Waveform 5\n"
 RSRTX_VAL_WAV_R1 (10)
 "Reference Waveform 1\n"
 RSRTX_VAL_WAV_R2 (11)
 "Reference Waveform 2\n"
 RSRTX_VAL_WAV_R3 (12)
 "Reference Waveform 3\n"
 RSRTX_VAL_WAV_R4 (13)
 "Reference Waveform 4\n"
 RSRTX_VAL_WAV_D70 (30)
 "Digital 70\n"
 RSRTX_VAL_WAV_D158 (31)
 "Digital 158\n"
 RSRTX_VAL_WAV_SPEC (32)
 "Spectrum\n"
 RSRTX_VAL_WAV_MINH (34)
 "Minimum Hold\n"
 RSRTX_VAL_WAV_MAXH (35)
 "Maximum Hold\n"
 RSRTX_VAL_WAV_AVER (36)
 "Average\n"

v RsRtx_rngProbeInputVoltageRange DataType="i"

 RSRTX_VAL_PROBE_INPUT_VOLTAGE_AUTO (0)
 "The voltage range is set only at the oscilloscope by adjusting the vertical scale.\n"
 RSRTX_VAL_PROBE_INPUT_VOLTAGE_HIGH (1)
 "Sets the higher voltage range of the connected probe.\n"
 RSRTX_VAL_PROBE_INPUT_VOLTAGE_LOW (2)
 "Sets the lower voltage range of the connected probe.\n"

v RsRtx_rngProbeMeasMode DataType="i"

 RSRTX_VAL_PROBE_MEAS_MODE_DIFFERENTIAL (0)
 "Differential mode input voltage\n"
 RSRTX_VAL_PROBE_MEAS_MODE_COMMON (1)
 "Common mode input voltage \n"
 RSRTX_VAL_PROBE_MEAS_MODE_POSITIVE (2)
 "Positive single-ended input voltage\n"
 RSRTX_VAL_PROBE_MEAS_MODE_NEGATIVE (3)
 "Negative single-ended input voltage\n"

v RsRtx_rngMeasurementDelayDirection DataType="i"

 RSRTX_VAL_MEAS_DELAY_DIRECTION_NEAR (0)
 "Nearest edge to the trigger point.\n"
 RSRTX_VAL_MEAS_DELAY_DIRECTION_FRFI (1)
 "First edge from the left window edge.\n"
 RSRTX_VAL_MEAS_DELAY_DIRECTION_FRLA (2)
 "First edge from the right window edge, which is the last edge if coun- ted from the left window edge.\n"

0 rsrtx_SetAttributeViInt32 3 4 false s DataType="ViInt32"
0 rsrtx_GetAttributeViInt32 3 4 false g DataType="ViInt32"
0 rsrtx_CheckAttributeViInt32 3 4 false s DataType="ViInt32"
0 rsrtx_SetAttributeViInt64 3 4 false s DataType="ViInt64"
0 rsrtx_GetAttributeViInt64 3 4 false g DataType="ViInt64"
0 rsrtx_CheckAttributeViInt64 3 4 false s DataType="ViInt64"
0 rsrtx_SetAttributeViReal64 3 4 false s DataType="ViReal64"
0 rsrtx_GetAttributeViReal64 3 4 false g DataType="ViReal64"
0 rsrtx_CheckAttributeViReal64 3 4 false s DataType="ViReal64"
0 rsrtx_SetAttributeViSession 3 4 false s DataType="ViSession"
0 rsrtx_GetAttributeViSession 3 4 false g DataType="ViSession"
0 rsrtx_CheckAttributeViSession 3 4 false s DataType="ViSession"
0 rsrtx_SetAttributeViBoolean 3 4 false s DataType="ViBoolean"
0 rsrtx_GetAttributeViBoolean 3 4 false g DataType="ViBoolean"
0 rsrtx_CheckAttributeViBoolean 3 4 false s DataType="ViBoolean"
0 rsrtx_SetAttributeViString 3 4 false s DataType="ViString"
0 rsrtx_GetAttributeViString 3 5 false g DataType="ViString"
0 rsrtx_CheckAttributeViString 3 4 false s DataType="ViString"
0 rsrtx_GetAttributeRepeatedCapabilityIds 2 2 false g
0 rsrtx_GetAttributeRepeatedCapabilityIdNames 2 2 false g

1 all "Inherent Instrument Specific Attributes"
 "This class defines Inherent Instrument Specific Attributes.\n\n(1) User Options (Class):\nAttribute taht define the user options.\n\n(2) Class Driver Identification (Class):\nAttributes that define class driver identification\n\n(3) Driver Identification (Class):\nAttributes that define the driver identification.\n\n(4) Driver Capabilities (Class):\nAttributes that define driver capabilities.\n\n(5) Driver Setup (Class):\nAttributes that define driver setup.\n\n(6) Instrument Identification (Class):\nAttributes that identifies the instrument.\n\n(7) Advanced Session Information (Class):\nAttributes that controls the advanced session informations.\n\n\n"

2 all "User Options"
 "Attribute taht define the user options.\n\n(1) Range Check:\nSpecifies whether to validate attribute values and function parameters. If enabled, the instrument driver validates the parameters values that end-users pass to driver functions, and the RS engine validates values that the driver or end-users pass to the SetAttribute functions. The RS engine uses the range table, range table callback, or check callback for each attribute to validate its values. Range checking parameters is very useful for debugging. After validating the program, the end-user can set this attribute to VI_FALSE to disable range checking and maximize performance.\n    The end-user specifies the value of RS_ATTR_RANGE_CHECK.\n    The default value is VI_TRUE. Specific drivers provide a PREFIX_InitWithOptions function to allow the end-user to override this value. When the end-user opens an instrument session through a class driver, the end-user can override both of these values by specifying a value in the ivi.ini configuration file.\n    The Rs_RangeChecking function provides convenient access to the value of this attribute.\n\n\n(2) Query Instrument Status:\nSpecifies whether the instrument driver queries the instrument status after each end-user operation. The driver does so by calling the check status callback at the end of each user-callable function that interacts with the instrument. The RS engine also invokes the check status callback when the end-user calls one of the PREFIX_SetAttribute or PREFIX_GetAttribute functions that the instrument driver provides.   Querying the instrument status is very useful for debugging. After validating the program, the end-user can set this attribute to VI_FALSE to disable status checking and maximize performance.\n    The end-user specifies the value of RS_ATTR_QUERY_INSTR_STATUS. The driver, however, can prevent the RS engine from invoking the checks status callback on a particular attribute by setting the RS_VAL_DONT_CHECK_STATUS flag for the attribute.\n    The default value is VI_TRUE. Specific drivers provide a PREFIX_InitWithOptions function to allow the end-user to override this value.\nThe Rs_QueryInstrStatus function provides convenient access to the value of this attribute.\n\n\n(3) Cache:\nThis attribute specifies whether or not to cache the value of attributes.\n    The end-user specifies the value of RS_ATTR_CACHE. For a particular attribute, however, the driver can override the value of RS_ATTR_CACHE by setting the RS_VAL_NEVER_CACHE or RS_VAL_ALWAYS_CACHE flag for the attribute.\n    The default value is VI_TRUE. Specific drivers provide a PREFIX_InitWithOptions function to allow the end-user to override this value.  \n\n(4) Simulate:\nThis attribute specifies whether or not to simulate instrument driver I/O operations. If simulation is enabled, specific instrument driver functions perform range checking and call Rs_GetAttribute and Rs_SetAttribute functions, but they do not perform instrument I/O. The RS engine does not invoke the read and write callbacks for attributes, except when the RS_VAL_USE_CALLBACKS_FOR_SIMULATION flag is set for an attribute.\n    For output parameters that represent instrument data, the instrument driver functions return hardcoded values. If the end-user opens the session through a class driver, the class driver loads a special simulation driver to generate output data in a more sophisicated manner, unless the end-user sets the RS_ATTR_USE_SPECIFIC_SIMULATION attribute to VI_TRUE.\n    The end-user sets the value of RS_ATTR_SIMULATE.\n    The default value is VI_FALSE. Specific drivers provide a PREFIX_InitWithOptions function to allow the end-user to override this value.      The Rs_Simulating function provides convenient access to the value of this attribute.\n    If you initialize a session with simulation enabled, disabling it causes the RS_ERROR_INVALID_CONFIGURATION error to be returned.\n\n\n(5) Record Value Coercions:\nThis attribute specifies whether the RS engine keeps a list of the value coercions it makes for ViInt32 and ViReal64 attributes. If the driver provides a coerced range table, a range table callback that returns a coerced range table, or a coerce callback for an attribute, the RS engine can coerce the values you specify for the attribute to canonical values the instrument accepts. If the RS_ATTR_RECORD_COERCIONS attribute is enabled, the RS engine maintains a record of each coercion. The end-user calls Rs_GetNextCoercionInfo to extract and delete the oldest coercion record from the list.\n    The end-user specifies the value of RS_ATTR_RECORD_COERCIONS.\n    The default value is VI_FALSE. Specific drivers provide a PREFIX_InitWithOptions function to allow the end-user to override this value.\n\n(6) Interchangeability Check:\nThis attribute specifies whether the class driver performs interchangeability checking. Each instrument class specification defines the rules for interchangeability checking for that class.\n     The end-user specifies the value of RS_ATTR_INTERCHANGE_CHECK.\n    The default value is VI_TRUE.\n    If the end-user opens an instrument session through a specific driver, the RS engine generates an RS_ERROR_NOT_CREATED_BY_CLASS error whenever you attempt to set or get this attribute.\n\n\n(7) Spy:\nThis attribute specifies whether the class driver uses the NI-Spy utility to record calls to class driver functions.\n    The end-user specifies the value of RS_ATTR_SPY.\n    The default value is VI_FALSE.\n    If the end-user opens an instrument session through a specific driver, the RS engine generates an RS_ERROR_NOT_CREATED_BY_CLASS error whenever you attempt to set or get this attribute.\n\n\n(8) Use Specific Simulation:\nThis attribute specifies whether the specific driver or the class driver simulates I/O operations when simulation is enabled. A value of VI_TRUE specifies that the specific driver simulates I/O operations. A value of VI_FALSE specifies that the class driver simulates I/O operations through a special simulation driver.\n    The end-user specifies the value of RS_ATTR_USE_SPECIFIC_SIMULATION.\nWhen the end-user opens an instrument session through a specific driver, the default value is VI_TRUE.\n    The Rs_UseSpecificSimulation function provides convenient access to the value of this attribute.\n\n\n\n"

3 all "Range Check" RS_ATTR_RANGE_CHECK ViBoolean gs 
 "Specifies whether to validate attribute values and function parameters. If enabled, the instrument driver validates the parameters values that end-users pass to driver functions, and the RS engine validates values that the driver or end-users pass to the SetAttribute functions. The RS engine uses the range table, range table callback, or check callback for each attribute to validate its values. Range checking parameters is very useful for debugging. After validating the program, the end-user can set this "
 "attribute to VI_FALSE to disable range checking and maximize performance.\n    The end-user specifies the value of RS_ATTR_RANGE_CHECK.\n    The default value is VI_TRUE. Specific drivers provide a PREFIX_InitWithOptions function to allow the end-user to override this value. When the end-user opens an instrument session through a class driver, the end-user can override both of these values by specifying a value in the ivi.ini configuration file.\n    The Rs_RangeChecking function provides convenient access "
 "to the value of this attribute.\n\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nNone"
 "\n"

3 all "Query Instrument Status" RS_ATTR_QUERY_INSTRUMENT_STATUS ViBoolean gs 
 "Specifies whether the instrument driver queries the instrument status after each end-user operation. The driver does so by calling the check status callback at the end of each user-callable function that interacts with the instrument. The RS engine also invokes the check status callback when the end-user calls one of the PREFIX_SetAttribute or PREFIX_GetAttribute functions that the instrument driver provides.   Querying the instrument status is very useful for debugging. After validating the program, the "
 "end-user can set this attribute to VI_FALSE to disable status checking and maximize performance.\n    The end-user specifies the value of RS_ATTR_QUERY_INSTR_STATUS. The driver, however, can prevent the RS engine from invoking the checks status callback on a particular attribute by setting the RS_VAL_DONT_CHECK_STATUS flag for the attribute.\n    The default value is VI_TRUE. Specific drivers provide a PREFIX_InitWithOptions function to allow the end-user to override this value.\nThe Rs_QueryInstrStatus "
 "function provides convenient access to the value of this attribute.\n\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nK0"
 "\n"

3 all "Cache" RS_ATTR_CACHE ViBoolean gs 
 "This attribute specifies whether or not to cache the value of attributes.\n    The end-user specifies the value of RS_ATTR_CACHE. For a particular attribute, however, the driver can override the value of RS_ATTR_CACHE by setting the RS_VAL_NEVER_CACHE or RS_VAL_ALWAYS_CACHE flag for the attribute.\n    The default value is VI_TRUE. Specific drivers provide a PREFIX_InitWithOptions function to allow the end-user to override this value.  \n\nAvailable Repeated Capabilities:\n\n\nRemote-control "
 "command:\n\n\nOption Checking:\nK0"
 "\n"

3 all "Simulate" RS_ATTR_SIMULATE ViBoolean gs 
 "This attribute specifies whether or not to simulate instrument driver I/O operations. If simulation is enabled, specific instrument driver functions perform range checking and call Rs_GetAttribute and Rs_SetAttribute functions, but they do not perform instrument I/O. The RS engine does not invoke the read and write callbacks for attributes, except when the RS_VAL_USE_CALLBACKS_FOR_SIMULATION flag is set for an attribute.\n    For output parameters that represent instrument data, the instrument driver "
 "functions return hardcoded values. If the end-user opens the session through a class driver, the class driver loads a special simulation driver to generate output data in a more sophisicated manner, unless the end-user sets the RS_ATTR_USE_SPECIFIC_SIMULATION attribute to VI_TRUE.\n    The end-user sets the value of RS_ATTR_SIMULATE.\n    The default value is VI_FALSE. Specific drivers provide a PREFIX_InitWithOptions function to allow the end-user to override this value.      The Rs_Simulating function "
 "provides convenient access to the value of this attribute.\n    If you initialize a session with simulation enabled, disabling it causes the RS_ERROR_INVALID_CONFIGURATION error to be returned.\n\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nK0"
 "\n"

3 all "Record Value Coercions" RS_ATTR_RECORD_COERCIONS ViBoolean gs 
 "This attribute specifies whether the RS engine keeps a list of the value coercions it makes for ViInt32 and ViReal64 attributes. If the driver provides a coerced range table, a range table callback that returns a coerced range table, or a coerce callback for an attribute, the RS engine can coerce the values you specify for the attribute to canonical values the instrument accepts. If the RS_ATTR_RECORD_COERCIONS attribute is enabled, the RS engine maintains a record of each coercion. The end-user calls "
 "Rs_GetNextCoercionInfo to extract and delete the oldest coercion record from the list.\n    The end-user specifies the value of RS_ATTR_RECORD_COERCIONS.\n    The default value is VI_FALSE. Specific drivers provide a PREFIX_InitWithOptions function to allow the end-user to override this value.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nK0"
 "\n"

3 all "Interchangeability Check" RS_ATTR_INTERCHANGE_CHECK ViBoolean gs 
 "This attribute specifies whether the class driver performs interchangeability checking. Each instrument class specification defines the rules for interchangeability checking for that class.\n     The end-user specifies the value of RS_ATTR_INTERCHANGE_CHECK.\n    The default value is VI_TRUE.\n    If the end-user opens an instrument session through a specific driver, the RS engine generates an RS_ERROR_NOT_CREATED_BY_CLASS error whenever you attempt to set or get this attribute.\n\n\nAvailable Repeated "
 "Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nK0"
 "\n"

3 all "Spy" RS_ATTR_SPY ViBoolean gs 
 "This attribute specifies whether the class driver uses the NI-Spy utility to record calls to class driver functions.\n    The end-user specifies the value of RS_ATTR_SPY.\n    The default value is VI_FALSE.\n    If the end-user opens an instrument session through a specific driver, the RS engine generates an RS_ERROR_NOT_CREATED_BY_CLASS error whenever you attempt to set or get this attribute.\n\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nK0"
 "\n"

3 all "Use Specific Simulation" RS_ATTR_USE_SPECIFIC_SIMULATION ViBoolean gs 
 "This attribute specifies whether the specific driver or the class driver simulates I/O operations when simulation is enabled. A value of VI_TRUE specifies that the specific driver simulates I/O operations. A value of VI_FALSE specifies that the class driver simulates I/O operations through a special simulation driver.\n    The end-user specifies the value of RS_ATTR_USE_SPECIFIC_SIMULATION.\nWhen the end-user opens an instrument session through a specific driver, the default value is VI_TRUE.\n    The "
 "Rs_UseSpecificSimulation function provides convenient access to the value of this attribute.\n\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nK0"
 "\n"

2 all "Class Driver Identification"
 "Attributes that define class driver identification.\n\n(1) Class Driver Description:\nA string that contains a brief description of the specific driver.\n\n(2) Class Driver Prefix:\nA string that contains the prefix for the class instrument driver.\n\n(3) Class Driver Vendor:\nA string that contains the name of the vendor that supplies class driver.\n\n(4) Class Driver Revision:\nA string that contains additional version information about class driver.\n\n(5) Class Driver Major Version:\nThe major version number of the class instrument driver.\n    The class driver sets the value of this attribute.\n    If the end-user opens an instrument session through a specific driver, the RS engine generates an RS_ERROR_NOT_CREATED_BY_CLASS error whenever you attempt to set or get this attribute.\n\n(6) Class Driver Minor Version:\nThe minor version number of the class instrument driver.\n    The class driver sets the value of this attribute.\n    If the end-user opens an instrument session through a specific driver, the RS engine generates an RS_ERROR_NOT_CREATED_BY_CLASS error whenever you attempt to set or get this attribute.\n\n\n"

3 all "Class Driver Description" RS_ATTR_CLASS_DRIVER_DESCRIPTION ViString gs 
 "A string that contains a brief description of the specific driver.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nK0"
 "\n"

3 all "Class Driver Prefix" RS_ATTR_CLASS_DRIVER_PREFIX ViString gs 
 "A string that contains the prefix for the class instrument driver.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nK0"
 "\n"

3 all "Class Driver Vendor" RS_ATTR_CLASS_DRIVER_VENDOR ViString gs 
 "A string that contains the name of the vendor that supplies class driver.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nK0"
 "\n"

3 all "Class Driver Revision" RS_ATTR_CLASS_DRIVER_REVISION ViString gs 
 "A string that contains additional version information about class driver.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nK0"
 "\n"

3 all "Class Driver Major Version" RS_ATTR_CLASS_DRIVER_CLASS_SPEC_MAJOR_VERSION ViInt32 gs 
 "The major version number of the class instrument driver.\n    The class driver sets the value of this attribute.\n    If the end-user opens an instrument session through a specific driver, the RS engine generates an RS_ERROR_NOT_CREATED_BY_CLASS error whenever you attempt to set or get this attribute.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nNone"
 "\n"

3 all "Class Driver Minor Version" RS_ATTR_CLASS_DRIVER_CLASS_SPEC_MINOR_VERSION ViInt32 gs 
 "The minor version number of the class instrument driver.\n    The class driver sets the value of this attribute.\n    If the end-user opens an instrument session through a specific driver, the RS engine generates an RS_ERROR_NOT_CREATED_BY_CLASS error whenever you attempt to set or get this attribute.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nK0"
 "\n"

2 all "Driver Identification"
 "Attributes that define the driver identification.\n\n(1) Driver Description:\nA string that contains a brief description of the specific driver.\n\n(2) Driver Prefix:\nA string that contains the prefix for the instrument driver. The name of each user-callable function in this driver starts with this prefix.\n\n(3) Driver Locator:\nReturns the information that the class driver uses to find the specific driver module.\n\n(4) Driver Vendor:\nA string that contains the name of the vendor that supplies this driver.\n\n(5) Driver Revision:\nA string that contains additional version information about this instrument driver.\n\n(6) Class Specification Major Version:\nThe major version number of the class specification with which this driver is compliant.\n\n(7) Class Specification Minor Version:\nThe minor version number of the class specification with which this driver is compliant.\n\n\n"

3 all "Driver Description" RS_ATTR_SPECIFIC_DRIVER_DESCRIPTION ViString gs 
 "A string that contains a brief description of the specific driver.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nK0"
 "\n"

3 all "Driver Prefix" RS_ATTR_SPECIFIC_DRIVER_PREFIX ViString gs 
 "A string that contains the prefix for the instrument driver. The name of each user-callable function in this driver starts with this prefix.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nK0"
 "\n"

3 all "Driver Locator" RS_ATTR_SPECIFIC_DRIVER_LOCATOR ViString gs 
 "Returns the information that the class driver uses to find the specific driver module.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nK0"
 "\n"

3 all "Driver Vendor" RS_ATTR_SPECIFIC_DRIVER_VENDOR ViString gs 
 "A string that contains the name of the vendor that supplies this driver.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nK0"
 "\n"

3 all "Driver Revision" RS_ATTR_SPECIFIC_DRIVER_REVISION ViString gs 
 "A string that contains additional version information about this instrument driver.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nK0"
 "\n"

3 all "Class Specification Major Version" RS_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MAJOR_VERSION ViInt32 gs 
 "The major version number of the class specification with which this driver is compliant.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nK0"
 "\n"

3 all "Class Specification Minor Version" RS_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MINOR_VERSION ViInt32 gs 
 "The minor version number of the class specification with which this driver is compliant.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nK0"
 "\n"

2 all "Driver Capabilities"
 "Attributes that define driver capabilities.\n\n(1) Supported Instrument Models:\nContains a model code of the instrument. For drivers that support more than one device, this attribute contains a comma-separated list of supported instrument models.\n\n(2) Class Group Capabilities:\nA string that contains a comma-separated list of class-extention groups that this driver implements.\n\n(3) Function Capabilities:\nThis attribute returns a comma-separated string that identifies the class functions that the specific instrument driver implements. \n\n(4) Channel Count:\nReturns the number of available channels (repeated capabilities).\n\n\n\n"

3 all "Supported Instrument Models" RS_ATTR_SUPPORTED_INSTRUMENT_MODELS ViString gs 
 "Contains a model code of the instrument. For drivers that support more than one device, this attribute contains a comma-separated list of supported instrument models.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nK0"
 "\n"

3 all "Class Group Capabilities" RS_ATTR_GROUP_CAPABILITIES ViString gs 
 "A string that contains a comma-separated list of class-extention groups that this driver implements.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nK0"
 "\n"

3 all "Function Capabilities" RS_ATTR_FUNCTION_CAPABILITIES ViString gs 
 "This attribute returns a comma-separated string that identifies the class functions that the specific instrument driver implements. \n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nNone"
 "\n"

3 all "Channel Count" RS_ATTR_CHANNEL_COUNT ViInt32 gs 
 "Returns the number of available channels (repeated capabilities).\n\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nK0"
 "\n"

2 all "Driver Setup"
 "Attributes that define driver setup.\n\n(1) Driver Setup:\nSome cases exist where the end-user must specify instrument driver options at initialization time.  An example of this is specifying a particular instrument model from among a family of instruments that the driver supports. This is useful when using simulation. The end-user can specify driver-specific options through the DriverSetup keyword in the optionsString parameter to the PREFIX_InitWithOptions function.\n    The default value is an empty string.\n\n\n\n"

3 all "Driver Setup" RS_ATTR_DRIVER_SETUP ViString gs 
 "Some cases exist where the end-user must specify instrument driver options at initialization time.  An example of this is specifying a particular instrument model from among a family of instruments that the driver supports. This is useful when using simulation. The end-user can specify driver-specific options through the DriverSetup keyword in the optionsString parameter to the PREFIX_InitWithOptions function.\n    The default value is an empty string.\n\n\nAvailable Repeated "
 "Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nK0"
 "\n"

2 all "Instrument Identification"
 "Attributes that identifies the instrument.\n\n(1) Instrument Manufacturer:\nA string that contains the name of the instrument manufacturer you are currently using.\n\n(2) Instrument Model:\nA string that contains the model number or name of the instrument that you are currently using.\n\n(3) Instrument Firmware Revision:\nA string that contains the firmware revision information for the instrument you are currently using.\n\n(4) Options List:\nThis attribute provides information about the options in which the instrument is equipped with.\n    The specific driver sets the value of this attribute.\n\n\n"

3 all "Instrument Manufacturer" RS_ATTR_INSTRUMENT_MANUFACTURER ViString gs 
 "A string that contains the name of the instrument manufacturer you are currently using.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nK0"
 "\n"

3 all "Instrument Model" RS_ATTR_INSTRUMENT_MODEL ViString gs 
 "A string that contains the model number or name of the instrument that you are currently using.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nK0"
 "\n"

3 all "Instrument Firmware Revision" RS_ATTR_INSTRUMENT_FIRMWARE_REVISION ViString gs 
 "A string that contains the firmware revision information for the instrument you are currently using.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nK0"
 "\n"

3 all "Options List" RS_ATTR_OPTIONS_LIST ViString gs 
 "This attribute provides information about the options in which the instrument is equipped with.\n    The specific driver sets the value of this attribute.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nK0"
 "\n"

2 all "Advanced Session Information"
 "Attributes that controls the advanced session informations.\n"

3 all "Resource Descriptor" RS_ATTR_IO_RESOURCE_DESCRIPTOR ViString gs 
 "If the end-user opens the RS session through a class driver, this attribute indicates the resource descriptor the class driver uses to identify the physical device to the specific driver.\n    If the end-user opens an instrument session through a specific driver, the RS engine generates an RS_ERROR_NOT_CREATED_BY_CLASS error whenever you attempt to set or get this attribute.\n\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nK0"
 "\n"

3 all "Logical Name" RS_ATTR_LOGICAL_NAME ViString g 
 "When opening an RS session through a class driver, the end-user passes a logical name to the class driver initialization function. The logical name entry refers to a virtual instrument section in the configuration file. The virtual instrument section specifies a physical device and a specific instrument driver. By assigning the name of a different virtual instrument section to the logical name in the configuration file, the end-user can swap one instrument for another without changing source code or "
 "recompiling or relinking the application program. This attribute indicates the logical name the end-user specified when opening the current RS session.\n    If the end-user opens an instrument session through a specific driver, the RS engine generates an RS_ERROR_NOT_CREATED_BY_CLASS error whenever you attempt to set or get this attribute.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nK0"
 "\n"

1 all "Inherent Vendor Specific Attributes"
 "This class defines Inherent Vendor Specific Attributes.\n\n(1) Error Info (Class):\nAttributes that control the error.\n\n(2) Session IO (Class):\nAttributes that control the session informations.\n\n(3) Version Info (Class):\nAttributes that defines the driver, class and engine versions.\n\n\n(4) Session Callbacks (Class):\nAttributes that defines the session callbacks.\n\n\n"

2 all "Error Info"
 "Attributes that control the error.\n\n(1) Primary Error:\nA code that describes the first error that occurred since the last call to Rs_GetErrorInfo on the session. The value follows the VXIplug&play completion code conventions. A negative value describes an error condition. A positive value describes a warning condition and indicates that no error occurred. A zero indicates that no error or warning occurred. The error and warning values can be status codes defined by IVI, VISA, class drivers, or specific drivers.\n\n(2) Secondary Error:\nAn optional code that provides additional information concerning the primary error condition.  The error and warning values can be status codes defined by VISA or specific drivers. Zero indicates no additional information.\n\n(3) Error Elaboration:\nAn optional string that contains additional information concerning the primary error condition.\n\n\n"

3 all "Primary Error" RS_ATTR_PRIMARY_ERROR ViInt32 gs 
 "A code that describes the first error that occurred since the last call to Rs_GetErrorInfo on the session. The value follows the VXIplug&play completion code conventions. A negative value describes an error condition. A positive value describes a warning condition and indicates that no error occurred. A zero indicates that no error or warning occurred. The error and warning values can be status codes defined by IVI, VISA, class drivers, or specific drivers.\n\nAvailable Repeated "
 "Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nK0"
 "\n"

3 all "Secondary Error" RS_ATTR_SECONDARY_ERROR ViInt32 gs 
 "An optional code that provides additional information concerning the primary error condition.  The error and warning values can be status codes defined by VISA or specific drivers. Zero indicates no additional information.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nK0"
 "\n"

3 all "Error Elaboration" RS_ATTR_ERROR_ELABORATION ViString gs 
 "An optional string that contains additional information concerning the primary error condition.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nK0"
 "\n"

2 all "Session IO"
 "Attributes that control the session informations.\n\n(1) VISA Resource Manager Session:\nIf a specific driver uses VISA instrument I/O, it passes the value of this attribute to the viOpen function during initialization. The viOpen function returns an instrument I/O session, which the driver stores in the RS_ATTR_IO_SESSION attribute.\n\n(2) Instrument IO Session:\nThis attribute specifies the I/O session that the specific driver uses to communicate with the instrument.\n    If a specific driver uses VISA instrument I/O, it passes the value of the RS_ATTR_VISA_RM_SESSION attibute to the viOpen function and sets the RS_ATTR_IO_SESSION attribute to the VISA session handle that viOpen returns.\n    The RS engine passes the value of RS_ATTR_IO_SESSION to the read and write callbacks the specific driver installs for its attributes.  The Rs_IOSession function provides convenient access to the value of this attribute.\n\n(3) IO Session Type:\nThis attribute specifies the I/O session type that the specific driver uses to communicate with the instrument.\n\n\n"

3 all "VISA Resource Manager Session" RS_ATTR_VISA_RM_SESSION ViSession gs 
 "If a specific driver uses VISA instrument I/O, it passes the value of this attribute to the viOpen function during initialization. The viOpen function returns an instrument I/O session, which the driver stores in the RS_ATTR_IO_SESSION attribute.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nK0"
 "\n"

3 all "Instrument IO Session" RS_ATTR_IO_SESSION ViSession gs 
 "This attribute specifies the I/O session that the specific driver uses to communicate with the instrument.\n    If a specific driver uses VISA instrument I/O, it passes the value of the RS_ATTR_VISA_RM_SESSION attibute to the viOpen function and sets the RS_ATTR_IO_SESSION attribute to the VISA session handle that viOpen returns.\n    The RS engine passes the value of RS_ATTR_IO_SESSION to the read and write callbacks the specific driver installs for its attributes.  The Rs_IOSession function provides "
 "convenient access to the value of this attribute.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nK0"
 "\n"

3 all "IO Session Type" RS_ATTR_IO_SESSION_TYPE ViString gs 
 "This attribute specifies the I/O session type that the specific driver uses to communicate with the instrument.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nK0"
 "\n"

2 all "Version Info"
 "Attributes that defines the driver, class and engine versions.\n\n(1) Driver Major Version:\nThe major version number of the specific instrument driver.\n    The specific driver sets the value of this attribute.\n\n(2) Driver Minor Version:\nThe minor version number of the specific instrument driver.\n    The specific driver sets the value of this attribute.\n\n(3) Driver Minor Minor Version:\nThe minor minor version number of the specific instrument driver.\n    The specific driver sets the value of this attribute.\n\n(4) Class Major Version:\nThe major version number of the class instrument driver.\n    The class driver sets the value of this attribute.\n    If the end-user opens an instrument session through a specific driver, the IVI engine generates an RS_ERROR_NOT_CREATED_BY_CLASS error whenever you attempt to set or get this attribute.\n\n(5) Class Minor Version:\nThe minor version number of the class instrument driver.\n    The class driver sets the value of this attribute.\n    If the end-user opens an instrument session through a specific driver, the RS engine generates an RS_ERROR_NOT_CREATED_BY_CLASS error whenever you attempt to set or get this attribute.\n\n(6) Engine Major Version:\nThe major version number of the RS engine. The RS engine sets the value of this attribute.\n\n(7) Engine Minor Version:\nThe minor version number of the RS engine. The RS engine sets the value of this attribute.\n\n(8) Engine Revision:\nA string that contains additional version information about the RS engine. The RS engine sets the value of this attribute.\n\n\n"

3 all "Driver Major Version" RS_ATTR_SPECIFIC_DRIVER_MAJOR_VERSION ViInt32 gs 
 "The major version number of the specific instrument driver.\n    The specific driver sets the value of this attribute.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nK0"
 "\n"

3 all "Driver Minor Version" RS_ATTR_SPECIFIC_DRIVER_MINOR_VERSION ViInt32 gs 
 "The minor version number of the specific instrument driver.\n    The specific driver sets the value of this attribute.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nK0"
 "\n"

3 all "Driver Minor Minor Version" RS_ATTR_SPECIFIC_DRIVER_MINOR_MINOR_VERSION ViInt32 gs 
 "The minor minor version number of the specific instrument driver.\n    The specific driver sets the value of this attribute.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nK0"
 "\n"

3 all "Class Major Version" RS_ATTR_CLASS_DRIVER_MAJOR_VERSION ViInt32 gs 
 "The major version number of the class instrument driver.\n    The class driver sets the value of this attribute.\n    If the end-user opens an instrument session through a specific driver, the IVI engine generates an RS_ERROR_NOT_CREATED_BY_CLASS error whenever you attempt to set or get this attribute.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nK0"
 "\n"

3 all "Class Minor Version" RS_ATTR_CLASS_DRIVER_MINOR_VERSION ViInt32 gs 
 "The minor version number of the class instrument driver.\n    The class driver sets the value of this attribute.\n    If the end-user opens an instrument session through a specific driver, the RS engine generates an RS_ERROR_NOT_CREATED_BY_CLASS error whenever you attempt to set or get this attribute.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nK0"
 "\n"

3 all "Engine Major Version" RS_ATTR_ENGINE_MAJOR_VERSION ViInt32 gs 
 "The major version number of the RS engine. The RS engine sets the value of this attribute.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nK0"
 "\n"

3 all "Engine Minor Version" RS_ATTR_ENGINE_MINOR_VERSION ViInt32 gs 
 "The minor version number of the RS engine. The RS engine sets the value of this attribute.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nK0"
 "\n"

3 all "Engine Revision" RS_ATTR_ENGINE_REVISION ViString gs 
 "A string that contains additional version information about the RS engine. The RS engine sets the value of this attribute.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nK0"
 "\n"

2 all "Session Callbacks"
 "Attributes that defines the session callbacks.\n\n(1) Operation Complete (OPC) Callback:\nThis attribute specifies the specific driver callback that waits until all pending instrument operations are complete. If the RS_VAL_WAIT_FOR_OPC_AFTER_WRITES flag is set for the attribute, the RS engine invokes the OPC callback after invoking the write callback.\n    If the RS_VAL_WAIT_FOR_OPC_BEFORE_READS flag is set for the attribute, the RS engine invokes the OPC callback before invoking the read callback.\n    The default value is VI_NULL. Leave the value as VI_NULL if you do not want an operation complete callback.\n\n(2) Check Status Callback:\nThis attribute specifies the specific driver callback that queries the instrument status.\n    If the end-user enables the RS_ATTR_QUERY_INSTR_STATUS attribute, the specific driver calls the check status callback at the end of each user-callable function that interacts with the instrument. The RS engine also invokes the check status callback when the end-user calls one of the PREFIX_SetAttribute or PREFIX_GetAttribute functions that the driver provides.\n    The default value is VI_NULL. Leave the value as VI_NULL if you do not want a check status callback.\n\n(3) Operation Complete (OPC) Timeout:\nThise parameter specifies the maximum time to wait for operation complete in milliseconds.\n\n\n"

3 all "Operation Complete (OPC) Callback" RS_ATTR_OPC_CALLBACK ViAddr gs 
 "This attribute specifies the specific driver callback that waits until all pending instrument operations are complete. If the RS_VAL_WAIT_FOR_OPC_AFTER_WRITES flag is set for the attribute, the RS engine invokes the OPC callback after invoking the write callback.\n    If the RS_VAL_WAIT_FOR_OPC_BEFORE_READS flag is set for the attribute, the RS engine invokes the OPC callback before invoking the read callback.\n    The default value is VI_NULL. Leave the value as VI_NULL if you do not want an operation "
 "complete callback.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nNone"
 "\n"

3 all "Check Status Callback" RS_ATTR_CHECK_STATUS_CALLBACK ViAddr gs 
 "This attribute specifies the specific driver callback that queries the instrument status.\n    If the end-user enables the RS_ATTR_QUERY_INSTR_STATUS attribute, the specific driver calls the check status callback at the end of each user-callable function that interacts with the instrument. The RS engine also invokes the check status callback when the end-user calls one of the PREFIX_SetAttribute or PREFIX_GetAttribute functions that the driver provides.\n    The default value is VI_NULL. Leave the value as "
 "VI_NULL if you do not want a check status callback.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nNone"
 "\n"

3 all "Operation Complete (OPC) Timeout" RS_ATTR_OPC_TIMEOUT ViInt32 gs 
 "Thise parameter specifies the maximum time to wait for operation complete in milliseconds.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nNone"
 "\n"

1 all "Acquisition"
 "This class contains attributes that configure the acquisition subsystem.\n"

2 all "Record Length Automatic" RSRTX_ATTR_RECORD_LENGTH_AUTOMATIC ViBoolean gs 
 "Enables or disables the automatic record length. The instrument sets a value that fits to the selected timebase.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nACQuire:POINts:AUTomatic\n\nOption Checking:\nNone"
 "\n"

2 all "Record Length" RSRTX_ATTR_RECORD_LENGTH ViInt32 gs 
 "Defines a record length value, the number of recorded waveform points in a segment.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nACQuire:POINts[:VALue]\n\nOption Checking:\nNone"
 "\n"

2 all "Acquire Mode" RSRTX_ATTR_ACQUIRE_MODE ViInt32 gs RsRtx_rngAcquisitionMode
 "Sets the type of the aquisition mode.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nACQuire:TYPE\n\nOption Checking:\nNone"
 "\n"

2 all "Peak Detect" RSRTX_ATTR_PEAK_DETECT ViBoolean gs 
 "Enables or disables the peak detect acquisition mode.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nACQuire:PEAKdetect\n\nOption Checking:\nNone"
 "\n"

2 all "High Resolution" RSRTX_ATTR_HIGH_RESOLUTION ViBoolean gs 
 "Enables or disables the high resolution acquisition mode.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nACQuire:HRESolution\n\nOption Checking:\nNone"
 "\n"

2 all "Interpolation" RSRTX_ATTR_INTERPOLATION ViInt32 gs rsrtx_rngInterpolation
 "Selects the interpolation method if ACQuire:MODE ITIMe (interpolated time) is set for enhancement.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nACQuire:INTerpolate\n\nOption Checking:\nNone"
 "\n"

2 all "Number of Averages" RSRTX_ATTR_NUM_AVERAGES ViInt32 gs 
 "Defines the Average count that has a double effect:\n- it defines the number of waveforms used to calculate the average waveform, and\n- it sets the number of waveforms acquired with RUNSingle.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nACQuire:AVERage:COUNt\n\nOption Checking:\nNone"
 "\n"

2 all "Number of Averages Current" RSRTX_ATTR_NUM_AVERAGES_CURRENT ViInt32 g 
 "Returns the current amount of acquired waveforms that contribute to the average. The value is independent of the number of available segments, there are more waveforms in the average available than segments in history. Minimum is 2; maximum depends on the instrument settings.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nACQuire:AVERage:CURRent?\n\nOption Checking:\nNone"
 "\n"

2 all "Number of Averages Reset" RSRTX_ATTR_NUM_AVERAGES_RESET ViString s 
 "Deletes the waveform and restarts the average calculation.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nACQuire:AVERage:RESet\n\nOption Checking:\nNone"
 "\n"

2 all "Memory Mode" RSRTX_ATTR_MEMORY_MODE ViInt32 gs RsRtx_rngMemoryMode
 "Defines how the record length is set.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nACQuire:MEMory[:MODE]\n\nOption Checking:\nNone"
 "\n"

2 all "Averaging Status" RSRTX_ATTR_AVERAGING_STATUS ViBoolean g 
 "Returns the state of averaging.\nFalse - The number of acquired waveforms is less than the number required for average calculation. See RSRTX_ATTR_NUM_AVERAGES.\nTrue - The instrument acquired a sufficient number of waveforms to determine the average.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nACQuire:AVERage:COMPlete?\n\nOption Checking:\nNone"
 "\n"

2 all "Number Of Waveforms" RSRTX_ATTR_NUMBER_OF_WAVEFORMS ViInt32 gs 
 "Sets the number of waveforms acquired with RUNSingle .\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nACQuire:NSINgle:COUNt\n\nOption Checking:\nNone"
 "\n"

2 all "Sample Mode" RSRTX_ATTR_SAMPLE_MODE ViInt32 gs rsrtx_rngSampleMode
 "Selects the method of adding waveform points to the samples of the ADC in order to fill the record length.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nACQuire:MODE\n\nOption Checking:\nNone"
 "\n"

2 all "Waveform Rate Maximum" RSRTX_ATTR_WAVEFORM_RATE_MAXIMUM ViBoolean gs 
 "Enables/disables maximum waveform rate.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nACQuire:WRATe:MAXimum\n\nOption Checking:\nNone"
 "\n"

2 all "Horizontal Time Per Record" RSRTX_ATTR_HORZ_TIME_PER_RECORD ViReal64 gs 
 "Defines the time of one acquisition, that is the time across the 10 divisions of the diagram: Horizontal Scale *10.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTIMebase:ACQTime\n\nOption Checking:\nNone"
 "\n"

2 all "Horizontal Scale" RSRTX_ATTR_HORZ_SCALE ViReal64 gs 
 "Sets the horizontal scale - the time per division on the x-axis - for all channel and math waveforms.\nThe setting accuracy depends on the current resolution (sample rate) and the setting for resolution enhancement:\n- In interpolated time mode if sample rate > ADC sample rate: Any value for the horizontal scale can be set due to the interpolation factor.\n- In real time mode and equivalent time mode for all sample rates; and in interpolated time mode if sample rate < ADC sample rate: The resolution is an "
 "integer multiple of the ADC sample rate.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTIMebase:SCALe\n\nOption Checking:\nNone"
 "\n"

2 all "Roll Mode Automatic" RSRTX_ATTR_ROLL_MODE_AUTOMATIC ViBoolean gs 
 "Enables the automatic roll mode. The instrument switches to roll mode if the timebase is equal or slower than the roll mode limit defined with RSRTX_ATTR_ROLL_MODE_MINIMUM_TIME_BASE.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTIMebase:ROLL:AUTomatic\n\nOption Checking:\nNone"
 "\n"

2 all "Roll Mode Minimum Time Base" RSRTX_ATTR_ROLL_MODE_MINIMUM_TIME_BASE ViReal64 gs 
 "The roll mode is enabled automatically if the time base exceeds the MinTimeBase, and if RSRTX_ATTR_ROLL_MODE_AUTOMATIC is set ON.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTIMebase:ROLL:MTIMe\n\nOption Checking:\nNone"
 "\n"

2 all "Acqusition Start Time" RSRTX_ATTR_ACQUSITION_START_TIME ViReal64 gs 
 "Defines the trigger offset - the time interval between trigger point and reference point to analyze the signal some time before or after the trigger event.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTIMebase:POSition\n\nOption Checking:\nNone"
 "\n"

2 all "Acquisition Time" RSRTX_ATTR_ACQUISITION_TIME ViReal64 g 
 "Queries the required acquisition time. If FFT gating is used and the resolution BW is set to constant, record length can be extended to acquire the required number of samples. In this case, the required acquisition time differs from the adjusted acquisition time.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTIMebase:RATime?\n\nOption Checking:\nNone"
 "\n"

2 all "Horizontal ADC Sample Rate" RSRTX_ATTR_HORZ_ADC_SAMPLE_RATE ViReal64 g 
 "Retrieves the sample rate of the ADC, that is the number of points that are sampled by the ADC in one second.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nACQuire:POINts:ARATe?\n\nOption Checking:\nNone"
 "\n"

2 all "Sample Rate" RSRTX_ATTR_HORZ_SAMPLE_RATE ViReal64 g 
 "Returns the sample rate, that is the number of recorded waveform samples per second.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nACQuire:SRATe?\n\nOption Checking:\nNone"
 "\n"

2 all "Autoscale" RSRTX_ATTR_AUTOSCALE ViString s 
 "Performs an autoset process: analyzes the enabled channel signals, and obtains appropriate horizontal, vertical, and trigger settings to display stable waveforms\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nAUToscale\n\nOption Checking:\nNone"
 "\n"

2 all "Horizontal Divisions" RSRTX_ATTR_HORZ_DIVISIONS ViReal64 g 
 "Queries the number of horizontal divisions on the screen. The number cannot be changed.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTIMebase:DIVisions?\n\nOption Checking:\nNone"
 "\n"

2 all "Horizontal Reference" RSRTX_ATTR_HORZ_REFERENCE ViReal64 gs 
 "Sets the reference point of the time scale in % of the display. The reference point defines which part of the waveform is shown. If the Trigger offset is zero, the trigger point matches the reference point.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTIMebase:REFerence\n\nOption Checking:\nNone"
 "\n"

2 all "Roll Mode" RSRTX_ATTR_ROLL_MODE ViBoolean gs 
 "Activates the automatic roll mode.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTIMebase:ROLL:ENABle\n\nOption Checking:\nNone"
 "\n"

2 all "Timestamps Filename" RSRTX_ATTR_TIMESTAMPS_FILENAME ViString gs 
 "Defines the path and filename of the acqisition timestamps file. The file format is CSV. If the file already exists, it will be overwritten.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nEXPort:ATABle:NAME\n\nOption Checking:\nNone"
 "\n"

2 all "Timestamps Save" RSRTX_ATTR_TIMESTAMPS_SAVE ViString s 
 "Saves the acquisition timestamps table to the file that is defined by the EXPort:ATABle:NAME command.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nEXPort:ATABle:SAVE\n\nOption Checking:\nNone"
 "\n"

2 all "Channel"
 "This class contains attributes that configure the channel acquisition subsystem.\n"

3 all "Acquisition Type" RSRTX_ATTR_ACQUISITION_TYPE ViInt32 gs rsrtx_rngAcquisitionType
 "Selects the method to reduce the data stream of the ADC to a stream of waveform points with lower sample rate.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nCHANnel<m>:TYPE\n\nOption Checking:\nNone"
 "\n"

3 all "Waveform Acquisition Type" RSRTX_ATTR_WAVEFORM_ACQUISITION_TYPE ViInt32 gs rsrtx_rngWaveformArithmetics
 "Selects the method to reduce the data stream of the ADC to a stream of waveform points with lower sample rate.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nCHANnel<m>:ARIThmetics\n\nOption Checking:\nNone"
 "\n"

3 all "Horizontal Record Length" RSRTX_ATTR_HORZ_RECORD_LENGTH ViInt32 s rsrtx_rngWaveformSamplesRange
 "Selects a range of samples that will be returned\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nCHANnel<m>:DATA:POINts\n\nOption Checking:\nNone"
 "\n"

3 all "Get Horizontal Record Length" RSRTX_ATTR_GET_HORZ_RECORD_LENGTH ViInt32 g 
 "Returns the horizontal record length.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nCHANnel<m>:DATA:POINts?\n\nOption Checking:\nNone"
 "\n"

1 all "Probe"
 "This class contains attributes that configure the probe subsystem.\n"

2 all "Probe Type" RSRTX_ATTR_PROBE_TYPE ViString g 
 "Queries the type of the probe.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nPROBe<m>:SETup:TYPE?\n\nOption Checking:\nNone"
 "\n"

2 all "Probe Name" RSRTX_ATTR_PROBE_NAME ViString g 
 "Queries the name of the probe.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nPROBe<m>:SETup:NAME?\n\nOption Checking:\nNone"
 "\n"

2 all "Probe Input Impedance" RSRTX_ATTR_PROBE_INPUT_IMPEDANCE ViInt32 g rsrtx_rngProbeInputImpedance
 "Queries the termination of the probe.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nPROBe<m>:SETup:IMPedance?\n\nOption Checking:\nNone"
 "\n"

2 all "Probe Input Capacitance" RSRTX_ATTR_PROBE_INPUT_CAPACITANCE ViReal64 g 
 "Queries the input capacitance of the probe.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nPROBe<m>:SETup:CAPacitance?\n\nOption Checking:\nNone"
 "\n"

2 all "Probe Degauss" RSRTX_ATTR_PROBE_DEGAUSS ViString s 
 "Demagnetizes the core if it has been magnetized by switching the power on and off, or by an excessive input. Always demagnetize the probe before measurement. The demagnetizing process takes about one second.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nPROBe<m>:SETup:DEGauss\n\nOption Checking:\nNone"
 "\n"

2 all "Probe Attenuation" RSRTX_ATTR_PROBE_ATTENUATION ViReal64 g 
 "Queries the attenuation of the probe.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nPROBe<m>:SETup:ATTenuation[:AUTO]?\n\nOption Checking:\nNone"
 "\n"

2 all "Probe Gain" RSRTX_ATTR_PROBE_GAIN ViReal64 g 
 "Returns the gain of an automatically detected probe.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nPROBe<m>:SETup:GAIN[:AUTO]?\n\nOption Checking:\nNone"
 "\n"

2 all "Probe Bandwidth" RSRTX_ATTR_PROBE_BANDWIDTH ViReal64 g 
 "Queries the bandwidth of the probe.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nPROBe<m>:SETup:BANDwidth?\n\nOption Checking:\nNone"
 "\n"

2 all "Probe DC Offset" RSRTX_ATTR_PROBE_DC_OFFSET ViReal64 g 
 "Retrieves the DC voltage that is measured by the integrated voltmeter of R&S active probes. Switch the voltmeter on before.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nPROBe<m>:SETup:DCOFfset?\n\nOption Checking:\nNone"
 "\n"

2 all "Probe CM Offset" RSRTX_ATTR_PROBE_CM_OFFSET ViReal64 gs 
 "Configures the CM voltage offset.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nPROBe<m>:SETup:CMOFfset\n\nOption Checking:\nNone"
 "\n"

2 all "Probe Additional Offset" RSRTX_ATTR_PROBE_ADDITIONAL_OFFSET ViReal64 gs 
 "Sets an additional probe offset.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nPROBe<m>:SETup:UOFFset\n\nOption Checking:\nNone"
 "\n"

2 all "Probe Voltmeter Enabled" RSRTX_ATTR_PROBE_VOLTMETER_ENABLED ViBoolean gs 
 "Switches the integrated voltmeter of an R&S active probe on or off.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nPROBe<m>:SETup:OFFSwitch\n\nOption Checking:\nNone"
 "\n"

2 all "Probe Attenuation Unit" RSRTX_ATTR_PROBE_ATTENUATION_UNIT ViInt32 gs rsrtx_rngProbeUnit
 "This function selects the unit that the probe can measure.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nPROBe<m>:SETup:ATTenuation:UNIT\n\nOption Checking:\nNone"
 "\n"

2 all "Probe Attenuation Manual" RSRTX_ATTR_PROBE_ATTENUATION_MANUAL ViReal64 gs 
 "Sets the attenuation or gain of the probe if the probe was not detected by the instrument.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nPROBe<m>:SETup:ATTenuation:MANual\n\nOption Checking:\nNone"
 "\n"

2 all "Probe Gain Unit" RSRTX_ATTR_PROBE_GAIN_UNIT ViInt32 gs rsrtx_rngProbeUnit
 "Selects the unit that the probe can measure.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nPROBe<m>:SETup:GAIN:UNIT\n\nOption Checking:\nNone"
 "\n"

2 all "Probe Gain Manual" RSRTX_ATTR_PROBE_GAIN_MANUAL ViReal64 gs 
 "Sets the gain of the probe. The gain the the reciprocal of the attenuation (RSRTX_ATTR_PROBE_ATTENUATION_MANUAL).\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nPROBe<m>:SETup:GAIN:MANual\n\nOption Checking:\nNone"
 "\n"

2 all "Probe Micro Button Action" RSRTX_ATTR_PROBE_MICRO_BUTTON_ACTION ViInt32 gs rsrtx_rngProbeButtonAction
 "Select the action that is started with the micro button on the probe head.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nPROBe<m>:SETup:MODE\n\nOption Checking:\nNone"
 "\n"

2 all "Probe Software Version" RSRTX_ATTR_PROBE_SOFTWARE_VERSION ViString g 
 "Queries the version of the probe firmware.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nPROBe<m>:ID:SWVersion?\n\nOption Checking:\nNone"
 "\n"

2 all "Probe Production Date" RSRTX_ATTR_PROBE_PRODUCTION_DATE ViString g 
 "Queries the production date of the probe.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nPROBe<m>:ID:PRDate?\n\nOption Checking:\nNone"
 "\n"

2 all "Probe Part Number" RSRTX_ATTR_PROBE_PART_NUMBER ViString g 
 "Queries the R&S part number of the probe.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nPROBe<m>:ID:PARTnumber?\n\nOption Checking:\nNone"
 "\n"

2 all "Probe Build Number" RSRTX_ATTR_PROBE_BUILD_NUMBER ViInt32 g 
 "Queries the build number of the probe software.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nPROBe<m>:ID:BUILd?\n\nOption Checking:\nNone"
 "\n"

2 all "Probe Serial Number" RSRTX_ATTR_PROBE_SERIAL_NUMBER ViString g 
 "Queries the serial number of the probe.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nPROBe<m>:ID:SRNumber?\n\nOption Checking:\nNone"
 "\n"

2 all "Probe Copy To Offset" RSRTX_ATTR_PROBE_COPY_TO_OFFSET ViString s 
 "Sets the measured ProbeMeter's DC mean value as offset. Make sure that the Probe-Meter is active before you use this attribute.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nPROBe<m>:SETup:ADVanced:PMToffset\n\nOption Checking:\nNone"
 "\n"

2 all "Probe Attenuator RT ZA15 Enabled" RSRTX_ATTR_PROBE_ATTENUATOR_RT_ZA15_ENABLED ViBoolean gs 
 "This attribute is relevant only for differential active probes R&S RT-ZD10, R&S RT-ZD20 or R&S RT-ZD30. If you use the external attenuator R&S RT-ZA15, enable it to include the external attenuation in the measurements.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nPROBe<m>:SETup:ZAXV\n\nOption Checking:\nNone"
 "\n"

2 all "Probe Zero Adjust" RSRTX_ATTR_PROBE_ZERO_ADJUST ViReal64 gs 
 "This attribute  is relevant only for R&S RT-ZCxxB current probes. It sets the waveform to zero position. It corrects the effect of a voltage offset or temperature drift.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nPROBe<m>:SETup:ADVanced:ZADJust\n\nOption Checking:\nNone"
 "\n"

2 all "Probe Save Zero Adjust" RSRTX_ATTR_PROBE_SAVE_ZERO_ADJUST ViString s 
 "This attribute is relevant only for R&S RT-ZCxxB current probes. It saves the zero adjust value in the probe box. If you connect the probe to another channel or to another oscilloscope with Rohde & Schwarz probe interface, the value is read out again.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nPROBe<m>:SETup:ADVanced:STPRobe\n\nOption Checking:\nNone"
 "\n"

2 all "Probe Input Voltage Range" RSRTX_ATTR_PROBE_INPUT_VOLTAGE_RANGE ViInt32 gs RsRtx_rngProbeInputVoltageRange
 "This attribute is relevant for R&S RT-ZHD probes. It sets the voltage range of the probe.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nPROBe<m>:SETup:ADVanced:RANGe\n\nOption Checking:\nNone"
 "\n"

2 all "Probe Bandwidth Limit" RSRTX_ATTR_PROBE_BANDWIDTH_LIMIT ViBoolean gs 
 "This attribute  is relevant for R&S RT-ZHD probes. It activates the lowpass filter in the probe control box.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nPROBe<m>:SETup:ADVanced:FILTer\n\nOption Checking:\nNone"
 "\n"

2 all "Probe Audible Overrange" RSRTX_ATTR_PROBE_AUDIBLE_OVERRANGE ViBoolean gs 
 "This attribute is relevant for R&S RT-ZHD probes. It activates the acoustic overrange warning in the probe control box.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nPROBe<m>:SETup:ADVanced:AUDioverload\n\nOption Checking:\nNone"
 "\n"

2 all "Probe Meas Mode" RSRTX_ATTR_PROBE_MEAS_MODE ViInt32 gs RsRtx_rngProbeMeasMode
 "This command is relevant only for R&S RT-ZM probes. It sets the measurement mode of modular probes. You can switch between singleended, differential and common mode measurements without reconnecting or resoldering the probe.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nPROBe<m>:SETup:PRMode\n\nOption Checking:\nNone"
 "\n"

2 all "Probe AC Coupling" RSRTX_ATTR_PROBE_AC_COUPLING ViBoolean gs 
 "Enables AC coupling in R&S RT-ZPR probes, which removes DC and very low-frequency components. The R&S RT-ZPR probes requires 50   input termination, for which the channel AC coupling is not available. The probe setting allows AC coupling also at 50   inputs.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nPROBe<m>:SETup:ACCoupling\n\nOption Checking:\nNone"
 "\n"

2 all "Probe Meter"
 "Shows the measurement result of the integrated R&S ProbeMeter of active Rohde & Schwarz voltage probes.\nIf a single-ended or power rail probe is connected, the ProbeMeter measures DC voltages between the probe tip and ground connection and enables ground-referenced measurements of voltages.\nIf a differential probe is connected, the ProbeMeter measures differential and common\nmode voltages.\nThe ProbeMeter measures continuously and in parallel to the measurements of the oscilloscope. The results are shown below the grid. You can switch off the ProbeMeter using the button below the the results.\n"

3 all "Probe Meter Visibility" RSRTX_ATTR_PROBE_METER_VISIBILITY ViBoolean gs 
 "Switches the integrated voltmeter of a Rohde & Schwarz active probe on or off. The attribute is only relevant if a Rohde & Schwarz active probe with R&S ProbeMeter is used.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nPROBe<m>:PMETer:VISibility\n\nOption Checking:\nNone"
 "\n"

3 all "Probe Meter Result Single" RSRTX_ATTR_PROBE_METER_RESULT_SINGLE ViReal64 g 
 "Returns probe meter single result.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nPROBe<m>:PMETer:RESults:SINGle?\n\nOption Checking:\nNone"
 "\n"

3 all "Probe Meter Result Common" RSRTX_ATTR_PROBE_METER_RESULT_COMMON ViReal64 g 
 "It returns the common mode voltage, which is the mean voltage between the signal sockets and the ground socket.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nPROBe<m>:PMETer:RESults:COMMon?\n\nOption Checking:\nNone"
 "\n"

3 all "Probe Meter Result Differential" RSRTX_ATTR_PROBE_METER_RESULT_DIFFERENTIAL ViReal64 g 
 "It returns the differential voltage, which is the voltage between the positive and negative signal sockets.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nPROBe<m>:PMETer:RESults:DIFFerential?\n\nOption Checking:\nNone"
 "\n"

3 all "Probe Meter Result Negative" RSRTX_ATTR_PROBE_METER_RESULT_NEGATIVE ViReal64 g 
 "It returns the voltage that is measured between the negative signal socket and the ground.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nPROBe<m>:PMETer:RESults:NEGative?\n\nOption Checking:\nNone"
 "\n"

3 all "Probe Meter Result Positive" RSRTX_ATTR_PROBE_METER_RESULT_POSITIVE ViReal64 g 
 "It returns the voltage that is measured between the positive signal socket and the ground.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nPROBe<m>:PMETer:RESults:POSitive?\n\nOption Checking:\nNone"
 "\n"

1 all "Label"
 "The class contains attributes where you can define an additional name label for the selected waveform.\n"

2 all "Label Enabled" RSRTX_ATTR_LABEL_ENABLED ViBoolean gs 
 "Switches the channel name on or off.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nCHANnel<ml>:LABel:STATe\n\nOption Checking:\nNone"
 "\n"

2 all "Label Name" RSRTX_ATTR_LABEL_NAME ViString gs 
 "String with max. 8 characters, only ASCII characters can be used.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nCHANnel<m>:LABel\n\nOption Checking:\nNone"
 "\n"

2 all "Bus"
 "Contain attributes for settings of Bus Label.\n"

3 all "Bus Label Enabled" RSRTX_ATTR_BUS_LABEL_ENABLED ViBoolean gs 
 "Displays or hides the bus label. The bus label is shown on the the right side of the display.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:LABel:STATe\n\nOption Checking:\nNone"
 "\n"

3 all "Bus Label Name" RSRTX_ATTR_BUS_LABEL_NAME ViString gs 
 "Defines an additional name label for the selected bus.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:LABel\n\nOption Checking:\nNone"
 "\n"

1 all "Channel Subsystem"
 "Channel-based attributes that you use to configure the channel subsystemof the oscilloscope.  All of the channel subsystem attributes are channel-based.\n"

2 all "Channel Enabled" RSRTX_ATTR_CHANNEL_ENABLED ViBoolean gs 
 "Switches the channel signal on or off.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nCHANnel<m>:STATe\n\nOption Checking:\nNone"
 "\n"

2 all "Vertical Range" RSRTX_ATTR_VERTICAL_RANGE ViReal64 gs 
 "Sets the voltage range across the 10 vertical divisions of the diagram.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nCHANnel<m>:RANGe\n\nOption Checking:\nNone"
 "\n"

2 all "Vertical Coupling" RSRTX_ATTR_VERTICAL_COUPLING ViInt32 gs rsrtx_rngVerticalCoupling
 "Selects the connection of the indicated channel signal.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nCHANnel<m>:COUPling\n\nOption Checking:\nNone"
 "\n"

2 all "Vertical Scale" RSRTX_ATTR_VERTICAL_SCALE ViReal64 gs 
 "Sets the vertical range per division.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nCHANnel<m>:SCALe\n\nOption Checking:\nNone"
 "\n"

2 all "Channel Offset" RSRTX_ATTR_CHANNEL_OFFSET ViReal64 gs 
 "The offset voltage is subtracted to correct an offset-affected signal.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nCHANnel<m>:OFFSet\n\nOption Checking:\nNone"
 "\n"

2 all "Channel Zero Offset" RSRTX_ATTR_CHANNEL_ZERO_OFFSET ViReal64 gs 
 "Sets the zero offset. Differences in DUT and oscilloscope ground levels may cause larger zero errors affecting the waveform. If the DUT is ground-referenced, the Zero Offset corrects the zero error and sets the probe to the zero level. You can assess the zero error by measuring the mean value of a signal that should return zero.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nCHANnel<m>:ZOFFset[:VALue]\n\nOption Checking:\nNone"
 "\n"

2 all "Channel Bandwidth Limit" RSRTX_ATTR_CHANNEL_BANDWIDTH_LIMIT ViInt32 gs rsrtx_rngChannelBWLimit
 "Selects the bandwidth limit for the indicated channel.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nCHANnel<m>:BANDwidth\n\nOption Checking:\nNone"
 "\n"

2 all "Channel Polarity" RSRTX_ATTR_CHANNEL_POLARITY ViInt32 gs rsrtx_rngChannelPolarity
 "Turns the inversion of the signal amplitude on or off. To invert means to reflect the voltage values of all signal components against the ground level. Inversion affects only the display of the signal but not the trigger.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nCHANnel<m>:POLarity\n\nOption Checking:\nNone"
 "\n"

2 all "Channel Overload" RSRTX_ATTR_CHANNEL_OVERLOAD ViBoolean gs 
 "Retrieves the overload status of the specified channel from the status bit. When the overload problem is solved, the command resets the status bit. Use VI_FALSE to clear the overload condition.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nCHANnel<m>:OVERload\n\nOption Checking:\nNone"
 "\n"

2 all "Channel Skew" RSRTX_ATTR_CHANNEL_SKEW ViReal64 gs 
 "Skew or deskew compensates delay differences between channels caused by the different length of cables, probes, and other sources. Correct deskew values are important for accurate triggering.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nCHANnel<m>:SKEW\n\nOption Checking:\nNone"
 "\n"

2 all "Channel Threshold" RSRTX_ATTR_CHANNEL_THRESHOLD ViReal64 gs 
 "Threshold value for digitization of analog signals. If the signal value is higher than the threshold, the signal state is high (1 or true for the boolean logic). Otherwise, the signal state is considered low (0 or false) if the signal value is below the threshold.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nCHANnel<m>:THReshold\n\nOption Checking:\nNone"
 "\n"

2 all "Channel Threshold Hysteresis" RSRTX_ATTR_CHANNEL_THRESHOLD_HYSTERESIS ViInt32 gs rsrtx_rngThresholdHysteresis
 "Defines the size of the hysteresis to avoid the change of signal states due to noise.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nCHANnel<m>:THReshold:HYSTeresis\n\nOption Checking:\nNone"
 "\n"

2 all "Channel Position" RSRTX_ATTR_CHANNEL_POSITION ViReal64 gs 
 "Sets the vertical position of the waveform in divisions. While the offset sets a voltage, position is a graphical setting given in divisions.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nCHANnel<m>:POSition\n\nOption Checking:\nNone"
 "\n"

2 all "Channel Waveform Color" RSRTX_ATTR_CHANNEL_WAVEFORM_COLOR ViInt32 gs RsRtx_rngChannelWaveformColor
 "Selects the color scale for the waveform color. Each scale comprises a set of colors, where each color represents a certain frequency of occurrence.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nCHANnel<m>:WCOLor\n\nOption Checking:\nNone"
 "\n"

2 all "Protocol Find Level" RSRTX_ATTR_PROTOCOL_FIND_LEVEL ViString s 
 "Executes the analysis of all channels that are configured for the selected bus and sets the threshold for digitization of analog signals for each channel\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nCHANnel<m>:THReshold:FINDlevel\n\nOption Checking:\nNone"
 "\n"

2 all "Channel All Off" RSRTX_ATTR_CHANNEL_ALL_OFF ViString s 
 "Switches all analog channels off.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nCHANnel<m>:AOFF\n\nOption Checking:\nNone"
 "\n"

2 all "Channel All On" RSRTX_ATTR_CHANNEL_ALL_ON ViString s 
 "Switches all analog channels on.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nCHANnel<m>:AON\n\nOption Checking:\nNone"
 "\n"

1 all "Digital Channel"
 "Digital settings.\n"

2 all "Digital Enabled" RSRTX_ATTR_DIGITAL_ENABLED ViBoolean gs 
 "Enables and displays the indicated digital channel, or disables it.\n\nAvailable Repeated Capabilities:\nDigital (D0,D1,D2,D3,D4,D5,D6,D7,D8,D9,D10,D11,D12,D13,D14,D15)\n\nRemote-control command:\nDIGital<m>:DISPlay\n\nOption Checking:\nNone"
 "\n"

2 all "Digital Deskew" RSRTX_ATTR_DIGITAL_DESKEW ViReal64 gs 
 "Sets the deskew values, one value for each pod. The deskew value compensates\ndelays that are known from the circuit specifics or caused by the different length of\ncables. The skew between the probe boxes of the digital channels and the probe con-\nnectors of the analog channels is automatically aligned by the instrument.\n\nAvailable Repeated Capabilities:\nDigital (D0,D1,D2,D3,D4,D5,D6,D7,D8,D9,D10,D11,D12,D13,D14,D15)\n\nRemote-control command:\nDIGital<m>:DESKew\n\nOption Checking:\nNone"
 "\n"

2 all "Digital Threshold" RSRTX_ATTR_DIGITAL_THRESHOLD ViReal64 gs 
 "Sets the logical threshold for the channel group to which the indicated digital channel belongs.\n\nAvailable Repeated Capabilities:\nDigital (D0,D1,D2,D3,D4,D5,D6,D7,D8,D9,D10,D11,D12,D13,D14,D15)\n\nRemote-control command:\nDIGital<m>:THReshold\n\nOption Checking:\nNone"
 "\n"

2 all "Digital Technology" RSRTX_ATTR_DIGITAL_TECHNOLOGY ViInt32 gs rsrtx_rngDigitalTechnology
 "Selects the threshold voltage for various types of integrated circuits and applies it to the channel group to which the indicated digital channel belongs.\n\nAvailable Repeated Capabilities:\nDigital (D0,D1,D2,D3,D4,D5,D6,D7,D8,D9,D10,D11,D12,D13,D14,D15)\n\nRemote-control command:\nDIGital<m>:TECHnology\n\nOption Checking:\nNone"
 "\n"

2 all "Digital Hysteresis" RSRTX_ATTR_DIGITAL_HYSTERESIS ViInt32 gs rsrtx_rngDigitalHysteresis
 "Defines the size of the hysteresis to avoid the change of signal states due to noise. The setting applied to the channel group to which the indicated digital channel belongs.\n\nAvailable Repeated Capabilities:\nDigital (D0,D1,D2,D3,D4,D5,D6,D7,D8,D9,D10,D11,D12,D13,D14,D15)\n\nRemote-control command:\nDIGital<m>:HYSTeresis\n\nOption Checking:\nNone"
 "\n"

2 all "Digital Apply" RSRTX_ATTR_DIGITAL_APPLY ViBoolean gs 
 "Sets all threshold and hysteresis values to the values of the first nibble (D0...D3).\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nDIGital<m>:THCoupling\n\nOption Checking:\nNone"
 "\n"

2 all "Digital Label" RSRTX_ATTR_DIGITAL_LABEL ViString gs 
 "Defines a label for the indicated digital channel.\n\nAvailable Repeated Capabilities:\nDigital (D0,D1,D2,D3,D4,D5,D6,D7,D8,D9,D10,D11,D12,D13,D14,D15)\n\nRemote-control command:\nDIGital<m>:LABel\n\nOption Checking:\nNone"
 "\n"

2 all "Digital Label Enabled" RSRTX_ATTR_DIGITAL_LABEL_ENABLED ViBoolean gs 
 "Displays or hides the label of the indicated digital channel.\n\nAvailable Repeated Capabilities:\nDigital (D0,D1,D2,D3,D4,D5,D6,D7,D8,D9,D10,D11,D12,D13,D14,D15)\n\nRemote-control command:\nDIGital<m>:LABel:STATe\n\nOption Checking:\nNone"
 "\n"

2 all "Digital Vertical Channel Size" RSRTX_ATTR_DIGITAL_VERTICAL_CHANNEL_SIZE ViReal64 gs 
 "Sets the size of the indicated vertical channel.\n\nAvailable Repeated Capabilities:\nDigital (D0,D1,D2,D3,D4,D5,D6,D7,D8,D9,D10,D11,D12,D13,D14,D15)\n\nRemote-control command:\nDIGital<m>:SIZE\n\nOption Checking:\nNone"
 "\n"

2 all "Digital Vertical Position" RSRTX_ATTR_DIGITAL_VERTICAL_POSITION ViReal64 gs 
 "Sets the vertical position of the indicated vertical channel.\n\nAvailable Repeated Capabilities:\nDigital (D0,D1,D2,D3,D4,D5,D6,D7,D8,D9,D10,D11,D12,D13,D14,D15)\n\nRemote-control command:\nDIGital<m>:POSition\n\nOption Checking:\nNone"
 "\n"

2 all "Digital Current Status Maximum" RSRTX_ATTR_DIGITAL_CURRENT_STATUS_MAXIMUM ViBoolean g 
 "Returns the current status maximum of the indicated digital channel regardless of the trigger settings, and even without any acquisition.\n\nAvailable Repeated Capabilities:\nDigital (D0,D1,D2,D3,D4,D5,D6,D7,D8,D9,D10,D11,D12,D13,D14,D15)\n\nRemote-control command:\nDIGital<m>:CURRent:STATe:MAXimum?\n\nOption Checking:\nNone"
 "\n"

2 all "Digital Current Status Minimum" RSRTX_ATTR_DIGITAL_CURRENT_STATUS_MINIMUM ViBoolean g 
 "Returns the current status minimum of the indicated digital channel regardless of the trigger settings, and even without any acquisition.\n\nAvailable Repeated Capabilities:\nDigital (D0,D1,D2,D3,D4,D5,D6,D7,D8,D9,D10,D11,D12,D13,D14,D15)\n\nRemote-control command:\nDIGital<m>:CURRent:STATe:MINimum?\n\nOption Checking:\nNone"
 "\n"

2 all "Digital Probe Enabled" RSRTX_ATTR_DIGITAL_PROBE_ENABLED ViBoolean g 
 "Queries the digital probe state.\n\nAvailable Repeated Capabilities:\nDigital (D0,D1,D2,D3,D4,D5,D6,D7,D8,D9,D10,D11,D12,D13,D14,D15)\n\nRemote-control command:\nDIGital<m>:PROBe:ENABle?\n\nOption Checking:\nNone"
 "\n"

2 all "Digital Point Selection" RSRTX_ATTR_DIGITAL_POINT_SELECTION ViInt32 s RsRtx_rngPointSelection
 "Selects a range of samples that will be returned. Depending on the current settings, the memory can contain more data samples than the screen is able to display. In this case, you can decide which data will be saved: samples stored in the memory or only the displayed samples.\n\nAvailable Repeated Capabilities:\nDigital (D0,D1,D2,D3,D4,D5,D6,D7,D8,D9,D10,D11,D12,D13,D14,D15)\n\nRemote-control command:\nDIGital<m>:DATA:POINts\n\nOption Checking:\nNone"
 "\n"

1 all "Logic"
 "Configures the logic probe.\n"

2 all "Logic State" RSRTX_ATTR_LOGIC_STATE ViBoolean gs 
 "Enables the logic probe.\n\nAvailable Repeated Capabilities:\nLogic (Logic1,Logic2)\n\nRemote-control command:\nLOGic<p>:STATe\n\nOption Checking:\nNone"
 "\n"

2 all "Logic Type" RSRTX_ATTR_LOGIC_TYPE ViInt32 gs RsRtx_rngLogicType
 "Selects the logic type.\n\nAvailable Repeated Capabilities:\nLogic (Logic1,Logic2)\n\nRemote-control command:\nLOGic<p>:TYPE\n\nOption Checking:\nNone"
 "\n"

2 all "Logic Threshold" RSRTX_ATTR_LOGIC_THRESHOLD ViInt32 gs RsRtx_rngLogicThreshold
 "Configures logic threshold.\n\nAvailable Repeated Capabilities:\nLogic (Logic1,Logic2)\n\nRemote-control command:\nLOGic<p>:THReshold\n\nOption Checking:\nNone"
 "\n"

2 all "Logic Threshold User Level" RSRTX_ATTR_LOGIC_THRESHOLD_USER_LEVEL ViReal64 gs 
 "Configures threshold user level.\n\nAvailable Repeated Capabilities:\nLogic (Logic1,Logic2)\n\nRemote-control command:\nLOGic<p>:THReshold:UDLevel\n\nOption Checking:\nNone"
 "\n"

2 all "Logic Hysteresis" RSRTX_ATTR_LOGIC_HYSTERESIS ViInt32 gs rsrtx_rngLogicHysteresis
 "Configures logic hysteresis.\n\nAvailable Repeated Capabilities:\nLogic (Logic1,Logic2)\n\nRemote-control command:\nLOGic<p>:HYSTeresis\n\nOption Checking:\nNone"
 "\n"

2 all "Logic Arithmetics" RSRTX_ATTR_LOGIC_ARITHMETICS ViInt32 gs rsrtx_rngWaveformArithmetics
 "Configures logic arithmetics.\n\nAvailable Repeated Capabilities:\nLogic (Logic1,Logic2)\n\nRemote-control command:\nLOGic<p>:ARIThmetics\n\nOption Checking:\nNone"
 "\n"

2 all "Logic Probe Connected" RSRTX_ATTR_LOGIC_PROBE_CONNECTED ViBoolean g 
 "Checks if the logic probe is connected.\n\nAvailable Repeated Capabilities:\nLogic (Logic1,Logic2)\n\nRemote-control command:\nLOGic<p>:PROBe[:ENABle]?\n\nOption Checking:\nNone"
 "\n"

2 all "Logic Current Maximum" RSRTX_ATTR_LOGIC_CURRENT_MAXIMUM ViInt32 g 
 "Queries current maximum.\n\nAvailable Repeated Capabilities:\nLogic (Logic1,Logic2)\n\nRemote-control command:\nLOGic<p>:CURRent:STATe:MAXimum?\n\nOption Checking:\nNone"
 "\n"

2 all "Logic Current Minimum" RSRTX_ATTR_LOGIC_CURRENT_MINIMUM ViInt32 g 
 "Queries current minimum.\n\nAvailable Repeated Capabilities:\nLogic (Logic1,Logic2)\n\nRemote-control command:\nLOGic<p>:CURRent:STATe:MINimum?\n\nOption Checking:\nNone"
 "\n"

2 all "Logic Point Selection" RSRTX_ATTR_LOGIC_POINT_SELECTION ViInt32 s RsRtx_rngPointSelection
 "Selects a range of samples that will be returned with LOGic<p>:DATA. Depending on the current settings, the memory can contain more data samples than the screen is able to display. In this case, you can decide which data will be saved: samples stored in the memory or only the displayed samples. Note: The sample range can be changed only in STOP mode. If the acquisition is running, DEF is always used automatically. If the acquisition has been stopped, data can be read from the memory, and all settings are "
 "available.\n\nAvailable Repeated Capabilities:\nLogic (Logic1,Logic2)\n\nRemote-control command:\nLOGic<p>:DATA:POINts\n\nOption Checking:\nNone"
 "\n"

2 all "Logic Waveform Data Points" RSRTX_ATTR_LOGIC_WAVEFORM_DATA_POINTS ViInt32 g 
 "Returns the number of returned samples for the selected range.\n\nAvailable Repeated Capabilities:\nLogic (Logic1,Logic2)\n\nRemote-control command:\nLOGic<p>:DATA:POINts?\n\nOption Checking:\nNone"
 "\n"

1 all "Triggering Subsystem"
 "Attributes that control how the oscilloscope triggers.\n"

2 all "Trigger Type A" RSRTX_ATTR_TRIGGER_TYPE_A ViInt32 gs rsrtx_rngTriggerType
 "Sets the trigger type.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:TYPE\n\nOption Checking:\nNone"
 "\n"

2 all "Trigger Source A" RSRTX_ATTR_TRIGGER_SOURCE_A ViInt32 gs rsrtx_rngTriggerSource
 "Sets the trigger source for the selected trigger type.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:SOURce\n\nOption Checking:\nNone"
 "\n"

2 all "Trigger Source B" RSRTX_ATTR_TRIGGER_SOURCE_B ViInt32 gs rsrtx_rngTriggerSource
 "Sets the trigger source for the selected trigger type.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:B:SOURce\n\nOption Checking:\nNone"
 "\n"

2 all "External Trigger Coupling" RSRTX_ATTR_EXTERNAL_TRIGGER_COUPLING ViInt32 gs rsrtx_rngExternalTriggerCoupling
 "Sets the coupling for the external trigger input.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:EXTern:COUPling\n\nOption Checking:\nNone"
 "\n"

2 all "External Trigger Termination" RSRTX_ATTR_EXTERNAL_TRIGGER_TERMINATION ViBoolean gs 
 "Adjusts the input impedance of the external trigger input.\nThe command is only available for instruments with 1 GHz bandwidth.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:EXTern:TERMination\n\nOption Checking:\nNone"
 "\n"

2 all "External Trigger Overload" RSRTX_ATTR_EXTERNAL_TRIGGER_OVERLOAD ViBoolean gs 
 "Retrieves the overload status of the external trigger input from the status bit. When the overload problem is solved, use the command to reset the status bit.\nThe command is only available for instruments with 1 GHz bandwidth.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:EXTern:OVERload\n\nOption Checking:\nNone"
 "\n"

2 all "Trigger Holdoff Time" RSRTX_ATTR_TRIGGER_HOLDOFF_TIME ViReal64 gs 
 "Defines the holdoff time. The next trigger occurs only after the holdoff time has passed.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:HOLDoff:TIME\n\nOption Checking:\nNone"
 "\n"

2 all "Trigger Holdoff Mode" RSRTX_ATTR_TRIGGER_HOLDOFF_MODE ViInt32 gs rsrtx_rngTriggerHoldoffMode
 "Enables or disables the holdoff time.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:HOLDoff:MODE\n\nOption Checking:\nNone"
 "\n"

2 all "Trigger Hysteresis A" RSRTX_ATTR_TRIGGER_HYSTERESIS_A ViInt32 gs rsrtx_rngHysteresisMode
 "Sets a hysteresis range around the trigger level of the A trigger event. If the signal jitters inside this range and crosses the trigger level thereby, no trigger event occurs. Hysteresis is available for edge and width trigger.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:HYSTeresis\n\nOption Checking:\nNone"
 "\n"

2 all "Trigger Hysteresis A Level" RSRTX_ATTR_TRIGGER_HYSTERESIS_A_LEVEL ViInt32 gs 
 "Sets the hysteresis value if TRIGger:A:HYSTeresis is set to MANual. The command is only available on instruments with 1 GHz bandwidth.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:LEVel<n>:HYSTeresis\n\nOption Checking:\nNone"
 "\n"

2 all "Trigger Hysteresis B" RSRTX_ATTR_TRIGGER_HYSTERESIS_B ViInt32 gs rsrtx_rngHysteresisMode
 "Sets a hysteresis range around the trigger level of the A trigger event. If the signal jitters inside this range and crosses the trigger level thereby, no trigger event occurs. Hysteresis is available for edge and width trigger.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:B:HYSTeresis\n\nOption Checking:\nNone"
 "\n"

2 all "Trigger Hysteresis B Level" RSRTX_ATTR_TRIGGER_HYSTERESIS_B_LEVEL ViInt32 gs 
 "Sets the hysteresis value if TRIGger:B:HYSTeresis is set to MANual. The command is only available on instruments with 1 GHz bandwidth.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:B:LEVel:HYSTeresis\n\nOption Checking:\nNone"
 "\n"

2 all "Trigger Enabled" RSRTX_ATTR_TRIGGER_ENABLED ViBoolean gs 
 "Activates or deactivates the second trigger. The instrument triggers if both trigger event conditions (A and B) are fulfilled.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:B:ENABle\n\nOption Checking:\nNone"
 "\n"

2 all "Trigger Modifier A" RSRTX_ATTR_TRIGGER_MODIFIER_A ViInt32 gs rsrtx_rngTriggerMode
 "Sets the trigger mode. The trigger mode determines the behaviour of the instrument if no trigger occurs.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:MODE\n\nOption Checking:\nNone"
 "\n"

2 all "Trigger Modifier B" RSRTX_ATTR_TRIGGER_MODIFIER_B ViInt32 gs rsrtx_rngTriggerMode
 "Sets the trigger mode. The trigger mode determines the behaviour of the instrument if no trigger occurs.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:B:MODE\n\nOption Checking:\nNone"
 "\n"

2 all "Trigger Event Count" RSRTX_ATTR_TRIGGER_EVENT_COUNT ViInt32 gs 
 "Sets a number of B-trigger events that fulfill all B-trigger conditions but do not cause the trigger. The oscilloscope triggers on the n-th event (the last of the specified number of events).\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:B:EVENt:COUNt\n\nOption Checking:\nNone"
 "\n"

2 all "Trigger Level Auto Find A" RSRTX_ATTR_TRIGGER_LEVEL_AUTO_FIND_A ViString s 
 "Sets the trigger level automatically. The attribute is not available for an external trigger source.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:FINDlevel\n\nOption Checking:\nNone"
 "\n"

2 all "Trigger Level Auto Find B" RSRTX_ATTR_TRIGGER_LEVEL_AUTO_FIND_B ViString s 
 "Sets the trigger level automatically. The attribute is not available for an external trigger source.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:B:FINDlevel\n\nOption Checking:\nNone"
 "\n"

2 all "Trigger Level Lower" RSRTX_ATTR_TRIGGER_LEVEL_LOWER ViReal64 gs 
 "Set the lower voltage threshold, respectively. When the signal crosses these levels, the slew rate measurement starts or stops depending on the selected polarity.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:LEVel<n>:RISetime:LOWer\n\nOption Checking:\nNone"
 "\n"

2 all "Trigger Level Upper" RSRTX_ATTR_TRIGGER_LEVEL_UPPER ViReal64 gs 
 "Set the uper voltage threshold, respectively. When the signal crosses these levels, the slew rate measurement starts or stops depending on the selected polarity.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:LEVel<n>:RISetime:UPPer\n\nOption Checking:\nNone"
 "\n"

2 all "Trigger Delay" RSRTX_ATTR_TRIGGER_DELAY ViReal64 gs 
 "Sets the time the instrument waits after an A-event until it recognizes B-events. Before setting the dalay time, TRIGger: B: MODE must be set to DELAy.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:B:DELay\n\nOption Checking:\nNone"
 "\n"

2 all "Channel"
 "Attributes that control how the oscilloscope triggers.\n"

3 all "Trigger Level A" RSRTX_ATTR_TRIGGER_LEVEL_A ViReal64 gs 
 "Sets the trigger level for the specified event and source.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nTRIGger:A:LEVel<n>[:VALue]\n\nOption Checking:\nNone"
 "\n"

3 all "Trigger Level B" RSRTX_ATTR_TRIGGER_LEVEL_B ViReal64 gs 
 "Sets the trigger level for the specified event and source.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nTRIGger:B:LEVel<n>[:VALue]\n\nOption Checking:\nNone"
 "\n"

2 all "Edge Triggering"
 "Attributes that configure the edge trigger.  An edge trigger occurs when the trigger signal passes through the voltage threshold you specify with the RSRTX_ATTR_TRIGGER_LEVEL attribute and has the slope you specify with the RSRTX_ATTR_TRIGGER_SLOPE attribute.\n"

3 all "Trigger Slope A" RSRTX_ATTR_TRIGGER_SLOPE_A ViInt32 gs rsrtx_rngTriggerSlope
 "Sets the slope for the edge trigger.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:EDGE:SLOPe\n\nOption Checking:\nNone"
 "\n"

3 all "Trigger Slope B" RSRTX_ATTR_TRIGGER_SLOPE_B ViInt32 gs rsrtx_rngTriggerSlope
 "Sets the slope for the edge trigger.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:B:EDGE:SLOPe\n\nOption Checking:\nNone"
 "\n"

3 all "Trigger Coupling" RSRTX_ATTR_TRIGGER_COUPLING ViInt32 gs rsrtx_rngTriggerCoupling
 "Sets the coupling for the trigger source.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:EDGE:COUPling\n\nOption Checking:\nNone"
 "\n"

3 all "Trigger Filter High" RSRTX_ATTR_TRIGGER_FILTER_HIGH ViBoolean gs 
 "Turns an additional high-pass filter in the trigger path on or off. This filter removes higher frequencies and is available with AC and DC coupling.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:EDGE:FILTer:NREJect\n\nOption Checking:\nNone"
 "\n"

3 all "Trigger Filter HF Reject" RSRTX_ATTR_TRIGGER_FILTER_HF_REJECT ViBoolean gs 
 "Enables or disables an additional 5 kHz lowpass filter in the trigger path. This filter removes higher frequencies and is available with AC and DC coupling.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:EDGE:FILTer:HFReject\n\nOption Checking:\nNone"
 "\n"

2 all "TV Triggering"
 "Attributes that configure the oscilloscope to trigger on TV signals.\n"

3 all "TV Trigger Event" RSRTX_ATTR_TV_TRIGGER_EVENT ViInt32 gs rsrtx_rngTVTriggerEvent
 "Sets the trigger on the beginning of the video signal fields, or on the beginning of video signal lines.\n\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:TV:FIELd\n\nOption Checking:\nNone"
 "\n"

3 all "TV Trigger Line Number" RSRTX_ATTR_TV_TRIGGER_LINE_NUMBER ViInt32 gs 
 "Sets an exact line number if Trigger Event is set to LINE.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:TV:LINE\n\nOption Checking:\nNone"
 "\n"

3 all "TV Trigger Polarity" RSRTX_ATTR_TV_TRIGGER_POLARITY ViInt32 gs rsrtx_rngPolarity
 "Sets the polarity of the sync pulses. The edges of the sync pulses are used for triggering.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:TV:POLarity\n\nOption Checking:\nNone"
 "\n"

3 all "TV Standard" RSRTX_ATTR_TV_STANDARD ViInt32 gs rsrtx_rngTVStandard
 "Selects the color television standard.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:TV:STANdard\n\nOption Checking:\nNone"
 "\n"

2 all "Width Triggering"
 "Width Triggering\n"

3 all "Width" RSRTX_ATTR_WIDTH ViReal64 gs 
 "For the ranges WITHin and OUTSide, the <Time1> defines the center of a range which is defined by the limits +-<Delta>. For the ranges SHORter and LONGer, the width defines the maximum and minimum pulse width, respectively.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:WIDTh:WIDTh\n\nOption Checking:\nNone"
 "\n"

3 all "Width Delta" RSRTX_ATTR_WIDTH_DELTA ViReal64 gs 
 "Defines a range around the width value.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:WIDTh:DELTa\n\nOption Checking:\nNone"
 "\n"

3 all "Width Polarity" RSRTX_ATTR_WIDTH_POLARITY ViInt32 gs rsrtx_rngPolarity
 "Sets the polarity of the pulse.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:WIDTh:POLarity\n\nOption Checking:\nNone"
 "\n"

3 all "Width Condition" RSRTX_ATTR_WIDTH_CONDITION ViInt32 gs rsrtx_rngWidthCondition
 "Defines how the measured pulse width is compared with the given limit(s).\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:WIDTh:RANGe\n\nOption Checking:\nNone"
 "\n"

2 all "Trigger Pattern"
 "Atributes configures the Pattern Trigger.\n"

3 all "Trigger Pattern Source" RSRTX_ATTR_TRIGGER_PATTERN_SOURCE ViString gs 
 "Select the state for each digital channel.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:PATTern:SOURce\n\nOption Checking:\nNone"
 "\n"

3 all "Trigger Pattern Function" RSRTX_ATTR_TRIGGER_PATTERN_FUNCTION ViInt32 gs rsrtx_rngTriggerPatternFunction
 "Sets the logical combination of the trigger states of the channels.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:PATTern:FUNCtion\n\nOption Checking:\nNone"
 "\n"

3 all "Trigger Pattern Point Enabled" RSRTX_ATTR_TRIGGER_PATTERN_POINT_ENABLED ViBoolean gs 
 "Sets the trigger point depending on the result of the logical combination of the channel states.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:PATTern:CONDition\n\nOption Checking:\nNone"
 "\n"

3 all "Trigger Pattern Mode" RSRTX_ATTR_TRIGGER_PATTERN_MODE ViInt32 gs rsrtx_rngTriggerPatternMode
 "Disables the time limitation or sets the time comparison mode.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:PATTern:MODE\n\nOption Checking:\nNone"
 "\n"

3 all "Trigger Pattern Width" RSRTX_ATTR_TRIGGER_PATTERN_WIDTH ViReal64 gs 
 "For the ranges WITHin and OUTSide, the <PatternWidth> defines the center of a range which is defined by the limits <Delta>.\n\nFor the ranges SHORter and LONGer, the pattern width defines the maximum and minimum values, respectively.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:PATTern:WIDTh[:WIDTh]\n\nOption Checking:\nNone"
 "\n"

3 all "Trigger Pattern Width Delta" RSRTX_ATTR_TRIGGER_PATTERN_WIDTH_DELTA ViReal64 gs 
 "Defines a range around the pattern width value specified using TRIGger:A:PATTern:WIDTh[:WIDTh].\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:PATTern:WIDTh:DELTa\n\nOption Checking:\nNone"
 "\n"

3 all "Trigger Pattern Width Condition" RSRTX_ATTR_TRIGGER_PATTERN_WIDTH_CONDITION ViInt32 gs rsrtx_rngWidthCondition
 "Selects how the time limit of the pattern state is defined.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:PATTern:WIDTh:RANGe\n\nOption Checking:\nNone"
 "\n"

2 all "Window"
 "Window Triggering.\n"

3 all "Trigger Window Range" RSRTX_ATTR_TRIGGER_WINDOW_RANGE ViInt32 gs rsrtx_rngWindowRange
 "Sets how the measured pulse width is compared with the given limit(s).\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:WINDow:RANGe\n\nOption Checking:\nNone"
 "\n"

3 all "Trigger Window Width" RSRTX_ATTR_TRIGGER_WINDOW_WIDTH ViReal64 gs 
 "Configures window trigger width.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:WINDow:WIDTh\n\nOption Checking:\nNone"
 "\n"

3 all "Trigger Window Time Range" RSRTX_ATTR_TRIGGER_WINDOW_TIME_RANGE ViInt32 gs rsrtx_rngWidthCondition
 "Configures the window time range.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:WINDow:TIME\n\nOption Checking:\nNone"
 "\n"

2 all "Trigger Time"
 "Atributes configures the Trigger Time.\n"

3 all "Trigger Time Polarity" RSRTX_ATTR_TRIGGER_TIME_POLARITY ViInt32 gs rsrtx_rngPolarity
 "Sets the edge of whic the transition time is to be analyzed.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:RISetime:SLOPe\n\nOption Checking:\nNone"
 "\n"

3 all "Trigger Time Condition" RSRTX_ATTR_TRIGGER_TIME_CONDITION ViInt32 gs rsrtx_rngWidthCondition
 "Selects how the time limit of the rise or fall time is defined.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:RISetime:RANGe\n\nOption Checking:\nNone"
 "\n"

3 all "Trigger Time" RSRTX_ATTR_TRIGGER_TIME ViReal64 gs 
 "For the ranges LONGer and SHORter, the command defines the minimum and maximum transition times, respectively.\n\nFor the ranges WITHin and OUTSide, the command defines the center of a time range which is defined using TRIGger:A:RISetime:DELTa.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:RISetime:TIME\n\nOption Checking:\nNone"
 "\n"

3 all "Trigger Time Delta" RSRTX_ATTR_TRIGGER_TIME_DELTA ViReal64 gs 
 "Sets a time range around the time value defined using TRIGger:A:RISetime:TIME if TRIGger:A:RISetime:RANGe is set to WITHin | OUTSide.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:RISetime:DELTa\n\nOption Checking:\nNone"
 "\n"

2 all "Actions On Trigger"
 "A trigger event can be used to initiate one or several actions. All available actions can be initiated at the same time, and for all trigger types.\n"

3 all "Actions On Trigger Enabled" RSRTX_ATTR_ACTIONS_ON_TRIGGER_ENABLED ViBoolean gs 
 "Activates the selected actions on trigger event.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:EVENt[:ENABle]\n\nOption Checking:\nNone"
 "\n"

3 all "Actions On Trigger Sound" RSRTX_ATTR_ACTIONS_ON_TRIGGER_SOUND ViBoolean gs 
 "If ON, the instrument generates a beep on trigger event. The acquisition is not delayed, the sound generation runs asynchronously. The minimum time between two beeps is 1 s. If the instrument triggers faster, not all events are notified by a beep.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:EVENt:SOUNd\n\nOption Checking:\nNone"
 "\n"

3 all "Actions On Trigger Screenshot" RSRTX_ATTR_ACTIONS_ON_TRIGGER_SCREENSHOT ViBoolean gs 
 "If ON, the instrument saves a screenshot on each trigger event. The screenshot is saved when the acquisition is complete. During saving, the acquisition stops, and restarts when saving is finished. Thus, the waveform update rate decreases significantly.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:EVENt:SCRSave\n\nOption Checking:\nNone"
 "\n"

3 all "Actions On Trigger Save Waveform" RSRTX_ATTR_ACTIONS_ON_TRIGGER_SAVE_WAVEFORM ViBoolean gs 
 "If ON, the instrument saves the data of a selected waveform on each trigger event. The waveform is saved when the acquisition is complete. During saving, the acquisition stops, and restarts when saving is finished. Thus, the waveform update rate decreases significantly.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:EVENt:WFMSave\n\nOption Checking:\nNone"
 "\n"

3 all "Actions On Trigger References" RSRTX_ATTR_ACTIONS_ON_TRIGGER_REFERENCES ViBoolean gs 
 "Saves reference waveforms of all active channels, and activates the references. This action works only with single acquisition.\nThe channels are assigned to the references: C1 to R1, C2 to R2 and so on. If a channel is off, the assigned reference is also not active.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:EVENt:REFSave\n\nOption Checking:\nNone"
 "\n"

3 all "Actions On Trigger Pulse Out" RSRTX_ATTR_ACTIONS_ON_TRIGGER_PULSE_OUT ViBoolean gs 
 "If ON, the instrument generates a pulse on the Aux Out connector on trigger event. The acquisition is not delayed, the pulse generation runs asynchronously.\nTo set the pulse width and polarity of the trigger out pulse, use:\nRSRTX_ATTR_TRIGGER_OUT_PULSE_WIDTH\nRSRTX_ATTR_TRIGGER_OUT_POLARITY\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:EVENt:TRIGgerout\n\nOption Checking:\nNone"
 "\n"

2 all "Trigger Out"
 "Atributes configures the Trigger Out.\n"

3 all "Trigger Out Mode" RSRTX_ATTR_TRIGGER_OUT_MODE ViInt32 gs rsrtx_rngTriggerOutMode
 "Defines wether and when a trigger out pulse is generated: never, on trigger event, or on mask violation.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:OUT:MODE\n\nOption Checking:\nNone"
 "\n"

3 all "Trigger Out Polarity" RSRTX_ATTR_TRIGGER_OUT_POLARITY ViInt32 gs rsrtx_rngPolarity
 "Sets the polarity of the trigger out pulse.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:OUT:POLarity\n\nOption Checking:\nNone"
 "\n"

3 all "Trigger Out Pulse Width" RSRTX_ATTR_TRIGGER_OUT_PULSE_WIDTH ViReal64 gs 
 "Defines the pulse width of the trigger out pulse.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:OUT:PLENgth\n\nOption Checking:\nNone"
 "\n"

2 all "Runt"
 "A runt is a pulse lower than normal in amplitude. The amplitude crosses the first\nthreshold twice in succession without crossing the second one. For example, this trig-\nger can detect logic, digital, and analog signals remaining below a specified threshold\namplitude because I/O ports are in undefined state.\n"

3 all "Runt Trigger Polarity" RSRTX_ATTR_RUNT_TRIGGER_POLARITY ViInt32 gs rsrtx_rngPolarity
 "Sets the polarity of a pulse, that is the direction of the first pulse slope.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:RUNT:POLarity\n\nOption Checking:\nNone"
 "\n"

3 all "Runt Trigger Width" RSRTX_ATTR_RUNT_TRIGGER_WIDTH ViReal64 gs 
 "For the ranges WITHin and OUTSide, the <Time1> defines the center of a range which is defined by the limits +-<Delta>. For the ranges SHORter and LONGer, the width defines the maximum and minimum pulse width, respectively.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:RUNT:WIDTh\n\nOption Checking:\nNone"
 "\n"

3 all "Runt Trigger Delta" RSRTX_ATTR_RUNT_TRIGGER_DELTA ViReal64 gs 
 "Defines a range around the width value.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:RUNT:DELTa\n\nOption Checking:\nNone"
 "\n"

3 all "Runt Trigger Range" RSRTX_ATTR_RUNT_TRIGGER_RANGE ViInt32 gs rsrtx_rngWidthCondition
 "Defines how the measured pulse width is compared with the given limit(s).\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:RUNT:RANGe\n\nOption Checking:\nNone"
 "\n"

3 all "Channel"
 "Attributes with channel repcap.\n"

4 all "Runt Trigger Lower Level" RSRTX_ATTR_RUNT_TRIGGER_LOWER_LEVEL ViReal64 gs 
 "Set the lower voltage threshold. The instrument triggers if the amplitude crosses the first threshold twice in succession without crossing the second one.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nTRIGger:A:LEVel<n>:RUNT:LOWer\n\nOption Checking:\nNone"
 "\n"

4 all "Runt Trigger Upper Level" RSRTX_ATTR_RUNT_TRIGGER_UPPER_LEVEL ViReal64 gs 
 "Set the upper voltage threshold. The instrument triggers if the amplitude crosses the first threshold twice in succession without crossing the second one.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nTRIGger:A:LEVel<n>:RUNT:UPPer\n\nOption Checking:\nNone"
 "\n"

2 all "Timeout"
 "Configures the timeout trigger.\n"

3 all "Timeout Trigger Time" RSRTX_ATTR_TIMEOUT_TRIGGER_TIME ViReal64 gs 
 "Sets the time limit for the timeout at which the instrument triggers.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:TIMeout:TIME\n\nOption Checking:\nNone"
 "\n"

3 all "Timeout Trigger Range" RSRTX_ATTR_TIMEOUT_TRIGGER_RANGE ViInt32 gs RsRtx_rngTimeoutRange
 "Sets the relation of the signal level to the threshold.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:TIMeout:RANGe\n\nOption Checking:\nNone"
 "\n"

2 all "I2C"
 "Atributes configures the Trigger for I2C protocol.\n"

3 all "Protocol I2C Trigger Access" RSRTX_ATTR_PROTOCOL_I2C_TRIGGER_ACCESS ViInt32 gs rsrtx_rngProtocolI2CAccessBit
 "Toggles the trigger condition between Read and Write access of the master.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:I2C:ACCess\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol I2C Trigger Address Type" RSRTX_ATTR_PROTOCOL_I2C_TRIGGER_ADDRESS_TYPE ViInt32 gs rsrtx_rngAddressLength
 "Sets the lenght of the slave address.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:I2C:AMODe\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol I2C Trigger Address" RSRTX_ATTR_PROTOCOL_I2C_TRIGGER_ADDRESS ViString gs 
 "Sets the address of the slave device. The address can have 7 bits or 10 bits.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:I2C:ADDRess\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol I2C Trigger Mode" RSRTX_ATTR_PROTOCOL_I2C_TRIGGER_MODE ViInt32 gs rsrtx_rngProtocolI2CTriggerType
 "Specifies the trigger mode for I2C.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:I2C:MODE\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol I2C Trigger Condition Length" RSRTX_ATTR_PROTOCOL_I2C_TRIGGER_CONDITION_LENGTH ViInt32 gs 
 "Defines how many bytes are considered in the trigger condition. To set the pattern for these bytes, use TRIGger: A: I2C: PATTern.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:I2C:PLENgth\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol I2C Trigger Bit Pattern" RSRTX_ATTR_PROTOCOL_I2C_TRIGGER_BIT_PATTERN ViString gs 
 "Defines the bit pattern as trigger condition. SBinary pattern with max. 24 bit. Characters 0, 1, and X are allowed.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:I2C:PATTern\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol I2C Trigger First Byte Offset" RSRTX_ATTR_PROTOCOL_I2C_TRIGGER_FIRST_BYTE_OFFSET ViInt32 gs 
 "Sets the number of bytes before the first byte of interest, relating to the end of the address bytes.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:I2C:POFFset\n\nOption Checking:\nNone"
 "\n"

2 all "SPI"
 "Atributes configures the Trigger for SPI protocol.\n"

3 all "Protocol SPI Trigger Mode" RSRTX_ATTR_PROTOCOL_SPI_TRIGGER_MODE ViInt32 gs rsrtx_rngProtocolSPITriggerType
 "Specifies the trigger mode for SPI/SSPI protocols.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:SPI:MODE\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol SPI Trigger Source" RSRTX_ATTR_PROTOCOL_SPI_TRIGGER_SOURCE ViInt32 gs rsrtx_rngProtocolSPITriggerSource
 "Selects the trigger source.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:SOURce:SPI\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol SPI Trigger Offset" RSRTX_ATTR_PROTOCOL_SPI_TRIGGER_OFFSET ViReal64 gs 
 "Sets the number of bits before the first bit of the pattern.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:SPI:POFFset\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol SPI Bit Pattern Length" RSRTX_ATTR_PROTOCOL_SPI_BIT_PATTERN_LENGTH ViInt32 gs 
 "Defines how many bits build up the serial pattern.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:SPI:PLENgth\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol SPI Bit Pattern" RSRTX_ATTR_PROTOCOL_SPI_BIT_PATTERN ViString gs 
 "Defines the bit pattern as trigger condition.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:SPI:PATTern\n\nOption Checking:\nNone"
 "\n"

2 all "UART"
 "Atributes configures the Trigger for UART protocol.\n"

3 all "Protocol UART Trigger Mode" RSRTX_ATTR_PROTOCOL_UART_TRIGGER_MODE ViInt32 gs rsrtx_rngProtocolUARTTriggerType
 "Specifies the trigger mode for UART/RS-232 interfaces.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:UART:MODE\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol UART Trigger Source" RSRTX_ATTR_PROTOCOL_UART_TRIGGER_SOURCE ViInt32 gs RsRtx_rngUARTTriggerSource
 "Configures the UART trigger source\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:SOURce:UART\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol UART Trigger Data Pattern" RSRTX_ATTR_PROTOCOL_UART_TRIGGER_DATA_PATTERN ViString gs 
 "Defines the bit pattern as trigger condition.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:UART:PATTern\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol UART Trigger Data Position Index Min" RSRTX_ATTR_PROTOCOL_UART_TRIGGER_DATA_POSITION_INDEX_MIN ViInt32 gs 
 "Sets the number of symbols before the first symbol of the pattern.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:UART:POFFset\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol UART Trigger Condition Length" RSRTX_ATTR_PROTOCOL_UART_TRIGGER_CONDITION_LENGTH ViInt32 gs 
 "Defines how many symbols build up the serial pattern.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:UART:PLENgth\n\nOption Checking:\nNone"
 "\n"

2 all "LIN"
 "Atributes configures the Trigger for LIN protocol.\n"

3 all "Protocol LIN Trigger Mode" RSRTX_ATTR_PROTOCOL_LIN_TRIGGER_MODE ViInt32 gs rsrtx_rngProtocolLINTriggerMode
 "Selects the trigger type for LIN analysis.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:LIN:TYPE\n\nOption Checking:\nK3"
 "\n"

3 all "Protocol LIN Trigger Condition ID" RSRTX_ATTR_PROTOCOL_LIN_TRIGGER_CONDITION_ID ViInt32 gs rsrtx_rngProtocolCondition
 "Sets the condition.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:LIN:ICONdition\n\nOption Checking:\nK3"
 "\n"

3 all "Protocol LIN Trigger Condition Data" RSRTX_ATTR_PROTOCOL_LIN_TRIGGER_CONDITION_DATA ViInt32 gs rsrtx_rngProtocolCondition
 "Sets the condition.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:LIN:DCONdition\n\nOption Checking:\nK3"
 "\n"

3 all "Protocol LIN Trigger ID Pattern" RSRTX_ATTR_PROTOCOL_LIN_TRIGGER_ID_PATTERN ViString gs 
 "Defines the identifier pattern.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:LIN:IDENtifier\n\nOption Checking:\nK3"
 "\n"

3 all "Protocol LIN Trigger Data Length" RSRTX_ATTR_PROTOCOL_LIN_TRIGGER_DATA_LENGTH ViInt32 gs 
 "Defines the length of the data pattern - the number of bytes in the pattern.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:LIN:DLENgth\n\nOption Checking:\nK3"
 "\n"

3 all "Protocol LIN Trigger Data Pattern" RSRTX_ATTR_PROTOCOL_LIN_TRIGGER_DATA_PATTERN ViString gs 
 "Defines the data pattern.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:LIN:DATA\n\nOption Checking:\nK3"
 "\n"

3 all "Protocol LIN Trigger Error Checksum" RSRTX_ATTR_PROTOCOL_LIN_TRIGGER_ERROR_CHECKSUM ViBoolean gs 
 "Configures conditions for Error Condition trigger.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:LIN:CHKSerror\n\nOption Checking:\nK3"
 "\n"

3 all "Protocol LIN Trigger Error Parity" RSRTX_ATTR_PROTOCOL_LIN_TRIGGER_ERROR_PARITY ViBoolean gs 
 "Configures conditions for Error Condition trigger.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:LIN:IPERror\n\nOption Checking:\nK3"
 "\n"

3 all "Protocol LIN Trigger Error Sync" RSRTX_ATTR_PROTOCOL_LIN_TRIGGER_ERROR_SYNC ViBoolean gs 
 "Configures conditions for Error Condition trigger.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:LIN:SYERror\n\nOption Checking:\nK3"
 "\n"

2 all "CAN"
 "Atributes configures the Trigger for CAN protocol.\n"

3 all "Protocol CAN Trigger Mode" RSRTX_ATTR_PROTOCOL_CAN_TRIGGER_MODE ViInt32 gs rsrtx_rngProtocolCANTriggerMode
 "Selects the trigger type for LIN analysis.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:CAN:TYPE\n\nOption Checking:\nK3"
 "\n"

3 all "Protocol CAN Trigger Frame Type" RSRTX_ATTR_PROTOCOL_CAN_TRIGGER_FRAME_TYPE ViInt32 gs rsrtx_rngProtocolCANTriggerFrameType
 "Selects the frame type which will be used as trigger condition.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:CAN:FTYPe\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol CAN Trigger Condition ID" RSRTX_ATTR_PROTOCOL_CAN_TRIGGER_CONDITION_ID ViInt32 gs rsrtx_rngProtocolCondition
 "Sets the condition.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:CAN:ICONdition\n\nOption Checking:\nK3"
 "\n"

3 all "Protocol CAN Trigger Condition Data" RSRTX_ATTR_PROTOCOL_CAN_TRIGGER_CONDITION_DATA ViInt32 gs rsrtx_rngProtocolCondition
 "Sets the condition.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:CAN:DCONdition\n\nOption Checking:\nK3"
 "\n"

3 all "Protocol CAN Trigger ID Type" RSRTX_ATTR_PROTOCOL_CAN_TRIGGER_ID_TYPE ViInt32 gs rsrtx_rngProtocolCANIDType
 "Selects the format of data and remote frames.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:CAN:ITYPe\n\nOption Checking:\nK3"
 "\n"

3 all "Protocol CAN Trigger ID Pattern" RSRTX_ATTR_PROTOCOL_CAN_TRIGGER_ID_PATTERN ViString gs 
 "Defines the identifier pattern.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:CAN:IDENtifier\n\nOption Checking:\nK3"
 "\n"

3 all "Protocol CAN Trigger Data Length" RSRTX_ATTR_PROTOCOL_CAN_TRIGGER_DATA_LENGTH ViInt32 gs 
 "Defines the length of the data pattern - the number of bytes in the pattern.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:CAN:DLC\n\nOption Checking:\nK3"
 "\n"

3 all "Protocol CAN Trigger Data Pattern" RSRTX_ATTR_PROTOCOL_CAN_TRIGGER_DATA_PATTERN ViString gs 
 "Defines the data pattern.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:CAN:DATA\n\nOption Checking:\nK3"
 "\n"

3 all "Protocol CAN Trigger Error CRC" RSRTX_ATTR_PROTOCOL_CAN_TRIGGER_ERROR_CRC ViBoolean gs 
 "Configures conditions for Error Condition trigger.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:CAN:CRCerror\n\nOption Checking:\nK3"
 "\n"

3 all "Protocol CAN Trigger Error Stuffing" RSRTX_ATTR_PROTOCOL_CAN_TRIGGER_ERROR_STUFFING ViBoolean gs 
 "Configures conditions for Error Condition trigger.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:CAN:BITSterror\n\nOption Checking:\nK3"
 "\n"

3 all "Protocol CAN Trigger Error Form" RSRTX_ATTR_PROTOCOL_CAN_TRIGGER_ERROR_FORM ViBoolean gs 
 "Configures conditions for Error Condition trigger.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:CAN:FORMerror\n\nOption Checking:\nK3"
 "\n"

3 all "Protocol CAN Trigger Error Ack" RSRTX_ATTR_PROTOCOL_CAN_TRIGGER_ERROR_ACK ViBoolean gs 
 "Configures conditions for Error Condition trigger.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:CAN:ACKerror\n\nOption Checking:\nK3"
 "\n"

2 all "Audio Signals"
 "Configures Audio Signals trigger settings.\n"

3 all "Protocol Audio Trigger Type" RSRTX_ATTR_PROTOCOL_AUDIO_TRIGGER_TYPE ViInt32 gs rsrtx_rngAudioTriggerType
 "This attribute select the trigger type.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:I2S:TYPE\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol Audio Trigger Window Length" RSRTX_ATTR_PROTOCOL_AUDIO_TRIGGER_WINDOW_LENGTH ViInt32 gs 
 "Sets the number of words that is used as time limit for the Window trigger type.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:I2S:WINDow:LENGth\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol Audio Trigger Word Select Slope" RSRTX_ATTR_PROTOCOL_AUDIO_TRIGGER_WORD_SELECT_SLOPE ViInt32 gs rsrtx_rngPolarity
 "Sets the edge of the WS or FSYNC signal as trigger condition.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:I2S:WSELect:SLOPe\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol Audio Trigger Right Condition" RSRTX_ATTR_PROTOCOL_AUDIO_TRIGGER_RIGHT_CONDITION ViInt32 gs rsrtx_rngAudioTriggerCondition
 "Define the operators for comparison of the decoded data words with the specified data words on the specified channel.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:I2S:CHANnel:RIGHt:CONDition\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol Audio Trigger Right Minimum" RSRTX_ATTR_PROTOCOL_AUDIO_TRIGGER_RIGHT_MINIMUM ViInt32 gs 
 "Specifies the data word to be found, or the minimum value of a data range.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:I2S:CHANnel:RIGHt:DMIN\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol Audio Trigger Right Maximum" RSRTX_ATTR_PROTOCOL_AUDIO_TRIGGER_RIGHT_MAXIMUM ViInt32 gs 
 "Specifies the maximum data value to be found.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:I2S:CHANnel:RIGHt:DMAX\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol Audio Trigger Left Condition" RSRTX_ATTR_PROTOCOL_AUDIO_TRIGGER_LEFT_CONDITION ViInt32 gs rsrtx_rngAudioTriggerCondition
 "Define the operators for comparison of the decoded data words with the specified data words on the specified channel.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:I2S:CHANnel:LEFT:CONDition\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol Audio Trigger Left Minimum" RSRTX_ATTR_PROTOCOL_AUDIO_TRIGGER_LEFT_MINIMUM ViInt32 gs 
 "Specifies the data word to be found, or the minimum value of a data range.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:I2S:CHANnel:LEFT:DMIN\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol Audio Trigger Left Maximum" RSRTX_ATTR_PROTOCOL_AUDIO_TRIGGER_LEFT_MAXIMUM ViInt32 gs 
 "Specifies the maximum data value to be found.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:I2S:CHANnel:LEFT:DMAX\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol Audio Trigger Combination" RSRTX_ATTR_PROTOCOL_AUDIO_TRIGGER_COMBINATION ViInt32 gs rsrtx_rngAudioTriggerCombination
 "Sets the logical combination to trigger on data words on different channels. The instrument triggers if all conditions are met inside one frame.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:I2S:FUNCtion\n\nOption Checking:\nNone"
 "\n"

3 all "Track Channel"
 "Selects the track channel.\n"

4 all "Protocol Audio Trigger Channel Condition" RSRTX_ATTR_PROTOCOL_AUDIO_TRIGGER_CHANNEL_CONDITION ViInt32 gs rsrtx_rngAudioTriggerCondition
 "Define the operators for comparison of the decoded data words with the specified data words on the specified channel.\n\nAvailable Repeated Capabilities:\nTDMChannel (TDM0,TDM1,TDM2,TDM3,TDM4,TDM5,TDM6,TDM7,TDM8)\n\nRemote-control command:\nTRIGger:A:I2S:CHANnel:TDM<n>:CONDition\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol Audio Trigger Channel Minimum" RSRTX_ATTR_PROTOCOL_AUDIO_TRIGGER_CHANNEL_MINIMUM ViInt32 gs 
 "Specifies the data word to be found, or the minimum value of a data range.\n\nAvailable Repeated Capabilities:\nTDMChannel (TDM0,TDM1,TDM2,TDM3,TDM4,TDM5,TDM6,TDM7,TDM8)\n\nRemote-control command:\nTRIGger:A:I2S:CHANnel:TDM<n>:DMIN\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol Audio Trigger Channel Maximum" RSRTX_ATTR_PROTOCOL_AUDIO_TRIGGER_CHANNEL_MAXIMUM ViInt32 gs 
 "Specifies the maximum data value to be found.\n\nAvailable Repeated Capabilities:\nTDMChannel (TDM0,TDM1,TDM2,TDM3,TDM4,TDM5,TDM6,TDM7,TDM8)\n\nRemote-control command:\nTRIGger:A:I2S:CHANnel:TDM<n>:DMAX\n\nOption Checking:\nNone"
 "\n"

2 all "MILSTD"
 "The MIL-STD-1553 specification defines the characteristics of a serial data bus originally designed for use in the military avionics. Nowadays it is also used in spacecraft on-board data handling.\n"

3 all "MILSTD Trigger Type" RSRTX_ATTR_MILSTD_TRIGGER_TYPE ViInt32 gs rsrtx_rngMILSTDTriggerType
 "This attribute select the trigger type.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:MILStd:TYPE\n\nOption Checking:\nNone"
 "\n"

3 all "MILSTD Trigger Mode" RSRTX_ATTR_MILSTD_TRIGGER_MODE ViInt32 gs rsrtx_rngMILSTDTriggerType
 "This attribute select the trigger mode.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:MILStd:MODE\n\nOption Checking:\nNone"
 "\n"

3 all "MILSTD Trigger Synchronization" RSRTX_ATTR_MILSTD_TRIGGER_SYNCHRONIZATION ViInt32 gs rsrtx_rngMILSTDTriggerSync
 "This attribute select the trigger type.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:MILStd:SYNC\n\nOption Checking:\nNone"
 "\n"

3 all "MILSTD Trigger Word" RSRTX_ATTR_MILSTD_TRIGGER_WORD ViInt32 gs rsrtx_rngMILSTDTriggerWord
 "Selects the word type to be triggered on.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:MILStd:WORD\n\nOption Checking:\nNone"
 "\n"

3 all "MILSTD Trigger Transmission Type" RSRTX_ATTR_MILSTD_TRIGGER_TRANSMISSION_TYPE ViInt32 gs rsrtx_rngMILSTDTransmissionType
 "Sets the transmission type to be triggered on.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:MILStd:TTYPe\n\nOption Checking:\nNone"
 "\n"

3 all "MILSTD Trigger Frame" RSRTX_ATTR_MILSTD_TRIGGER_FRAME ViInt32 gs RsRtx_rngMILSTDTriggerFrame
 "Configures trigger frame.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:MILStd:FRAMe\n\nOption Checking:\nNone"
 "\n"

3 all "Error"
 "Triggers on any combination of protocol errors. You can enable triggering on a specific type of error.\n"

4 all "MILSTD Trigger Synchronization Error" RSRTX_ATTR_MILSTD_TRIGGER_SYNCHRONIZATION_ERROR ViBoolean gs 
 "Enables/disables triggering when a sync impulse doesn't fulfil the technical requirements or when the transmission is not valid.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:MILStd:ERRor:SYNC\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Trigger Timeout Error" RSRTX_ATTR_MILSTD_TRIGGER_TIMEOUT_ERROR ViBoolean gs 
 "Enables/ disables triggering when the timeout is out of the set range.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:MILStd:ERRor:TIMeout\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Trigger Parity Error" RSRTX_ATTR_MILSTD_TRIGGER_PARITY_ERROR ViBoolean gs 
 "Enables/disables triggering when the parity is even.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:MILStd:ERRor:PARity\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Trigger Manchester Error" RSRTX_ATTR_MILSTD_TRIGGER_MANCHESTER_ERROR ViBoolean gs 
 "Enables/disables triggering if there is an error in the Manchester coding of the signal.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:MILStd:ERRor:MANChester\n\nOption Checking:\nNone"
 "\n"

3 all "Command"
 "Triggers on any combination of protocol errors. You can enable triggering on a specific type of error.\n"

4 all "MILSTD Trigger Command Type" RSRTX_ATTR_MILSTD_TRIGGER_COMMAND_TYPE ViInt32 gs rsrtx_rngMILSTDTriggerCommandType
 "Triggers on a command type.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:MILStd:COMMand:TYPE\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Trigger Command Data Direction" RSRTX_ATTR_MILSTD_TRIGGER_COMMAND_DATA_DIRECTION ViInt32 gs rsrtx_rngMILSTDDirection
 "Triggers on a command type.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:MILStd:TRMode\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Trigger RT Address Condition" RSRTX_ATTR_MILSTD_TRIGGER_RT_ADDRESS_CONDITION ViInt32 gs rsrtx_rngMILSTDCondition
 "For the RT address, sets the triggering condition for the comparison of the decoded value to the defined range.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:MILStd:RTADdress:CONDition\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Trigger RT Address Minimum" RSRTX_ATTR_MILSTD_TRIGGER_RT_ADDRESS_MINIMUM ViString gs 
 "Sets the minimum RT address. \n01X-string\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:MILStd:RTADdress:MINimum\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Trigger RT Address Maximum" RSRTX_ATTR_MILSTD_TRIGGER_RT_ADDRESS_MAXIMUM ViString gs 
 "Sets the maximum RT address. \n01X-string\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:MILStd:RTADdress:MAXimum\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Trigger Sub Address Condition" RSRTX_ATTR_MILSTD_TRIGGER_SUB_ADDRESS_CONDITION ViInt32 gs rsrtx_rngMILSTDCondition
 "For the sub address, sets the triggering condition for the comparison of the decoded value to the defined range.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:MILStd:SADDress:CONDition\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Trigger Sub Address Minimum" RSRTX_ATTR_MILSTD_TRIGGER_SUB_ADDRESS_MINIMUM ViString gs 
 "Sets the minimum Sub address. \n01X-string\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:MILStd:SADDress:MINimum\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Trigger Sub Address Maximum" RSRTX_ATTR_MILSTD_TRIGGER_SUB_ADDRESS_MAXIMUM ViString gs 
 "Sets the maximum Sub address. \n01X-string\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:MILStd:SADDress:MAXimum\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Trigger Sub Address" RSRTX_ATTR_MILSTD_TRIGGER_SUB_ADDRESS ViInt32 gs rsrtx_rngMILSTDSubAddress
 "Triggers on the value of the subaddress, if RSRTX_ATTR_MILSTD_TRIGGER_COMMAND_TYPE is set to mode code.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:MILStd:SADDress:MCADdress\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Trigger Word Condition" RSRTX_ATTR_MILSTD_TRIGGER_WORD_CONDITION ViInt32 gs rsrtx_rngMILSTDCondition
 "For a command word, triggers on a word comparison condition.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:MILStd:WCOunt:CONDition\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Trigger Word Minimum" RSRTX_ATTR_MILSTD_WORD_ADDRESS_MINIMUM ViInt32 gs 
 "For a command word, triggers on a minimum word count.\n01X-string\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:MILStd:WCOunt:MINimum\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Trigger Word Maximum" RSRTX_ATTR_MILSTD_WORD_ADDRESS_MAXIMUM ViInt32 gs 
 "For a command word, triggers on a maximum word count.\n01X-string\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:MILStd:WCOunt:MAXimum\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Trigger Command Mode Code" RSRTX_ATTR_MILSTD_TRIGGER_COMMAND_MODE_CODE ViInt32 gs rsrtx_rngMILSTDCodeType
 "Sets a function for the mode code to be triggered on.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:MILStd:MCODe:CODE\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Trigger Command Mode Code Value" RSRTX_ATTR_MILSTD_TRIGGER_COMMAND_MODE_VALUE ViInt32 gs 
 "Sets the value of the mode code to be triggered on.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:MILStd:MCODe:VALue\n\nOption Checking:\nNone"
 "\n"

3 all "Status"
 "Triggers on a status word that is specified.\n"

4 all "MILSTD Trigger Received Bit Status" RSRTX_ATTR_MILSTD_TRIGGER_RECEIVED_BIT_STATUS ViInt32 gs rsrtx_rngStatus
 "Triggers on the state of the broadcast command received bit of the status word.\n01X-string\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:MILStd:STATus:BCReceived\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Trigger Busy Bit Status" RSRTX_ATTR_MILSTD_TRIGGER_BUSY_BIT_STATUS ViInt32 gs rsrtx_rngStatus
 "Triggers on the state of the busy bit of the status word.\n01X-string\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:MILStd:STATus:BUSY\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Trigger Bus Control Bit Status" RSRTX_ATTR_MILSTD_TRIGGER_BUS_CONTROL_BIT_STATUS ViInt32 gs rsrtx_rngStatus
 "Triggers on the state of the dynamic bus control accept bit of the status word.\n01X-string\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:MILStd:STATus:DBCaccept\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Trigger Instrumentation Bit Status" RSRTX_ATTR_MILSTD_TRIGGER_INSTRUMENTATION_BIT_STATUS ViInt32 gs rsrtx_rngStatus
 "Triggers on the state of the instrumentation bit of the status word.\n01X-string\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:MILStd:STATus:INSTrument\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Trigger Message Error Bit Status" RSRTX_ATTR_MILSTD_TRIGGER_MESSAGE_ERROR_BIT_STATUS ViInt32 gs rsrtx_rngStatus
 "Triggers on the state of the message error bit of the status word.\n01X-string\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:MILStd:STATus:MERRor\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Trigger Service Request Bit Status" RSRTX_ATTR_MILSTD_TRIGGER_SERVICE_REQUEST_BIT_STATUS ViInt32 gs rsrtx_rngStatus
 "Triggers on the state of the service request bit of the status word.\n01X-string\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:MILStd:STATus:SREQuest\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Trigger Subsystem Bit Status" RSRTX_ATTR_MILSTD_TRIGGER_SUBSYSTEM_BIT_STATUS ViInt32 gs rsrtx_rngStatus
 "Triggers on the state of the subsystem flag bit of the status word.\n01X-string\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:MILStd:STATus:SUBSystem\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Trigger Terminal Bit Status" RSRTX_ATTR_MILSTD_TRIGGER_TERMINAL_BIT_STATUS ViInt32 gs rsrtx_rngStatus
 "Triggers on the state of the terminal flag bit of the status word.\n01X-string\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:MILStd:STATus:TERMinal\n\nOption Checking:\nNone"
 "\n"

3 all "Data"
 "Triggers on a data, that is specified.\n"

4 all "MILSTD Trigger Data Condition" RSRTX_ATTR_MILSTD_TRIGGER_DATA_CONDITION ViInt32 gs rsrtx_rngMILSTDCondition
 "For a data word, sets the triggering condition for the comparison of the decoded value to the defined range.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:MILStd:DATA:CONDition\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Trigger Data Minimum" RSRTX_ATTR_MILSTD_TRIGGER_DATA_MINIMUM ViString gs 
 "For a data word, sets the minimum data value.\n01X-string\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:MILStd:DATA:MINimum\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Trigger Data Maximum" RSRTX_ATTR_MILSTD_TRIGGER_DATA_MAXIMUM ViString gs 
 "For a data word, sets the maximum data value. \n01X-string\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:MILStd:DATA:MAXimum\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Trigger Data Offset Condition" RSRTX_ATTR_MILSTD_TRIGGER_DATA_OFFSET_CONDITION ViInt32 gs rsrtx_rngMILSTDCondition
 "For a data offset, sets the triggering condition for the comparison of the decoded value to the defined range.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:MILStd:DATA:OFFSet:CONDition\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Trigger Data Offset" RSRTX_ATTR_MILSTD_TRIGGER_DATA_OFFSET ViInt32 gs 
 "For a data word sets the word offset to be triggered on.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:MILStd:DATA:OFFSet\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Trigger Data Offset Words" RSRTX_ATTR_MILSTD_TRIGGER_DATA_OFFSET_WORDS ViInt32 gs 
 "For a data word sets the number of words to be triggered on.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:MILStd:DATA:WORDs\n\nOption Checking:\nNone"
 "\n"

2 all "ARINC 429"
 "Configures ARINC 429 trigger settings.\n"

3 all "Protocol ARINC429 Trigger Type" RSRTX_ATTR_PROTOCOL_ARINC429_TRIGGER_TYPE ViInt32 gs rsrtx_rngARINC429Type
 "Selects the type of trigger.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:ARINc:TYPE\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol ARINC429 Trigger Word Type" RSRTX_ATTR_PROTOCOL_ARINC429_TRIGGER_WORD_TYPE ViInt32 gs rsrtx_rngARINC429WordType
 "Sets the word type to be triggered on.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:ARINc:WORD:TYPE\n\nOption Checking:\nNone"
 "\n"

3 all "Error Condition"
 "Specifies the error conditions to be triggered on.\n"

4 all "Protocol ARINC429 Trigger Error Coding Error" RSRTX_ATTR_PROTOCOL_ARINC429_TRIGGER_ERROR_CODING_ERROR ViBoolean gs 
 "Enables triggering when a coding error occurs.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:ARINc:ERRor:CODing\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol ARINC429 Trigger Error Parity Error" RSRTX_ATTR_PROTOCOL_ARINC429_TRIGGER_ERROR_PARITY_ERROR ViBoolean gs 
 "Enables triggering when a parity error occurs.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:ARINc:ERRor:PARity\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol ARINC429 Trigger Error Gap Error" RSRTX_ATTR_PROTOCOL_ARINC429_TRIGGER_ERROR_GAP_ERROR ViBoolean gs 
 "Enables triggering when a gap error occurs.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:ARINc:ERRor:GAP\n\nOption Checking:\nNone"
 "\n"

3 all "Label Data"
 "Configures ARINC 429 trigger label+data settings.\n"

4 all "Protocol ARINC429 Trigger Label Data SDI" RSRTX_ATTR_PROTOCOL_ARINC429_TRIGGER_LABEL_DATA_SDI ViInt32 gs rsrtx_rngARINCSsmSdi
 "Sets the source/destination identifier (SDI) bits.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:ARINc:SDI\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol ARINC429 Trigger Label Data SSM" RSRTX_ATTR_PROTOCOL_ARINC429_TRIGGER_LABEL_DATA_SSM ViInt32 gs rsrtx_rngARINCSsmSdi
 "Sets the sign/status matrix (SSM) bits.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:ARINc:SSM\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol ARINC429 Trigger Label Data Format" RSRTX_ATTR_PROTOCOL_ARINC429_TRIGGER_LABEL_DATA_FORMAT ViInt32 gs rsrtx_rngProtocolARINC429DataFormat
 "Sets the the transmission format to be triggered on.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:ARINc:FORMat\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol ARINC429 Trigger Label Pattern Condition" RSRTX_ATTR_PROTOCOL_ARINC429_TRIGGER_LABEL_PATTERN_CONDITION ViInt32 gs rsrtx_rngProtocolARINC429Operator
 "Sets the condition for the label. You can define an exact label or a label range.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:ARINc:LABel:CONDition\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol ARINC429 Trigger Label Pattern Min" RSRTX_ATTR_PROTOCOL_ARINC429_TRIGGER_LABEL_PATTERN_MIN ViString gs 
 "Defines the minimum bit pattern for the label.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:ARINc:LABel:MINimum\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol ARINC429 Trigger Label Pattern Max" RSRTX_ATTR_PROTOCOL_ARINC429_TRIGGER_LABEL_PATTERN_MAX ViString gs 
 "Sets the end value of a label pattern if Label Pattern Condition is set to InRange or OutOfRange.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:ARINc:LABel:MAXimum\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol ARINC429 Trigger Data Pattern Condition" RSRTX_ATTR_PROTOCOL_ARINC429_TRIGGER_DATA_PATTERN_CONDITION ViInt32 gs rsrtx_rngProtocolARINC429Operator
 "Define the operators for comparison of the decoded data condition with the specified data.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:ARINc:DATA:CONDition\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol ARINC429 Trigger Data Pattern Min" RSRTX_ATTR_PROTOCOL_ARINC429_TRIGGER_DATA_PATTERN_MIN ViString gs 
 "Defines the minimum bit pattern for the data.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:ARINc:DATA:MINimum\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol ARINC429 Trigger Data Pattern Max" RSRTX_ATTR_PROTOCOL_ARINC429_TRIGGER_DATA_PATTERN_MAX ViString gs 
 "Sets the end value of a data pattern if Data Pattern Condition is set to InRange or OutOfRange.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:ARINc:DATA:MAXimum\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol ARINC429 Trigger Data Offset" RSRTX_ATTR_PROTOCOL_ARINC429_TRIGGER_DATA_OFFSET ViInt32 gs 
 "Sets a data offset.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:ARINc:DATA:OFFSet\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol ARINC429 Trigger Data Size" RSRTX_ATTR_PROTOCOL_ARINC429_TRIGGER_DATA_SIZE ViInt32 gs 
 "Sets the data size.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:ARINc:DATA:SIZE\n\nOption Checking:\nNone"
 "\n"

3 all "Timing"
 "Specifies the timeouts to be triggered on.\n"

4 all "Protocol ARINC429 Trigger Timing Condition" RSRTX_ATTR_PROTOCOL_ARINC429_TRIGGER_TIMING_CONDITION ViInt32 gs rsrtx_rngARINC429TimingCondition
 "Define the operators for comparison of the decoded transmission time condition with the specified data.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:ARINc:TTIMe:CONDition\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol ARINC429 Trigger Timing Min" RSRTX_ATTR_PROTOCOL_ARINC429_TRIGGER_TIMING_MIN ViReal64 gs 
 "Sets the minimum value of the transmission time.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:ARINc:TTIMe:MINimum\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol ARINC429 Trigger Timing Max" RSRTX_ATTR_PROTOCOL_ARINC429_TRIGGER_TIMING_MAX ViReal64 gs 
 "Sets the maximu value of the transmission time.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTRIGger:A:ARINc:TTIMe:MAXimum\n\nOption Checking:\nNone"
 "\n"

1 all "Waveform Acquisition"
 "Attributes that configure the waveform measurement.\n"

2 all "Run Single" RSRTX_ATTR_RUN_SINGLE ViString s 
 "Starts a defined number of acquisition cycles.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSINGle\n\nOption Checking:\nNone"
 "\n"

2 all "Run Single Wait For OPC" RSRTX_ATTR_RUN_SINGLE_WAIT_FOR_OPC ViString s 
 "Starts a defined number of acquisition cycles.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSINGle\n\nOption Checking:\nNone"
 "\n"

2 all "Run Continuous" RSRTX_ATTR_RUN_CONTINUOUS ViString s 
 "Starts the continuous acquisition.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nRUN\n\nOption Checking:\nNone"
 "\n"

2 all "Stop" RSRTX_ATTR_STOP ViString s 
 "Stops the running acquistion.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSTOP\n\nOption Checking:\nNone"
 "\n"

2 all "Send SW Trigger" RSRTX_ATTR_SEND_SW_TRIGGER ViString s 
 "Triggers all actions waiting for a trigger event. In particular, *TRG generates a manual trigger signal (Manual Trigger).\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n*TRG\n\nOption Checking:\nNone"
 "\n"

2 all "Acquisition State" RSRTX_ATTR_ACQUISITION_STATE ViInt32 gs RsRtx_rngAcquisitionState
 "Sets or queries the acquisition state of the instrument.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nACQuire:STATe\n\nOption Checking:\nNone"
 "\n"

2 all "Waveform Export"
 "Contains attributes for waveform exporting.\n"

3 all "Wavefrom Export Name" RSRTX_ATTR_WAVEFROM_EXPORT_NAME ViString gs 
 "Defines the path and filename for a waveform data file that will be saved. The file format is CSV. If the file already exists, it will be overwritten.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nEXPort:WAVeform:NAME\n\nOption Checking:\nNone"
 "\n"

3 all "Waveform Export Source" RSRTX_ATTR_WAVEFORM_EXPORT_SOURCE ViInt32 gs rsrtx_rngWaveformExportParameter
 "Defines the waveform to be exported.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nEXPort:WAVeform:SOURce\n\nOption Checking:\nNone"
 "\n"

3 all "Waveform Export Save" RSRTX_ATTR_WAVEFORM_EXPORT_SAVE ViString s 
 "Executes saving a waveform, for which the path and filename have been defined by RSRTX_ATTR_WAVEFROM_EXPORT_NAME.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nEXPort:WAVeform:SAVE\n\nOption Checking:\nNone"
 "\n"

2 all "Waveform"
 "Acquires waveform data.\n"

3 all "Waveform Samples" RSRTX_ATTR_WAVEFORM_SAMPLES ViInt32 g 
 "Returns the number of samples for the selected range.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nCHANnel<m>:DATA:POINts\n\nOption Checking:\nNone"
 "\n"

2 all "Waveform Conversion"
 "Attributes for conversion of waveform data.\n"

3 all "Waveform Conversion X Start" RSRTX_ATTR_WAVEFORM_CONVERSION_X_START ViReal64 g 
 "Return the time of the first sample of the indicated waveform.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nCHANnel<m>:DATA:XORigin?\n\nOption Checking:\nNone"
 "\n"

3 all "Waveform Conversion X Increment" RSRTX_ATTR_WAVEFORM_CONVERSION_X_INCREMENT ViReal64 g 
 "Return the time difference between two adjacent samples of the indicated waveform.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nCHANnel<m>:DATA:XINCrement?\n\nOption Checking:\nNone"
 "\n"

3 all "Waveform Conversion Y Start" RSRTX_ATTR_WAVEFORM_CONVERSION_Y_START ViReal64 g 
 "Return the voltage value for binary value 0 of the indicated waveform.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nCHANnel<m>:DATA:YORigin?\n\nOption Checking:\nNone"
 "\n"

3 all "Waveform Conversion Y Increment" RSRTX_ATTR_WAVEFORM_CONVERSION_Y_INCREMENT ViReal64 g 
 "Return the voltage value per bit of the indicated waveform.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nCHANnel<m>:DATA:YINCrement?\n\nOption Checking:\nNone"
 "\n"

3 all "Waveform Conversion Y Resolution" RSRTX_ATTR_WAVEFORM_CONVERSION_Y_RESOLUTION ViInt32 g 
 "Return the vertical bit resolution of the indicated waveform.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nCHANnel<m>:DATA:YRESolution?\n\nOption Checking:\nNone"
 "\n"

2 all "Envelope Waveform"
 "Acquires waveform data.\n"

2 all "Envelope Waveform Conversion"
 "Attributes for conversion of envelope data.\n"

3 all "Envelope Waveform Conversion X Start" RSRTX_ATTR_ENVELOPE_WAVEFORM_CONVERSION_X_START ViReal64 g 
 "Return the time of the first sample of the indicated waveform.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nCHANnel<m>:DATA:ENVelope:XORigin?\n\nOption Checking:\nNone"
 "\n"

3 all "Envelope Waveform Conversion X Increment" RSRTX_ATTR_ENVELOPE_WAVEFORM_CONVERSION_X_INCREMENT ViReal64 g 
 "Return the time difference between two adjacent samples of the indicated waveform.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nCHANnel<m>:DATA:ENVelope:XINCrement?\n\nOption Checking:\nNone"
 "\n"

3 all "Envelope Waveform Conversion Y Start" RSRTX_ATTR_ENVELOPE_WAVEFORM_CONVERSION_Y_START ViReal64 g 
 "Return the voltage value for binary value 0 of the indicated waveform.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nCHANnel<m>:DATA:ENVelope:YORigin?\n\nOption Checking:\nNone"
 "\n"

3 all "Envelope Waveform Conversion Y Increment" RSRTX_ATTR_ENVELOPE_WAVEFORM_CONVERSION_Y_INCREMENT ViReal64 g 
 "Return the voltage value per bit of the indicated waveform.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nCHANnel<m>:DATA:ENVelope:YINCrement?\n\nOption Checking:\nNone"
 "\n"

3 all "Envelope Waveform Conversion Y Resolution" RSRTX_ATTR_ENVELOPE_WAVEFORM_CONVERSION_Y_RESOLUTION ViInt32 g 
 "Return the vertical bit resolution of the indicated waveform.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nCHANnel<m>:DATA:ENVelope:YRESolution?\n\nOption Checking:\nNone"
 "\n"

2 all "Math Waveform"
 "Acquires waveform data.\n"

2 all "Math Waveform Conversion"
 "Attributes for conversion of math waveform data.\n"

3 all "Math Waveform Conversion X Start" RSRTX_ATTR_MATH_WAVEFORM_CONVERSION_X_START ViReal64 g 
 "Return the time of the first sample of the indicated waveform.\n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:DATA:XORigin?\n\nOption Checking:\nNone"
 "\n"

3 all "Math Waveform Conversion X Increment" RSRTX_ATTR_MATH_WAVEFORM_CONVERSION_X_INCREMENT ViReal64 g 
 "Return the time difference between two adjacent samples of the indicated waveform.\n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:DATA:XINCrement?\n\nOption Checking:\nNone"
 "\n"

3 all "Math Waveform Conversion Y Start" RSRTX_ATTR_MATH_WAVEFORM_CONVERSION_Y_START ViReal64 g 
 "Return the voltage value for binary value 0 of the indicated waveform.\n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:DATA:YORigin?\n\nOption Checking:\nNone"
 "\n"

3 all "Math Waveform Conversion Y Increment" RSRTX_ATTR_MATH_WAVEFORM_CONVERSION_Y_INCREMENT ViReal64 g 
 "Return the voltage value per bit of the indicated waveform.\n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:DATA:YINCrement?\n\nOption Checking:\nNone"
 "\n"

3 all "Math Waveform Conversion Y Resolution" RSRTX_ATTR_MATH_WAVEFORM_CONVERSION_Y_RESOLUTION ViInt32 g 
 "Return the vertical bit resolution of the indicated waveform.\n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:DATA:YRESolution?\n\nOption Checking:\nNone"
 "\n"

2 all "Simple Math Waveform (RTB)"
 "Acquires waveform data.\n"

2 all "Simple Math Waveform Conversion (RTB)"
 "Attributes for conversion of math waveform data.\n"

3 all "Simple Math Waveform Conversion X Start" RSRTX_ATTR_SIMPLE_MATH_WAVEFORM_CONVERSION_X_START ViReal64 g 
 "Return the time of the first sample of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nCALCulate:QMATh:DATA:XORigin?\n\nOption Checking:\nNone"
 "\n"

3 all "Simple Math Waveform Conversion X Increment" RSRTX_ATTR_SIMPLE_MATH_WAVEFORM_CONVERSION_X_INCREMENT ViReal64 g 
 "Return the time difference between two adjacent samples of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nCALCulate:QMATh:DATA:XINCrement?\n\nOption Checking:\nNone"
 "\n"

3 all "Simple Math Waveform Conversion Y Start" RSRTX_ATTR_SIMPLE_MATH_WAVEFORM_CONVERSION_Y_START ViReal64 g 
 "Return the voltage value for binary value 0 of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nCALCulate:QMATh:DATA:YORigin?\n\nOption Checking:\nNone"
 "\n"

3 all "Simple Math Waveform Conversion Y Increment" RSRTX_ATTR_SIMPLE_MATH_WAVEFORM_CONVERSION_Y_INCREMENT ViReal64 g 
 "Return the voltage value per bit of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nCALCulate:QMATh:DATA:YINCrement?\n\nOption Checking:\nNone"
 "\n"

3 all "Simple Math Waveform Conversion Y Resolution" RSRTX_ATTR_SIMPLE_MATH_WAVEFORM_CONVERSION_Y_RESOLUTION ViInt32 g 
 "Return the vertical bit resolution of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nCALCulate:QMATh:DATA:YRESolution?\n\nOption Checking:\nNone"
 "\n"

2 all "Reference Waveform"
 "Acquires waveform data.\n"

2 all "Reference Waveform Conversion"
 "Attributes for conversion of reference waveform data.\n"

3 all "Reference Waveform Conversion X Start" RSRTX_ATTR_REFERENCE_WAVEFORM_CONVERSION_X_START ViReal64 g 
 "Return the time of the first sample of the indicated waveform.\n\nAvailable Repeated Capabilities:\nReferenceWfm (RW1,RW2,RW3,RW4)\n\nRemote-control command:\nREFCurvel<m>:DATA:XORigin?\n\nOption Checking:\nNone"
 "\n"

3 all "Reference Waveform Conversion X Increment" RSRTX_ATTR_REFERENCE_WAVEFORM_CONVERSION_X_INCREMENT ViReal64 g 
 "Return the time difference between two adjacent samples of the indicated waveform.\n\nAvailable Repeated Capabilities:\nReferenceWfm (RW1,RW2,RW3,RW4)\n\nRemote-control command:\nREFCurve<m>:DATA:XINCrement?\n\nOption Checking:\nNone"
 "\n"

3 all "Reference Waveform Conversion Y Start" RSRTX_ATTR_REFERENCE_WAVEFORM_CONVERSION_Y_START ViReal64 g 
 "Return the voltage value for binary value 0 of the indicated waveform.\n\nAvailable Repeated Capabilities:\nReferenceWfm (RW1,RW2,RW3,RW4)\n\nRemote-control command:\nREFCurve<m>:DATA:YORigin?\n\nOption Checking:\nNone"
 "\n"

3 all "Reference Waveform Conversion Y Increment" RSRTX_ATTR_REFERENCE_WAVEFORM_CONVERSION_Y_INCREMENT ViReal64 g 
 "Return the voltage value per bit of the indicated waveform.\n\nAvailable Repeated Capabilities:\nReferenceWfm (RW1,RW2,RW3,RW4)\n\nRemote-control command:\nREFCurve<m>:DATA:YINCrement?\n\nOption Checking:\nNone"
 "\n"

3 all "Reference Waveform Conversion Y Resolution" RSRTX_ATTR_REFERENCE_WAVEFORM_CONVERSION_Y_RESOLUTION ViInt32 g 
 "Return the vertical bit resolution of the indicated waveform.\n\nAvailable Repeated Capabilities:\nReferenceWfm (RW1,RW2,RW3,RW4)\n\nRemote-control command:\nREFCurve<m>:DATA:YRESolution?\n\nOption Checking:\nNone"
 "\n"

2 all "Mask Data"
 "Acquires mask data.\n"

2 all "Mask Data Conversion"
 "Attributes for conversion of mask data.\n"

3 all "Mask Data Conversion X Start" RSRTX_ATTR_MASK_DATA_CONVERSION_X_START ViReal64 g 
 "Return the time of the first sample of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nMASK:DATA:XORigin?\n\nOption Checking:\nNone"
 "\n"

3 all "Mask Data Conversion X Increment" RSRTX_ATTR_MASK_DATA_CONVERSION_X_INCREMENT ViReal64 g 
 "Return the time difference between two adjacent samples of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nMASK:DATA:XINCrement?\n\nOption Checking:\nNone"
 "\n"

3 all "Mask Data Conversion Y Start" RSRTX_ATTR_MASK_DATA_CONVERSION_Y_START ViReal64 g 
 "Return the voltage value for binary value 0 of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nMASK:DATA:YORigin?\n\nOption Checking:\nNone"
 "\n"

3 all "Mask Data Conversion Y Increment" RSRTX_ATTR_MASK_DATA_CONVERSION_Y_INCREMENT ViReal64 g 
 "Return the voltage value per bit of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nMASK:DATA:YINCrement?\n\nOption Checking:\nNone"
 "\n"

3 all "Mask Data Conversion Y Resolution" RSRTX_ATTR_MASK_DATA_CONVERSION_Y_RESOLUTION ViInt32 g 
 "Return the vertical bit resolution of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nMASK:DATA:YRESolution?\n\nOption Checking:\nNone"
 "\n"

2 all "Logic Data"
 "Acquires logic data.\n"

2 all "Logic Data Conversion"
 "Attributes for conversion of logic data.\n"

3 all "Logic Data Conversion X Start" RSRTX_ATTR_LOGIC_DATA_CONVERSION_X_START ViReal64 g 
 "Return the time of the first sample of the indicated waveform.\n\nAvailable Repeated Capabilities:\nLogic (Logic1,Logic2)\n\nRemote-control command:\nLOGic<p>:DATA:XORigin?\n\nOption Checking:\nNone"
 "\n"

3 all "Logic Data Conversion X Increment" RSRTX_ATTR_LOGIC_DATA_CONVERSION_X_INCREMENT ViReal64 g 
 "Return the time difference between two adjacent samples of the indicated waveform.\n\nAvailable Repeated Capabilities:\nLogic (Logic1,Logic2)\n\nRemote-control command:\nLOGic<p>:DATA:XINCrement?\n\nOption Checking:\nNone"
 "\n"

3 all "Logic Data Conversion Y Start" RSRTX_ATTR_LOGIC_DATA_CONVERSION_Y_START ViReal64 g 
 "Return the voltage value for binary value 0 of the indicated waveform.\n\nAvailable Repeated Capabilities:\nLogic (Logic1,Logic2)\n\nRemote-control command:\nLOGic<p>:DATA:YORigin?\n\nOption Checking:\nNone"
 "\n"

3 all "Logic Data Conversion Y Increment" RSRTX_ATTR_LOGIC_DATA_CONVERSION_Y_INCREMENT ViReal64 g 
 "Return the voltage value per bit of the indicated waveform.\n\nAvailable Repeated Capabilities:\nLogic (Logic1,Logic2)\n\nRemote-control command:\nLOGic<p>:DATA:YINCrement?\n\nOption Checking:\nNone"
 "\n"

3 all "Logic Data Conversion Y Resolution" RSRTX_ATTR_LOGIC_DATA_CONVERSION_Y_RESOLUTION ViInt32 g 
 "Return the vertical bit resolution of the indicated waveform.\n\nAvailable Repeated Capabilities:\nLogic (Logic1,Logic2)\n\nRemote-control command:\nLOGic<p>:DATA:YRESolution?\n\nOption Checking:\nNone"
 "\n"

2 all "Digital Data"
 "Acquires digital data.\n"

3 all "Digital Waveform Samples" RSRTX_ATTR_DIGITAL_WAVEFORM_SAMPLES ViInt32 g 
 "Returns the number of returned samples for the selected range.\n\nAvailable Repeated Capabilities:\nDigital (D0,D1,D2,D3,D4,D5,D6,D7,D8,D9,D10,D11,D12,D13,D14,D15)\n\nRemote-control command:\nDIGital<m>:DATA:POINts?\n\nOption Checking:\nNone"
 "\n"

2 all "Digital Data Conversion"
 "Attributes for conversion of digital data.\n"

3 all "Digital Data Conversion X Start" RSRTX_ATTR_DIGITAL_DATA_CONVERSION_X_START ViReal64 g 
 "Return the time of the first sample of the indicated waveform.\n\nAvailable Repeated Capabilities:\nDigital (D0,D1,D2,D3,D4,D5,D6,D7,D8,D9,D10,D11,D12,D13,D14,D15)\n\nRemote-control command:\nDIGital<m>:DATA:XORigin?\n\nOption Checking:\nNone"
 "\n"

3 all "Digital Data Conversion X Increment" RSRTX_ATTR_DIGITAL_DATA_CONVERSION_X_INCREMENT ViReal64 g 
 "Return the time difference between two adjacent samples of the indicated waveform.\n\nAvailable Repeated Capabilities:\nDigital (D0,D1,D2,D3,D4,D5,D6,D7,D8,D9,D10,D11,D12,D13,D14,D15)\n\nRemote-control command:\nDIGital<m>:DATA:XINCrement?\n\nOption Checking:\nNone"
 "\n"

3 all "Digital Data Conversion Y Start" RSRTX_ATTR_DIGITAL_DATA_CONVERSION_Y_START ViReal64 g 
 "Return the voltage value for binary value 0 of the indicated waveform.\n\nAvailable Repeated Capabilities:\nDigital (D0,D1,D2,D3,D4,D5,D6,D7,D8,D9,D10,D11,D12,D13,D14,D15)\n\nRemote-control command:\nDIGital<m>:DATA:YORigin?\n\nOption Checking:\nNone"
 "\n"

3 all "Digital Data Conversion Y Increment" RSRTX_ATTR_DIGITAL_DATA_CONVERSION_Y_INCREMENT ViReal64 g 
 "Return the voltage value per bit of the indicated waveform.\n\nAvailable Repeated Capabilities:\nDigital (D0,D1,D2,D3,D4,D5,D6,D7,D8,D9,D10,D11,D12,D13,D14,D15)\n\nRemote-control command:\nDIGital<m>:DATA:YINCrement?\n\nOption Checking:\nNone"
 "\n"

3 all "Digital Data Conversion Y Resolution" RSRTX_ATTR_DIGITAL_DATA_CONVERSION_Y_RESOLUTION ViInt32 g 
 "Return the vertical bit resolution of the indicated waveform.\n\nAvailable Repeated Capabilities:\nDigital (D0,D1,D2,D3,D4,D5,D6,D7,D8,D9,D10,D11,D12,D13,D14,D15)\n\nRemote-control command:\nDIGital<m>:DATA:YRESolution?\n\nOption Checking:\nNone"
 "\n"

2 all "Spectrum Data"
 "Acquires spectrum data.\n"

3 all "Spectrum Waveform Samples" RSRTX_ATTR_SPECTRUM_WAVEFORM_SAMPLES ViInt32 g 
 "Returns the number of data samples that are returned with SPECtrum:WAVeform:SPECtrum:DATA.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:WAVeform:SPECtrum:DATA:POINts?\n\nOption Checking:\nNone"
 "\n"

3 all "Minimum"
 "Acquires spectrum minimum data.\n"

4 all "Spectrum Minimum Waveform Samples" RSRTX_ATTR_SPECTRUM_MINIMUM_WAVEFORM_SAMPLES ViInt32 g 
 "Returns the number of data samples that are returned with SPECtrum:WAVeform:MINimum:DATA.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:WAVeform:MINimum:DATA:POINts?\n\nOption Checking:\nNone"
 "\n"

3 all "Maximum"
 "Acquires spectrum maximum data.\n"

4 all "Spectrum Maximum Waveform Samples" RSRTX_ATTR_SPECTRUM_MAXIMUM_WAVEFORM_SAMPLES ViInt32 g 
 "Returns the number of data samples that are returned with SPECtrum:WAVeform:xxx:DATA for the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:WAVeform:MAXimum:DATA:POINts?\n\nOption Checking:\nNone"
 "\n"

3 all "Average"
 "Acquires spectrum average data.\n"

4 all "Spectrum Average Waveform Samples" RSRTX_ATTR_SPECTRUM_AVERAGE_WAVEFORM_SAMPLES ViInt32 g 
 "Returns the number of data samples that are returned with SPECtrum:WAVeform:xxx:DATA for the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:WAVeform:AVERage:DATA:POINts?\n\nOption Checking:\nNone"
 "\n"

2 all "Spectrum Data Conversion"
 "Attributes for conversion of spectrum data.\n"

3 all "Spectrum Data Conversion X Start" RSRTX_ATTR_SPECTRUM_DATA_CONVERSION_X_START ViReal64 g 
 "Returns the frequency of the first sample of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:WAVeform:SPECtrum:DATA:XORigin?\n\nOption Checking:\nNone"
 "\n"

3 all "Spectrum Data Conversion X Increment" RSRTX_ATTR_SPECTRUM_DATA_CONVERSION_X_INCREMENT ViReal64 g 
 "Return the level difference between two adjacent samples of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:WAVeform:SPECtrum:DATA:XINCrement?\n\nOption Checking:\nNone"
 "\n"

3 all "Spectrum Data Conversion Y Start" RSRTX_ATTR_SPECTRUM_DATA_CONVERSION_Y_START ViReal64 g 
 "Returns the vertical bit resolution of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:WAVeform:SPECtrum:DATA:YORigin?\n\nOption Checking:\nNone"
 "\n"

3 all "Spectrum Data Conversion Y Increment" RSRTX_ATTR_SPECTRUM_DATA_CONVERSION_Y_INCREMENT ViReal64 g 
 "Returns the voltage value per bit of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:WAVeform:SPECtrum:DATA:YINCrement?\n\nOption Checking:\nNone"
 "\n"

3 all "Spectrum Data Conversion Y Resolution" RSRTX_ATTR_SPECTRUM_DATA_CONVERSION_Y_RESOLUTION ViInt32 g 
 "Returns the vertical bit resolution of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:WAVeform:SPECtrum:DATA:YRESolution?\n\nOption Checking:\nNone"
 "\n"

3 all "Minimum"
 "Attributes for conversion of spectrum minimum data.\n"

4 all "Spectrum Minimum Data Conversion X Start" RSRTX_ATTR_SPECTRUM_MINIMUM_DATA_CONVERSION_X_START ViReal64 g 
 "Returns the frequency of the first sample of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:WAVeform:MINimum:DATA:XORigin?\n\nOption Checking:\nNone"
 "\n"

4 all "Spectrum Minimum Data Conversion X Increment" RSRTX_ATTR_SPECTRUM_MINIMUM_DATA_CONVERSION_X_INCREMENT ViReal64 g 
 "Return the level difference between two adjacent samples of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:WAVeform:MINimum:DATA:XINCrement?\n\nOption Checking:\nNone"
 "\n"

4 all "Spectrum Minimum Data Conversion Y Start" RSRTX_ATTR_SPECTRUM_MINIMUM_DATA_CONVERSION_Y_START ViReal64 g 
 "Returns the vertical bit resolution of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:WAVeform:MINimum:DATA:YORigin?\n\nOption Checking:\nNone"
 "\n"

4 all "Spectrum Minimum Data Conversion Y Increment" RSRTX_ATTR_SPECTRUM_MINIMUM_DATA_CONVERSION_Y_INCREMENT ViReal64 g 
 "Returns the voltage value per bit of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:WAVeform:MINimum:DATA:YINCrement?\n\nOption Checking:\nNone"
 "\n"

4 all "Spectrum Minimum Data Conversion Y Resolution" RSRTX_ATTR_SPECTRUM_MINIMUM_DATA_CONVERSION_Y_RESOLUTION ViInt32 g 
 "Returns the vertical bit resolution of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:WAVeform:MINimum:DATA:YRESolution?\n\nOption Checking:\nNone"
 "\n"

3 all "Maximum"
 "Attributes for conversion of spectrum maximum data.\n"

4 all "Spectrum Maximum Data Conversion X Start" RSRTX_ATTR_SPECTRUM_MAXIMUM_DATA_CONVERSION_X_START ViReal64 g 
 "Returns the frequency of the first sample of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:WAVeform:MAXimum:DATA:XORigin?\n\nOption Checking:\nNone"
 "\n"

4 all "Spectrum Maximum Data Conversion X Increment" RSRTX_ATTR_SPECTRUM_MAXIMUM_DATA_CONVERSION_X_INCREMENT ViReal64 g 
 "Return the level difference between two adjacent samples of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:WAVeform:MAXimum:DATA:XINCrement?\n\nOption Checking:\nNone"
 "\n"

4 all "Spectrum Maximum Data Conversion Y Start" RSRTX_ATTR_SPECTRUM_MAXIMUM_DATA_CONVERSION_Y_START ViReal64 g 
 "Returns the vertical bit resolution of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:WAVeform:MAXimum:DATA:YORigin?\n\nOption Checking:\nNone"
 "\n"

4 all "Spectrum Maximum Data Conversion Y Increment" RSRTX_ATTR_SPECTRUM_MAXIMUM_DATA_CONVERSION_Y_INCREMENT ViReal64 g 
 "Returns the voltage value per bit of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:WAVeform:MAXimum:DATA:YINCrement?\n\nOption Checking:\nNone"
 "\n"

4 all "Spectrum Maximum Data Conversion Y Resolution" RSRTX_ATTR_SPECTRUM_MAXIMUM_DATA_CONVERSION_Y_RESOLUTION ViInt32 g 
 "Returns the vertical bit resolution of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:WAVeform:MAXimum:DATA:YRESolution?\n\nOption Checking:\nNone"
 "\n"

3 all "Average"
 "Attributes for conversion of spectrum average data.\n"

4 all "Spectrum Average Data Conversion X Start" RSRTX_ATTR_SPECTRUM_AVERAGE_DATA_CONVERSION_X_START ViReal64 g 
 "Returns the frequency of the first sample of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:WAVeform:AVERage:DATA:XORigin?\n\nOption Checking:\nNone"
 "\n"

4 all "Spectrum Average Data Conversion X Increment" RSRTX_ATTR_SPECTRUM_AVERAGE_DATA_CONVERSION_X_INCREMENT ViReal64 g 
 "Return the level difference between two adjacent samples of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:WAVeform:AVERage:DATA:XINCrement?\n\nOption Checking:\nNone"
 "\n"

4 all "Spectrum Average Data Conversion Y Start" RSRTX_ATTR_SPECTRUM_AVERAGE_DATA_CONVERSION_Y_START ViReal64 g 
 "Returns the vertical bit resolution of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:WAVeform:AVERage:DATA:YORigin?\n\nOption Checking:\nNone"
 "\n"

4 all "Spectrum Average Data Conversion Y Increment" RSRTX_ATTR_SPECTRUM_AVERAGE_DATA_CONVERSION_Y_INCREMENT ViReal64 g 
 "Returns the voltage value per bit of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:WAVeform:AVERage:DATA:YINCrement?\n\nOption Checking:\nNone"
 "\n"

4 all "Spectrum Averave Data Conversion Y Resolution" RSRTX_ATTR_SPECTRUM_AVERAVE_DATA_CONVERSION_Y_RESOLUTION ViInt32 g 
 "Returns the vertical bit resolution of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:WAVeform:AVERage:DATA:YRESolution?\n\nOption Checking:\nNone"
 "\n"

1 all "Cursors"
 "Cursor measurements determine the results at the current cursor positions. The cursors can be positioned manually or can be configured to follow the peaks of the waveform. Up to four sets of cursors can be configured and displayed. Each set of cursors consists of a pair of horizontal or vertical cursors, or both. Cursors can be coupled so that the initially defined distance is always maintained.\n"

2 all "Cursor Enabled" RSRTX_ATTR_CURSOR_ENABLED ViBoolean gs 
 "Switches the indicated cursor on or off.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nCURSor<m>:STATe\n\nOption Checking:\nNone"
 "\n"

2 all "All Cursors Off" RSRTX_ATTR_ALL_CURSORS_OFF ViString s 
 "Switches all cursors off.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nCURSor<m>:AOFF\n\nOption Checking:\nNone"
 "\n"

2 all "Cursor Measurement Type" RSRTX_ATTR_CURSOR_MEASUREMENT_TYPE ViInt32 gs rsrtx_rngCursorFunction
 "Defines the cursor measurement type.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nCURSor<m>:FUNCtion\n\nOption Checking:\nNone"
 "\n"

2 all "Cursor Source" RSRTX_ATTR_CURSOR_SOURCE ViInt32 gs rsrtx_rngWaveformParameter
 "Defines the source of the cursor measurement.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nCURSor<m>:SOURce\n\nOption Checking:\nNone"
 "\n"

2 all "Cursor Second Source" RSRTX_ATTR_CURSOR_SECOND_SOURCE ViInt32 gs rsrtx_rngWaveformParameter
 "Selects the second cursor source.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nCURSor<m>:SSOURce\n\nOption Checking:\nNone"
 "\n"

2 all "Cursor Second Source Enable" RSRTX_ATTR_CURSOR_SECOND_SOURCE_ENABLE ViBoolean gs 
 "Enables the second cursor source. To select the second source, use RSRTX_ATTR_CURSOR_SECOND_SOURCE. If enabled, the second cursor measures on the second source. Using a second source, you can measure differences between two waveforms with cursors. Both sources must be in the same domain (time domain or frequency domain).\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nCURSor<m>:USSOURce\n\nOption Checking:\nNone"
 "\n"

2 all "Cursor Tracking" RSRTX_ATTR_CURSOR_TRACKING ViBoolean gs 
 "If set to ON, the horizontal cursor lines follow the waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nCURSor<m>:TRACking[:STATe]\n\nOption Checking:\nNone"
 "\n"

2 all "Cursor X Position Coupling" RSRTX_ATTR_CURSOR_X_POSITION_COUPLING ViBoolean gs 
 "Defines the positioning mode of the vertical cursor. \nON: Moving one cursor line moves the other cursor line too. The cursor lines always remain a fixed distance.\nOFF: Each cursor line is positioned independently.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nCURSor<m>:XCOupling\n\nOption Checking:\nNone"
 "\n"

2 all "Cursor Y Position Coupling" RSRTX_ATTR_CURSOR_Y_POSITION_COUPLING ViBoolean gs 
 "Defines the positioning mode of the horizontal cursor. If the horizontal cursor lines track the waveform, the y-coupling is irrelevant.\nON: Moving one cursor line moves the other cursor line too. The cursor lines always remain a fixed distance.\nOFF: Each cursor line is positioned independently.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nCURSor<m>:YCOupling\n\nOption Checking:\nNone"
 "\n"

2 all "Cursor Adjustment" RSRTX_ATTR_CURSOR_ADJUSTMENT ViBoolean gs 
 "Enables the adjustment of cursor lines if the vertical or horizontal scales are changed.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nCURSor<m>:TRACking:SCALe[:STATe]\n\nOption Checking:\nNone"
 "\n"

2 all "Cursor X Ratio Measurement Unit" RSRTX_ATTR_CURSOR_X_RATIO_MEASUREMENT_UNIT ViInt32 gs rsrtx_rngXRatioMeasurementUnit
 "Sets the unit for X Ratio measurements.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nCURsor<m>:XRATio:UNIT\n\nOption Checking:\nNone"
 "\n"

2 all "Cursor Y Ratio Measurement Unit" RSRTX_ATTR_CURSOR_Y_RATIO_MEASUREMENT_UNIT ViInt32 gs rsrtx_rngYRatioMeasurementUnit
 "Sets the unit for Y Ratio measurements.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nCURSor<m>:YRATio:UNIT\n\nOption Checking:\nNone"
 "\n"

2 all "Cursor X Ratio Measurement" RSRTX_ATTR_CURSOR_X_RATIO_MEASUREMENT ViReal64 g 
 "Returns the ratio of the x-values (e.g. a duty cycle) between the first and second cursors and the first and third cursors: (x2-x1)/(x3-x1).\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nCURSor<m>:XRATio[:VALue]?\n\nOption Checking:\nNone"
 "\n"

2 all "Cursor Y Ratio Measurement" RSRTX_ATTR_CURSOR_Y_RATIO_MEASUREMENT ViReal64 g 
 "Provides three cursors and measures the ratio of the y-values (e.g. overshooting) between the first and second cursors and the first and third cursors: (y2-y1)/(y3-y1).\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nCURSor<m>:YRATio[:VALue]?\n\nOption Checking:\nNone"
 "\n"

2 all "Cursor Distance Horizontal" RSRTX_ATTR_CURSOR_DISTANCE_HORIZONTAL ViReal64 g 
 "Queries the delta value (distance) of two horizontal cursors.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nCURSor<m>:XDELta[:VALue]?\n\nOption Checking:\nNone"
 "\n"

2 all "Cursor Distance Vertical" RSRTX_ATTR_CURSOR_DISTANCE_VERTICAL ViReal64 g 
 "Queries the delta value (distance) of two vertical cursors.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nCURSor<m>:YDELta[:VALue]?\n\nOption Checking:\nNone"
 "\n"

2 all "Cursor Inverse Distance" RSRTX_ATTR_CURSOR_INVERSE_DISTANCE ViReal64 g 
 "Queries the inverse value of the delta value (distance) of the two vertical or horizontal cursors,\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nCURSor<m>:XDELta:INVerse?\n\nOption Checking:\nNone"
 "\n"

2 all "Cursor Voltage Inverse Distance Vertical" RSRTX_ATTR_CURSOR_VOLTAGE_INVERSE_DISTANCE_VERTICAL ViReal64 g 
 "Returns the inverse value of the voltage difference - the reciprocal of the vertical distance of two horizontal cursor lines: 1/?V.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nCURSor<m>:YDELta:SLOPe?\n\nOption Checking:\nNone"
 "\n"

2 all "Cursor Position" RSRTX_ATTR_CURSOR_POSITION ViReal64 g 
 "Returns the cursor positions.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nCURSor<m>:RESult?\n\nOption Checking:\nNone"
 "\n"

2 all "Cursor Autoset" RSRTX_ATTR_CURSOR_AUTOSET ViString s 
 "Sets the cursor lines to typical points of the waveform depending on the selected measurement type.\n\nAvailable Repeated Capabilities:\nCursor (Cur1,Cur2,Cur3)\n\nRemote-control command:\nCURSor<m>:SWAVe\n\nOption Checking:\nNone"
 "\n"

2 all "Cursor Reset" RSRTX_ATTR_CURSOR_RESET ViString s 
 "Resets the cursors to their initial positions.\n\nAvailable Repeated Capabilities:\nCursor (Cur1,Cur2,Cur3)\n\nRemote-control command:\nCURSor<m>:SSCReen\n\nOption Checking:\nNone"
 "\n"

2 all "Cursor Peak Next" RSRTX_ATTR_CURSOR_PEAK_NEXT ViString s 
 "Sets cursor to the next peak.\n\nAvailable Repeated Capabilities:\nCursor (Cur1,Cur2,Cur3)\n\nRemote-control command:\nCURSor<m>:SNPeak\n\nOption Checking:\nNone"
 "\n"

2 all "Cursor Peak Previous" RSRTX_ATTR_CURSOR_PEAK_PREVIOUS ViString s 
 "Sets cursor to the previous peak.\n\nAvailable Repeated Capabilities:\nCursor (Cur1,Cur2,Cur3)\n\nRemote-control command:\nCURSor<m>:SPPeak\n\nOption Checking:\nNone"
 "\n"

2 all "Cursor X1 Position" RSRTX_ATTR_CURSOR_X1_POSITION ViReal64 gs 
 "Defines the vertical position of first cursor or cursor line.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nCURSor<m>:X1Position\n\nOption Checking:\nNone"
 "\n"

2 all "Cursor X2 Position" RSRTX_ATTR_CURSOR_X2_POSITION ViReal64 gs 
 "Defines the vertical position of second cursor or cursor line.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nCURSor<m>:X2Position\n\nOption Checking:\nNone"
 "\n"

2 all "Cursor X3 Position" RSRTX_ATTR_CURSOR_X3_POSITION ViReal64 gs 
 "Defines the vertical position of third cursor or cursor line.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nCURSor<m>:X3Position\n\nOption Checking:\nNone"
 "\n"

2 all "Cursor Y1 Position" RSRTX_ATTR_CURSOR_Y1_POSITION ViReal64 gs 
 "Defines the horizontal position of first cursor or cursor line.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nCURSor<m>:Y1Position\n\nOption Checking:\nNone"
 "\n"

2 all "Cursor Y2 Position" RSRTX_ATTR_CURSOR_Y2_POSITION ViReal64 gs 
 "Defines the horizontal position of second cursor or cursor line.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nCURSor<m>:Y2Position\n\nOption Checking:\nNone"
 "\n"

2 all "Cursor Y3 Position" RSRTX_ATTR_CURSOR_Y3_POSITION ViReal64 gs 
 "Defines the horizontal position of third cursor or cursor line.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nCURSor<m>:Y3Position\n\nOption Checking:\nNone"
 "\n"

2 all "Cursor Line"
 "Class for CursorLine repcap.\n"

3 all "Cursor Line Next Peak" RSRTX_ATTR_CURSOR_LINE_NEXT_PEAK ViString s 
 "Set the cursor line to the next peak, respectively. The attribute is only available for FFT waveforms.\n\nAvailable Repeated Capabilities:\nCursor (Cur1,Cur2,Cur3)CursorLine (CursorLine1,CursorLine2)\n\nRemote-control command:\nCURSor<m>:SNPeak<n>\n\nOption Checking:\nNone"
 "\n"

3 all "Cursor Line Previous Peak" RSRTX_ATTR_CURSOR_LINE_PREVIOUS_PEAK ViString s 
 "Set the cursor line to the previous peak, respectively. The attribute is only available for FFT waveforms.\n\nAvailable Repeated Capabilities:\nCursor (Cur1,Cur2,Cur3)CursorLine (CursorLine1,CursorLine2)\n\nRemote-control command:\nCURSor<m>:SPPeak<n>\n\nOption Checking:\nNone"
 "\n"

1 all "Measurements"
 "Configures scope measurements and queries results.\n"

2 all "Measurement Relative Mode" RSRTX_ATTR_MEAS_RELATIVE_MODE ViInt32 gs rsrtx_rngRelativeMode
 "Sets the lower and upper reference levels for rise and fall time mesurements (cursor and automatic mesurements) as well as the middle reference level for phase and delay measurements. The levels are defined as percentages of the high signal level. The setting is valid for all measurement places.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nREFLevel:RELative:MODE\n\nOption Checking:\nNone"
 "\n"

2 all "Measurement Relative Lower Level" RSRTX_ATTR_MEAS_RELATIVE_LOWER_LEVEL ViReal64 gs 
 "Set the lower reference level for rise and fall time mesurements.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nREFLevel:RELative:LOWer\n\nOption Checking:\nNone"
 "\n"

2 all "Measurement Relative Upper Level" RSRTX_ATTR_MEAS_RELATIVE_UPPER_LEVEL ViReal64 gs 
 "Set the upper reference level for rise and fall time mesurements.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nREFLevel:RELative:UPPer\n\nOption Checking:\nNone"
 "\n"

2 all "Measurement Relative Middle Level" RSRTX_ATTR_MEAS_RELATIVE_MIDDLE_LEVEL ViReal64 gs 
 "Set the middle reference level used for phase and delay measurements.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nREFLevel:RELative:MIDDle\n\nOption Checking:\nNone"
 "\n"

2 all "Main Measurements"
 "Configures scope measurements and queries results.\n"

3 all "Main Measurement Result Frequency" RSRTX_ATTR_MAIN_MEASUREMENT_RESULT_FREQUENCY ViReal64 g 
 "Returns the result of the frequency measurement type.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:RESult[:ACTual]?\n\nOption Checking:\nNone"
 "\n"

3 all "Main Measurement Result Period" RSRTX_ATTR_MAIN_MEASUREMENT_RESULT_PERIOD ViReal64 g 
 "Returns the result of the period measurement type.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:RESult[:ACTual]?\n\nOption Checking:\nNone"
 "\n"

3 all "Main Measurement Result Peak" RSRTX_ATTR_MAIN_MEASUREMENT_RESULT_PEAK ViReal64 g 
 "Returns the result of the peak measurement type.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:RESult[:ACTual]?\n\nOption Checking:\nNone"
 "\n"

3 all "Main Measurement Result Maximum Peak" RSRTX_ATTR_MAIN_MEASUREMENT_RESULT_MAXIMUM_PEAK ViReal64 g 
 "Returns the result of the maximum peak measurement type.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:RESult[:ACTual]?\n\nOption Checking:\nNone"
 "\n"

3 all "Main Measurement Result Minimum Peak" RSRTX_ATTR_MAIN_MEASUREMENT_RESULT_MINIMUM_PEAK ViReal64 g 
 "Returns the result of the minimum peak measurement type.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:RESult[:ACTual]?\n\nOption Checking:\nNone"
 "\n"

3 all "Main Measurement Result Positive Pulses" RSRTX_ATTR_MAIN_MEASUREMENT_RESULT_POSITIVE_PULSES ViReal64 g 
 "Returns the result of the positive pulses measurement type.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:RESult[:ACTual]?\n\nOption Checking:\nNone"
 "\n"

3 all "Main Measurement Result Negative Pulses" RSRTX_ATTR_MAIN_MEASUREMENT_RESULT_NEGATIVE_PULSES ViReal64 g 
 "Returns the result of the negative pulses measurement type.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:RESult[:ACTual]?\n\nOption Checking:\nNone"
 "\n"

3 all "Main Measurement Result Rising Edges" RSRTX_ATTR_MAIN_MEASUREMENT_RESULT_RISING_EDGES ViReal64 g 
 "Returns the result of the rising edges measurement type.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:RESult[:ACTual]?\n\nOption Checking:\nNone"
 "\n"

3 all "Main Measurement Result Falling Edges" RSRTX_ATTR_MAIN_MEASUREMENT_RESULT_FALLING_EDGES ViReal64 g 
 "Returns the result of the falling edges measurement type.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:RESult[:ACTual]?\n\nOption Checking:\nNone"
 "\n"

3 all "Main Measurement Result High Level" RSRTX_ATTR_MAIN_MEASUREMENT_RESULT_HIGH_LEVEL ViReal64 g 
 "Returns the result of the high level measurement type.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:RESult[:ACTual]?\n\nOption Checking:\nNone"
 "\n"

3 all "Main Measurement Result Low Level" RSRTX_ATTR_MAIN_MEASUREMENT_RESULT_LOW_LEVEL ViReal64 g 
 "Returns the result of the low level measurement type.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:RESult[:ACTual]?\n\nOption Checking:\nNone"
 "\n"

3 all "Main Measurement Result Amplitude" RSRTX_ATTR_MAIN_MEASUREMENT_RESULT_AMPLITUDE ViReal64 g 
 "Returns the result of the amplitude measurement type.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:RESult[:ACTual]?\n\nOption Checking:\nNone"
 "\n"

3 all "Main Measurement Result Mean" RSRTX_ATTR_MAIN_MEASUREMENT_RESULT_MEAN ViReal64 g 
 "Returns the result of the mean measurement type.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:RESult[:ACTual]?\n\nOption Checking:\nNone"
 "\n"

3 all "Main Measurement Result RMS" RSRTX_ATTR_MAIN_MEASUREMENT_RESULT_RMS ViReal64 g 
 "Returns the result of the RMS measurement type.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:RESult[:ACTual]?\n\nOption Checking:\nNone"
 "\n"

3 all "Main Measurement Result Rise Time" RSRTX_ATTR_MAIN_MEASUREMENT_RESULT_RISE_TIME ViReal64 g 
 "Returns the result of the rise time measurement type.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:RESult[:ACTual]?\n\nOption Checking:\nNone"
 "\n"

3 all "Main Measurement Result Falling Time" RSRTX_ATTR_MAIN_MEASUREMENT_RESULT_FALLING_TIME ViReal64 g 
 "Returns the result of the falling time measurement type.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:RESult[:ACTual]?\n\nOption Checking:\nNone"
 "\n"

3 all "Main Measurement Result Positive Cycle" RSRTX_ATTR_MAIN_MEASUREMENT_RESULT_POSITIVE_CYCLE ViReal64 g 
 "Returns the result of the positive cycle measurement type.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:RESult[:ACTual]?\n\nOption Checking:\nNone"
 "\n"

3 all "Main Measurement Result Negative Cycle" RSRTX_ATTR_MAIN_MEASUREMENT_RESULT_NEGATIVE_CYCLE ViReal64 g 
 "Returns the result of the negative cycle measurement type.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:RESult[:ACTual]?\n\nOption Checking:\nNone"
 "\n"

3 all "Main Measurement Result Width Positive Pulse" RSRTX_ATTR_MAIN_MEASUREMENT_RESULT_WIDTH_POSITIVE_PULSE ViReal64 g 
 "Returns the result of the width of the positive pulse measurement type.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:RESult[:ACTual]?\n\nOption Checking:\nNone"
 "\n"

3 all "Main Measurement Result Width Negative Pulse" RSRTX_ATTR_MAIN_MEASUREMENT_RESULT_WIDTH_NEGATIVE_PULSE ViReal64 g 
 "Returns the result of the width of the negative pulse measurement type.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:RESult[:ACTual]?\n\nOption Checking:\nNone"
 "\n"

3 all "Main Measurement Result Mean Value" RSRTX_ATTR_MAIN_MEASUREMENT_RESULT_MEAN_VALUE ViReal64 g 
 "Returns the result of the width of the mean value measurement type.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:RESult[:ACTual]?\n\nOption Checking:\nNone"
 "\n"

3 all "Main Measurement Result RMS Value" RSRTX_ATTR_MAIN_MEASUREMENT_RESULT_RMS_VALUE ViReal64 g 
 "Returns the result of the width of the RMS value measurement type.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:RESult[:ACTual]?\n\nOption Checking:\nNone"
 "\n"

3 all "Main Measurement Result Standard Deviations" RSRTX_ATTR_MAIN_MEASUREMENT_RESULT_STANDARD_DEVIATIONS ViReal64 g 
 "Returns the result of the width of the standard deviation measurement type.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:RESult[:ACTual]?\n\nOption Checking:\nNone"
 "\n"

3 all "Main Measurement Result Standard Deviation Value" RSRTX_ATTR_MAIN_MEASUREMENT_RESULT_STANDARD_DEVIATION_VALUE ViReal64 g 
 "Returns the result of the width of the standard deviation value measurement type.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:RESult[:ACTual]?\n\nOption Checking:\nNone"
 "\n"

3 all "Main Measurement Result Delay" RSRTX_ATTR_MAIN_MEASUREMENT_RESULT_DELAY ViReal64 g 
 "Returns the result of the width of the delay measurement type.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:RESult[:ACTual]?\n\nOption Checking:\nNone"
 "\n"

3 all "Main Measurement Result Phase" RSRTX_ATTR_MAIN_MEASUREMENT_RESULT_PHASE ViReal64 g 
 "Returns the result of the width of the phase measurement type.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:RESult[:ACTual]?\n\nOption Checking:\nNone"
 "\n"

3 all "Main Measurement Result Burst Width" RSRTX_ATTR_MAIN_MEASUREMENT_RESULT_BURST_WIDTH ViReal64 g 
 "Returns the result of the width of the burst width measurement type.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:RESult[:ACTual]?\n\nOption Checking:\nNone"
 "\n"

3 all "Main Measurement Result Positive Overshoot" RSRTX_ATTR_MAIN_MEASUREMENT_RESULT_POSITIVE_OVERSHOOT ViReal64 g 
 "Returns the result of the width of the positive overshoot measurement type.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:RESult[:ACTual]?\n\nOption Checking:\nNone"
 "\n"

3 all "Main Measurement Result Negative Overshoot" RSRTX_ATTR_MAIN_MEASUREMENT_RESULT_NEGATIVE_OVERSHOOT ViReal64 g 
 "Returns the result of the width of the negative overshoot measurement type.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:RESult[:ACTual]?\n\nOption Checking:\nNone"
 "\n"

3 all "Main Measurement Result Average Value" RSRTX_ATTR_MAIN_MEASUREMENT_RESULT_AVERAGE_VALUE ViReal64 g 
 "Returns the result of the Average Value measurement type.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:RESult:AVG?\n\nOption Checking:\nNone"
 "\n"

3 all "Main Measurement Result Standard Deviation" RSRTX_ATTR_MAIN_MEASUREMENT_RESULT_STANDARD_DEVIATION ViReal64 g 
 "Returns the result of the Standard Deviation measurement type.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:RESult:STDDev?\n\nOption Checking:\nNone"
 "\n"

3 all "Main Measurement Result Negative Peak" RSRTX_ATTR_MAIN_MEASUREMENT_RESULT_NEGATIVE_PEAK ViReal64 g 
 "Returns the result of the Negative Peak measurement type.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:RESult:NPEak?\n\nOption Checking:\nNone"
 "\n"

3 all "Main Measurement Result Positive Peak" RSRTX_ATTR_MAIN_MEASUREMENT_RESULT_POSITIVE_PEAK ViReal64 g 
 "Returns the result of the Positive Peak measurement type.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:RESult:PPEak?\n\nOption Checking:\nNone"
 "\n"

3 all "Main Measurement Result Waveform Count" RSRTX_ATTR_MAIN_MEASUREMENT_RESULT_WAVEFORM_COUNT ViInt32 g 
 "Returns the result of the Waveform Count measurement type.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:RESult:WFMCount?\n\nOption Checking:\nNone"
 "\n"

3 all "Amplitude Time Main Measurement" RSRTX_ATTR_AMPT_MAIN_MEASUREMENT ViInt32 gs rsrtx_rngAmplitudeTimeMeasurementType
 "Defines or queries the main measurement. This measurement is the one referred to if the measurement waveform is used as a source for math calculations. The main measurement type must belong to the same category as the other types assigned to the same measurement waveform, if there are any.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:MAIN\n\nOption Checking:\nNone"
 "\n"

3 all "Measurement Delay Marker Visible" RSRTX_ATTR_MEASUREMENT_DELAY_MARKER_VISIBLE ViBoolean gs 
 "If ON, the markers show the edge, the measured point on the edge, and the direction in which the edge is detected.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:DELay:MARKer\n\nOption Checking:\nNone"
 "\n"

2 all "General Measurements Settings"
 "Settings common for all measurements.\n"

3 all "Measurement Enabled" RSRTX_ATTR_MEASUREMENT_ENABLED ViBoolean gs 
 "Switches the indicated measurement on or off.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>[:ENABle]\n\nOption Checking:\nNone"
 "\n"

3 all "Measurement Category" RSRTX_ATTR_MEASUREMENT_CATEGORY ViInt32 g rsrtx_rngMeasurementCategory
 "Defines the measurement category.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:CATegory?\n\nOption Checking:\nNone"
 "\n"

3 all "Quick Measurements Enable" RSRTX_ATTR_QUICK_MEASUREMENTS_ENABLE ViString s 
 "Enables all additional measurements in all categories of the indicated measurement.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:AON\n\nOption Checking:\nNone"
 "\n"

3 all "Quick Measurements Disable" RSRTX_ATTR_QUICK_MEASUREMENTS_DISABLE ViString s 
 "Disables all additional measurements in all categories of the indicated measurement.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:AOFF\n\nOption Checking:\nNone"
 "\n"

3 all "Quick Measurements Enable With Status Bit" RSRTX_ATTR_QUICK_MEASUREMENTS_ENABLE_WITH_STATUS_BIT ViBoolean gs 
 "Enables and disables quick measurement.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:ALL[:STATe]\n\nOption Checking:\nNone"
 "\n"

2 all "Automatic Measurements - Statistics"
 "Automatic Measurements - Statistics settings and results\n"

3 all "Automatic Measurement Enabled" RSRTX_ATTR_AUTOMATIC_MEASUREMENT_ENABLED ViBoolean gs 
 "Activates or deactivates the statistical evaluation for the selected measurement.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:STATistics[:ENABle]\n\nOption Checking:\nNone"
 "\n"

3 all "Automatic Measurement Number Of Waveforms" RSRTX_ATTR_AUTOMATIC_MEASUREMENT_NUMBER_OF_WAVEFORMS ViInt32 gs 
 "Sets the number of measured waveforms.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:STATistics:WEIGth\n\nOption Checking:\nNone"
 "\n"

3 all "Reset Automatic Measurement" RSRTX_ATTR_RESET_AUTOMATIC_MEASUREMENT ViString s 
 "This attributedeletes the statistical results for the selected measurement, and starts a new statistical evaluation if the acquisition is running. The waveform count is set to 0 and all measurement values are set to NAN.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:STATistics:RESet\n\nOption Checking:\nNone"
 "\n"

3 all "Automatic Measurement Number Of Measured Waveforms" RSRTX_ATTR_AUTOMATIC_MEASUREMENT_NUMBER_OF_MEASURED_WAVEFORMS ViInt32 g 
 "Returns the current number of measured waveforms.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:RESult:WFMCount?\n\nOption Checking:\nNone"
 "\n"

3 all "Automatic Measurement Timeout Auto" RSRTX_ATTR_AUTOMATIC_MEASUREMENT_TIMEOUT_AUTO ViBoolean gs 
 "The waiting time is set automatically, based on the horizontal scale.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:TIMeout:AUTO\n\nOption Checking:\nNone"
 "\n"

3 all "Automatic Measurement Timeout" RSRTX_ATTR_AUTOMATIC_MEASUREMENT_TIMEOUT ViReal64 gs 
 "Sets a waiting time, how long the instrument waits until it returns the measurement results.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:TIMeout[TIME]\n\nOption Checking:\nNone"
 "\n"

3 all "Automatic Measurement Result Average Value" RSRTX_ATTR_AUTOMATIC_MEASUREMENT_RESULT_AVERAGE_VALUE ViReal64 g 
 "Returns the result of the automatic measurement.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:RESult:AVG?\n\nOption Checking:\nNone"
 "\n"

3 all "Automatic Measurement Result Standard Deviation" RSRTX_ATTR_AUTOMATIC_MEASUREMENT_RESULT_STANDARD_DEVIATION ViReal64 g 
 "Returns the result of the automatic measurement.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:RESult:STDDev?\n\nOption Checking:\nNone"
 "\n"

3 all "Automatic Measurement Result Negative Peak" RSRTX_ATTR_AUTOMATIC_MEASUREMENT_RESULT_NEGATIVE_PEAK ViReal64 g 
 "Returns the result of the automatic measurement.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:RESult:NPEak?\n\nOption Checking:\nNone"
 "\n"

3 all "Automatic Measurement Result Positive Peak" RSRTX_ATTR_AUTOMATIC_MEASUREMENT_RESULT_POSITIVE_PEAK ViReal64 g 
 "Returns the result of the automatic measurement.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:RESult:PPEak?\n\nOption Checking:\nNone"
 "\n"

3 all "Automatic Measurement Result Index" RSRTX_ATTR_AUTOMATIC_MEASUREMENT_RESULT_INDEX ViInt32 gs 
 "This attribute is used as index in array of statistical results for RSRTX_ATTR_AUTOMATIC_MEASUREMENT_SINGLE_STATISTICAL_VALUE query.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\ncmd\n\nOption Checking:\nNone"
 "\n"

3 all "Automatic Measurement Single Statistical Value" RSRTX_ATTR_AUTOMATIC_MEASUREMENT_SINGLE_STATISTICAL_VALUE ViReal64 g 
 "Returns one statistical value from the indicated buffer place. Place is indicated by value of RSRTX_ATTR_AUTOMATIC_MEASUREMENT_RESULT_INDEX attribute.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nMEASurement<m>:STATistics:VALue<n>?\n\nOption Checking:\nNone"
 "\n"

3 all "Export Automatic Measurements"
 "Contains attributes for Exporting the results to the CSV files.\n"

4 all "Export Automatic Measurements Name" RSRTX_ATTR_EXPORT_AUTOMATIC_MEASUREMENTS_NAME ViString gs 
 "Defines the path and filename of the statistics file. The file format is CSV. If the file already exists, it will be overwritten.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nEXPort:MEASurement<m>:STATistics:NAME\n\nOption Checking:\nNone"
 "\n"

4 all "Export Automatic Measurement Save" RSRTX_ATTR_EXPORT_AUTOMATIC_MEASUREMENT_SAVE ViString s 
 "Saves statistical results of the indicated measurement place to the file that is defined by the EXPort:MEASurement<m>:STATistics:NAME command.\n\nAvailable Repeated Capabilities:\nMeasurement (M1,M2,M3,M4,M5,M6,M7,M8)\n\nRemote-control command:\nEXPort:MEASurement<m>:STATistics:SAVE\n\nOption Checking:\nNone"
 "\n"

4 all "Export Automatic Measurements All Name" RSRTX_ATTR_EXPORT_AUTOMATIC_MEASUREMENTS_ALL_NAME ViString s 
 "Defines the path and filename of the statistics file. The file format is CSV. If the file already exists, it will be overwritten.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nEXPort:MEASurement:STATistics:ALL:NAME\n\nOption Checking:\nNone"
 "\n"

4 all "Export Automatic Measurement All Save" RSRTX_ATTR_EXPORT_AUTOMATIC_MEASUREMENT_ALL_SAVE ViString s 
 "Saves statistical results of the indicated measurement place to the file that is defined by RSRTX_ATTR_EXPORT_AUTOMATIC_MEASUREMENTS_ALL_NAME.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nEXPort:MEASurement:STATistics:SAVE\n\nOption Checking:\nNone"
 "\n"

2 all "Gate"
 "This class contains methods for configuring the measurement gate.\n"

3 all "Measurement Gate Enable" RSRTX_ATTR_MEASUREMENT_GATE_ENABLE ViBoolean gs 
 "Activates or deactivates the measurement gate.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nMEASurement<m>:GATE\n\nOption Checking:\nNone"
 "\n"

3 all "Measurement Gate Mode" RSRTX_ATTR_MEASUREMENT_GATE_MODE ViInt32 gs RsRtx_rngAbsoluteRelative
 "Defines whether the gate is defined in absolute or relative values.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nMEASurement<m>:GATE:MODE\n\nOption Checking:\nNone"
 "\n"

3 all "Measurement Gate Absolute Start" RSRTX_ATTR_MEASUREMENT_GATE_ABSOLUTE_START ViReal64 gs 
 "Defines the absolute start time for the measurement gate in seconds.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nMEASurement<m>:GATE:ABSolute:STARt\n\nOption Checking:\nNone"
 "\n"

3 all "Measurement Gate Absolute End" RSRTX_ATTR_MEASUREMENT_GATE_ABSOLUTE_END ViReal64 gs 
 "Defines the absolute end time for the measurement gate in seconds.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nMEASurement<m>:GATE:ABSolute:STOP\n\nOption Checking:\nNone"
 "\n"

3 all "Measurement Gate Relative Start" RSRTX_ATTR_MEASUREMENT_GATE_RELATIVE_START ViReal64 gs 
 "Defines the relative start value for the measurement gate in %.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nMEASurement<m>:GATE:RELative:STARt\n\nOption Checking:\nNone"
 "\n"

3 all "Measurement Gate Relative End" RSRTX_ATTR_MEASUREMENT_GATE_RELATIVE_END ViReal64 gs 
 "Defines the relative end value for the measurement gate in %.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nMEASurement<m>:GATE:RELative:STOP\n\nOption Checking:\nNone"
 "\n"

1 all "Mathematics"
 "The instrument provides different methods of creating mathematical waveforms:\n- Applying mathematical functions to source data\n- Performing FFT analysis on source data\n"

2 all "Math Waveform Header" RSRTX_ATTR_MATH_WAVEFORM_HEADER ViString g 
 "Returns the header of math waveform data. The header contains attributes of the waveform.\n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:DATA:HEADer?\n\nOption Checking:\nNone"
 "\n"

2 all "Math Waveform Data Points" RSRTX_ATTR_MATH_WAVEFORM_DATA_POINTS ViInt32 g 
 "Returns the number of data samples that are returned with CALCulate:MATH<m>:DATA?.\n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:DATA:POINts?\n\nOption Checking:\nNone"
 "\n"

2 all "Mathematics General"
 "General mathematics parameters.\n"

3 all "Math Waveform Enabled" RSRTX_ATTR_MATH_WAVEFORM_ENABLED ViBoolean gs 
 "Enables the math waveform display.\n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:STATe\n\nOption Checking:\nNone"
 "\n"

3 all "Math Waveform Position" RSRTX_ATTR_MATH_WAVEFORM_POSITION ViReal64 gs 
 "Sets the vertical position of the specified math waveform in the window.\n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:POSition\n\nOption Checking:\nNone"
 "\n"

3 all "Math Vertical Scale" RSRTX_ATTR_MATH_VERTICAL_SCALE ViReal64 gs 
 "Sets the vertical position of the specified math waveform in the window.\n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:SCALe\n\nOption Checking:\nNone"
 "\n"

3 all "Math Acquisition Type" RSRTX_ATTR_MATH_ACQUISITION_TYPE ViInt32 gs rsrtx_rngWaveformArithmetics
 "Selects the method to build the resulting math waveform from consecutive acquisitions. The processing is similar to the waveform arithmetics - instead of the acquired waveforms the math waveforms are used to create envelope and average.\n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:ARIThmetics\n\nOption Checking:\nNone"
 "\n"

3 all "Math Expression" RSRTX_ATTR_MATH_EXPRESSION ViString gs 
 "Defines the math expression to be calculated for the specified math channel.\n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>[:EXPRession][:DEFine]\n\nOption Checking:\nNone"
 "\n"

3 all "Math Waveform Label" RSRTX_ATTR_MATH_WAVEFORM_LABEL ViString gs 
 "Defines a label for the specified math waveform (equation), which is shown at the waveform.\n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:LABel\n\nOption Checking:\nNone"
 "\n"

3 all "Math Waveform Label State" RSRTX_ATTR_MATH_WAVEFORM_LABEL_STATE ViBoolean gs 
 "Activates the diplay of the label that is defined with RSRTX_ATTR_MATH_WAVEFORM_LABEL.\n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:LABel:STATe\n\nOption Checking:\nNone"
 "\n"

3 all "Math Waveform Color" RSRTX_ATTR_MATH_WAVEFORM_COLOR ViInt32 gs RsRtx_rngMathWaveformColor
 "Sets the color of the indicated math waveform.\n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:WCOLor\n\nOption Checking:\nNone"
 "\n"

2 all "Mathematics FFT"
 "Attributes for setting FFT parameters. During FFT analysis, a signal in the time domain is  converted to a spectrum of frequencies. A basic FFT waveform can be displayed very quickly. By defining additional FFT parameters, the waveform can be configured in more detail. As a result, either the magnitude or the phase of the determined frequencies can be displayed, or more complex FFT functions. Analysis can be restricted to an extract of the original time base, and the results display can be restricted to a specified frequency range.\n"

3 all "FFT Center Frequency" RSRTX_ATTR_FFT_CENTER_FREQUENCY ViReal64 gs 
 "Defines the position of the displayed frequency range, which is (Center - Span/2) to (Center + Span/2).\n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:FFT:CFRequency\n\nOption Checking:\nNone"
 "\n"

3 all "FFT Frequency Span" RSRTX_ATTR_FFT_FREQUENCY_SPAN ViReal64 gs 
 "The span is specified in Hertz and defines the width of the displayed frequency range, which is (Center - Span/2) to (Center + Span/2).\n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:FFT:SPAN\n\nOption Checking:\nNone"
 "\n"

3 all "FFT Full Span" RSRTX_ATTR_FFT_FULL_SPAN ViString s 
 "Performs FFT calculation for the full frequency span.\n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:FFT:FULLspan\n\nOption Checking:\nNone"
 "\n"

3 all "FFT Start Frequency" RSRTX_ATTR_FFT_START_FREQUENCY ViReal64 gs 
 "Defines the start frequency of the displayed frequency span.\n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:FFT:STARt\n\nOption Checking:\nNone"
 "\n"

3 all "FFT Stop Frequency" RSRTX_ATTR_FFT_STOP_FREQUENCY ViReal64 gs 
 "Defines the stop frequency of the displayed frequency span.\n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:FFT:STOP\n\nOption Checking:\nNone"
 "\n"

3 all "FFT Averaging" RSRTX_ATTR_FFT_AVERAGING ViInt32 gs 
 "Defines the number of spectrums used for averaging if CALCulate: MATH<m>:ARIThmetics is set to AVERage.\n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:FFT:AVERage:COUNt\n\nOption Checking:\nNone"
 "\n"

3 all "FFT Averaging Status" RSRTX_ATTR_FFT_AVERAGING_STATUS ViBoolean g 
 "Returns the state of spectrum averaging.\nFalse - The number of acquired waveforms is less than the number required for average calculation. See RSRTX_ATTR_FFT_AVERAGING.\nTrue - The instrument acquired a sufficient number of waveforms to determine the average.\n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:FFT:AVERage:COMPlete?\n\nOption Checking:\nNone"
 "\n"

3 all "FFT Window Type" RSRTX_ATTR_FFT_WINDOW_TYPE ViInt32 gs rsrtx_rngFFTWindowType
 "Windowing helps minimize the discontinuities at the end of the measured signal interval and thus reduces the effect of spectral leakage, increasing the frequency resolution.\nVarious different window functions are provided to suit different input signals. Each of the window functions has specific characteristics, including some advantages and some trade-offs. These characteristics need to be considered carefully to find the optimum solution for the measurement task.\n\nAvailable Repeated "
 "Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:FFT:WINDow:TYPE\n\nOption Checking:\nNone"
 "\n"

3 all "FFT Resolution Bandwidth" RSRTX_ATTR_FFT_RESOLUTION_BANDWIDTH ViReal64 gs 
 "Defines the resolution bandwidth.\n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:FFT:BANDwidth[:RESolution][:VALue]\n\nOption Checking:\nNone"
 "\n"

3 all "FFT Resolution Bandwidth Coupling Enabled" RSRTX_ATTR_FFT_RESOLUTION_BANDWIDTH_COUPLING_ENABLED ViBoolean gs 
 "Couples the frequency span to the RBW.\n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:FFT:BANDwidth[:RESolution]:AUTO\n\nOption Checking:\nNone"
 "\n"

3 all "FFT Resolution Bandwidth Ratio" RSRTX_ATTR_FFT_RESOLUTION_BANDWIDTH_RATIO ViReal64 gs 
 "Defines the ratio resolution bandwidth (Hz) / span (Hz).\n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:FFT:BANDwidth[:RESolution]:RATio\n\nOption Checking:\nNone"
 "\n"

3 all "FFT Effective Resolution Bandwidth" RSRTX_ATTR_FFT_EFFECTIVE_RESOLUTION_BANDWIDTH ViReal64 g 
 "Queries the effective resolution bandwidth.\n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:FFT:BANDwidth[:RESolution]:ADJusted?\n\nOption Checking:\nNone"
 "\n"

3 all "FFT Scaling Unit" RSRTX_ATTR_FFT_SCALING_UNIT ViInt32 gs rsrtx_rngScalingUnit
 "efines the scaling unit of the y-axis.\n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:FFT:MAGNitude:SCALe\n\nOption Checking:\nNone"
 "\n"

3 all "FFT Sample Rate" RSRTX_ATTR_FFT_SAMPLE_RATE ViReal64 g 
 "Queries the sample rate of data used in an FFT analysis.\n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:FFT:SRATe?\n\nOption Checking:\nNone"
 "\n"

3 all "FFT Yt Window Position" RSRTX_ATTR_FFT_YT_WINDOW_POSITION ViReal64 gs 
 "Sets the position of the time base extract in the Y(t)-window for which the FFT is calculated.\n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:FFT:TIME:POSition\n\nOption Checking:\nNone"
 "\n"

3 all "FFT Yt Window Width" RSRTX_ATTR_FFT_YT_WINDOW_WIDTH ViReal64 gs 
 "Sets the width of the time base extract from the Y(t)-window for which the FFT is calculated.\n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:FFT:TIME:RANGe\n\nOption Checking:\nNone"
 "\n"

2 all "Mathematics Tracks"
 "This class contains methods and attributes for mathematics on tracks. Math tracks are independent of the measurement functions. Bipolar signals have negative and positive pulses, unipolar signals have only positive pulses.\n"

3 all "Math Track Edge Polarity" RSRTX_ATTR_MATH_TRACK_EDGE_POLARITY ViBoolean gs 
 "Sets the rising or falling edge as a reference for each measurement. The setting helps to determine values in terms of the power stage switching state. For unipolar souces, the on edge is the rising edge, and the off edge is the falling edge. In the bipolar case, all transitions are inverted for the negative branch. For positive pulses, the rising edge is the on edge, and for negative pulses, the falling edge is the on edge.\n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control "
 "command:\nCALCulate:MATH<m>:TRACk:EDGE\n\nOption Checking:\nNone"
 "\n"

3 all "Math Track Double Pulse Enable" RSRTX_ATTR_MATH_TRACK_DOUBLE_PULSE_ENABLE ViBoolean gs 
 "Available for bipolar signals. Considers the effect of the double pulse, which arises due to the inversion.\n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:TRACk:DPULse[:ENABle]\n\nOption Checking:\nNone"
 "\n"

3 all "Math Track Threshold Hysteresis" RSRTX_ATTR_MATH_TRACK_THRESHOLD_HYSTERESIS ViReal64 gs 
 "Sets the hysteresis for correct edge detection.\n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:TRACk:THReshold:HYSTeresis\n\nOption Checking:\nNone"
 "\n"

3 all "Math Track Threshold Lower" RSRTX_ATTR_MATH_TRACK_THRESHOLD_LOWER ViReal64 gs 
 "Sets the lower level for bipolar track sources, which determines the crossing points on negative pulses.\n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:TRACk:THReshold:LOWer\n\nOption Checking:\nNone"
 "\n"

3 all "Math Track Threshold Upper" RSRTX_ATTR_MATH_TRACK_THRESHOLD_UPPER ViReal64 gs 
 "Sets the threshold for unipolar track sources, or the upper level for bipolar sources. The signal is measured at the crossing points of the signal with the threshold.\n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:TRACk:THReshold[:UPPer]\n\nOption Checking:\nNone"
 "\n"

1 all "Simple Mathematics (RTB)"
 "This class provides different methods of creating mathematical waveforms:\n- Applying mathematical functions to source data\n- Performing FFT analysis on source data\n"

2 all "Simple Math Waveform Enabled" RSRTX_ATTR_SIMPLE_MATH_WAVEFORM_ENABLED ViBoolean gs 
 "Activates the mathematics function and displays the resulting math waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nCALCulate:QMATH:STATe\n\nOption Checking:\nNone"
 "\n"

2 all "Simple Math Waveform Position" RSRTX_ATTR_SIMPLE_MATH_WAVEFORM_POSITION ViReal64 gs 
 "Sets the vertical position of the math waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nCALCulate:QMATh:POSition\n\nOption Checking:\nNone"
 "\n"

2 all "Simple Math Waveform Vertical Scale" RSRTX_ATTR_SIMPLE_MATH_WAVEFORM_VERTICAL_SCALE ViReal64 gs 
 "Sets the vertical scale of the math waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nCALCulate:QMATh:SCALe\n\nOption Checking:\nNone"
 "\n"

2 all "Simple Math Waveform Operation" RSRTX_ATTR_SIMPLE_MATH_WAVEFORM_OPERATION ViInt32 gs RsRtx_rngMathOperation
 "Defines the operation that calculates the math waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nCALCulate:QMATh:OPERation\n\nOption Checking:\nNone"
 "\n"

2 all "Source"
 "Class for SourceNumber repcap.\n"

3 all "Simple Math Waveform Source" RSRTX_ATTR_SIMPLE_MATH_WAVEFORM_SOURCE ViInt32 gs rsrtx_rngMathSource
 "Defines the first and the second source for the mathematical operation (operands). The sources can be any active analog channel.\n\nAvailable Repeated Capabilities:\nSourceNumber (S1,S2,S3,S4)\n\nRemote-control command:\nCALCulate:QMATh:SOURce<m>\n\nOption Checking:\nNone"
 "\n"

1 all "Reference Waveforms"
 "Contains attributes for Reference Waveforms.\n"

2 all "Reference Waveform Header" RSRTX_ATTR_REFERENCE_WAVEFORM_HEADER ViString g 
 "Returns information on the reference waveform.\n\nAvailable Repeated Capabilities:\nReferenceWfm (RW1,RW2,RW3,RW4)\n\nRemote-control command:\nREFCurve<m>:DATA:HEADer?\n\nOption Checking:\nNone"
 "\n"

2 all "Reference Waveform Data Points" RSRTX_ATTR_REFERENCE_WAVEFORM_DATA_POINTS ViInt32 g 
 "Returns the number of data samples that are returned with REFCurve<m>:DATA?.\n\nAvailable Repeated Capabilities:\nReferenceWfm (RW1,RW2,RW3,RW4)\n\nRemote-control command:\nREFCurve<m>:DATA:POINts?\n\nOption Checking:\nNone"
 "\n"

2 all "Reference Waveform Label" RSRTX_ATTR_REFERENCE_WAVEFORM_LABEL ViString gs 
 "Defines a label for the indicated reference waveform.\n\nAvailable Repeated Capabilities:\nReferenceWfm (RW1,RW2,RW3,RW4)\n\nRemote-control command:\nREFCurve<m>:LABel\n\nOption Checking:\nNone"
 "\n"

2 all "Reference Waveform Color" RSRTX_ATTR_REFERENCE_WAVEFORM_COLOR ViInt32 gs RsRtx_rngReferenceWaveformColor
 "Selects a color for the reference waveform. The default color is white. You can select another monochrome color, or a color scale.\n\nAvailable Repeated Capabilities:\nReferenceWfm (RW1,RW2,RW3,RW4)\n\nRemote-control command:\nREFCurve<m>:WCOLor\n\nOption Checking:\nNone"
 "\n"

2 all "Reference"
 "Contains attributes for Reference settings.\n"

3 all "Reference Waveform Source" RSRTX_ATTR_REFERENCE_WAVEFORM_SOURCE ViInt32 gs rsrtx_rngReferenceWaveformParameter
 "Selects the source waveform to be used as a reference.\n\nAvailable Repeated Capabilities:\nReferenceWfm (RW1,RW2,RW3,RW4)\n\nRemote-control command:\nREFCurve<m>:SOURce\n\nOption Checking:\nNone"
 "\n"

3 all "Reference Waveform Update" RSRTX_ATTR_REFERENCE_WAVEFORM_UPDATE ViString s 
 "Copies the selected source waveform with all its settings to the memory of the reference waveform\n\nAvailable Repeated Capabilities:\nReferenceWfm (RW1,RW2,RW3,RW4)\n\nRemote-control command:\nREFCurve<m>:UPDate\n\nOption Checking:\nNone"
 "\n"

3 all "Reference Waveform Display Enabled" RSRTX_ATTR_REFERENCE_WAVEFORM_DISPLAY_ENABLED ViBoolean gs 
 "If enabled, the reference waveform is displayed in the diagram.\n\nAvailable Repeated Capabilities:\nReferenceWfm (RW1,RW2,RW3,RW4)\n\nRemote-control command:\nREFCurve<m>:STATe\n\nOption Checking:\nNone"
 "\n"

3 all "Reference Waveform Load From File" RSRTX_ATTR_REFERENCE_WAVEFORM_LOAD_FROM_FILE ViString s 
 "Loads the waveform data from the indicated reference file to the reference storage. To load the instrument settings, use REFCurve<m>: LOAD: STATe.\n\nAvailable Repeated Capabilities:\nReferenceWfm (RW1,RW2,RW3,RW4)\n\nRemote-control command:\nREFCurve<m>:LOAD\n\nOption Checking:\nNone"
 "\n"

3 all "Reference Waveform Load Configuration" RSRTX_ATTR_REFERENCE_WAVEFORM_LOAD_CONFIGURATION ViString s 
 "Loads the instrument settings in addition to the reference waveform data. The waveform data must be loaded before the settings. The settings are only available if the file was stored to the internal storage /INT/REF ERENCE and never written to an external storage (USB stick).\n\nAvailable Repeated Capabilities:\nReferenceWfm (RW1,RW2,RW3,RW4)\n\nRemote-control command:\nREFCurve<m>:LOAD:STATe\n\nOption Checking:\nNone"
 "\n"

3 all "Reference Waveform Save To File" RSRTX_ATTR_REFERENCE_WAVEFORM_SAVE_TO_FILE ViString s 
 "Stores the reference waveform the specified file. For instrument model '' is parameter <FileName> ignored.\n\nAvailable Repeated Capabilities:\nReferenceWfm (RW1,RW2,RW3,RW4)\n\nRemote-control command:\nREFCurve<m>:SAVE\n\nOption Checking:\nNone"
 "\n"

3 all "Reference Waveform Catalog" RSRTX_ATTR_REFERENCE_WAVEFORM_CATALOG ViString g 
 "Returns the source waveform - channel, math or reference waveform.\n\nAvailable Repeated Capabilities:\nReferenceWfm (RW1,RW2,RW3,RW4)\n\nRemote-control command:\nREFCurve<m>:SOURce:CATalog?\n\nOption Checking:\nNone"
 "\n"

2 all "Scaling"
 "Contains attributes for Scalling settings.\n"

3 all "Reference Waveform Vertical Scale" RSRTX_ATTR_REFERENCE_WAVEFORM_VERTICAL_SCALE ViReal64 gs 
 "Sets the scale factor for the reference waveform if vertical scaling is set to Independent.\n\nAvailable Repeated Capabilities:\nReferenceWfm (RW1,RW2,RW3,RW4)\n\nRemote-control command:\nREFCurve<m>:VERTical:SCALe\n\nOption Checking:\nNone"
 "\n"

3 all "Reference Waveform Vertical Position" RSRTX_ATTR_REFERENCE_WAVEFORM_VERTICAL_POSITION ViReal64 gs 
 "Moves the reference waveform and its horizontal axis up or down in the diagram, if vertical scaling is set to Independent.\n\nAvailable Repeated Capabilities:\nReferenceWfm (RW1,RW2,RW3,RW4)\n\nRemote-control command:\nREFCurve<m>:VERTical:POSition\n\nOption Checking:\nNone"
 "\n"

3 all "Reference Waveform Horizontal Scale" RSRTX_ATTR_REFERENCE_WAVEFORM_HORIZONTAL_SCALE ViReal64 gs 
 "Changes the horizontal scale (timebase) of the reference waveform independent of the channel waveform settings.\n\nAvailable Repeated Capabilities:\nReferenceWfm (RW1,RW2,RW3,RW4)\n\nRemote-control command:\nREFCurve<m>:HORizontal:SCALe\n\nOption Checking:\nNone"
 "\n"

3 all "Reference Waveform Horizontal Position" RSRTX_ATTR_REFERENCE_WAVEFORM_HORIZONTAL_POSITION ViReal64 gs 
 "Changes the horizontal position of the reference waveform independent of the channel waveform settings.\n\nAvailable Repeated Capabilities:\nReferenceWfm (RW1,RW2,RW3,RW4)\n\nRemote-control command:\nREFCurve<m>:HORizontal:POSition\n\nOption Checking:\nNone"
 "\n"

1 all "Mask"
 "Contains attributes for Masks settings.\n"

2 all "Mask Enabled" RSRTX_ATTR_MASK_ENABLED ViBoolean gs 
 "Turns the mask test mode on or off. When turning off, any temporarily stored new masks are deleted.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nMASK:STATe\n\nOption Checking:\nNone"
 "\n"

2 all "Mask Source" RSRTX_ATTR_MASK_SOURCE ViInt32 gs rsrtx_rngSource
 "Defines the channel to be compared with the mask.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nMASK:SOURce\n\nOption Checking:\nNone"
 "\n"

2 all "Mask Test" RSRTX_ATTR_MASK_TEST ViInt32 gs rsrtx_rngMaskCondition
 "Starts, finishes or interrupts a mask test.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nMASK:TEST\n\nOption Checking:\nNone"
 "\n"

2 all "Mask Copy Channel" RSRTX_ATTR_MASK_COPY_CHANNEL ViString s 
 "Creates a mask from the envelope waveform of the test source set with MASK:SOURce.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nMASK:CHCopy\n\nOption Checking:\nNone"
 "\n"

2 all "Mask Hit Count" RSRTX_ATTR_MASK_HIT_COUNT ViInt32 g 
 "Returns the number of acquistions that hit the mask.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nMASK:VCOunt?\n\nOption Checking:\nNone"
 "\n"

2 all "Mask Count" RSRTX_ATTR_MASK_COUNT ViInt32 g 
 "Returns the number of tested acquisitions.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nMASK:COUNt?\n\nOption Checking:\nNone"
 "\n"

2 all "Mask Segment Capture Mode" RSRTX_ATTR_MASK_SEGMENT_CAPTURE_MODE ViInt32 gs RsRtx_rngMaskCaptureMode
 "Only available with history. The command selects whether all acquisitions are stored in segments, or only failed acquisition. You can use the history to analyze the segments.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nMASK:CAPTure[:MODE]\n\nOption Checking:\nK15"
 "\n"

2 all "Mask Store" RSRTX_ATTR_MASK_STORE ViString s 
 "Saves the current mask in the specified file.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nMASK:SAVE\n\nOption Checking:\nNone"
 "\n"

2 all "Mask Load" RSRTX_ATTR_MASK_LOAD ViString s 
 "Loads a stored mask from the specified file.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nMASK:LOAD\n\nOption Checking:\nNone"
 "\n"

2 all "Mask Test Action Beep" RSRTX_ATTR_MASK_TEST_ACTION_BEEP ViInt32 gs rsrtx_rngMaskTestActionExecution
 "Sets when and how often the generates a beep sound will be executed.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nMASK:ACTion:SOUNd:EVENt:MODE\n\nOption Checking:\nNone"
 "\n"

2 all "Mask Test Action Stop" RSRTX_ATTR_MASK_TEST_ACTION_STOP ViInt32 gs rsrtx_rngMaskTestActionExecution
 "Sets when and how often the stops the waveform acquisition. will be executed.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nMASK:ACTion:STOP:EVENt:MODE\n\nOption Checking:\nNone"
 "\n"

2 all "Mask Test Action Screenshot" RSRTX_ATTR_MASK_TEST_ACTION_SCREENSHOT ViInt32 gs rsrtx_rngMaskTestActionExecution
 "Sets when and how often the saves a screenshot according to printer output settings will be executed.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nMASK:ACTion:SCRSave:EVENt:MODE\n\nOption Checking:\nNone"
 "\n"

2 all "Mask Test Action Screenshot Destination" RSRTX_ATTR_MASK_TEST_ACTION_SCREENSHOT_DESTINATION ViString gs 
 "Defines the path and filename for a screenshot that will be saved on mask violation. The file format is PNG, the filename is incremented automatically.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nMASK:ACTion:SCRSave:DESTination\n\nOption Checking:\nNone"
 "\n"

2 all "Mask Test Action Saves Waveform" RSRTX_ATTR_MASK_TEST_ACTION_SAVES_WAVEFORM ViInt32 gs rsrtx_rngMaskTestActionExecution
 "Sets when and how often the saves the waveform data according to the screenshot output settings will be executed.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nMASK:ACTion:WFMSave:EVENt:MODE\n\nOption Checking:\nNone"
 "\n"

2 all "Mask Test Action Saves Waveform Destination" RSRTX_ATTR_MASK_TEST_ACTION_SAVES_WAVEFORM_DESTINATION ViString gs 
 "Defines the path and filename for a waveform data that will be saved on mask violation. The file format is CSV, the filename is incremented automatically.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nMASK:ACTion:WFMSave:DESTination\n\nOption Checking:\nNone"
 "\n"

2 all "Mask Test Action Pulse" RSRTX_ATTR_MASK_TEST_ACTION_PULSE ViInt32 gs rsrtx_rngMaskTestActionExecution
 "Creates a trigger out pulse on mask violation.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nMASK:ACTion:PULSe:EVENt:MODE\n\nOption Checking:\nNone"
 "\n"

2 all "Mask Test Action AUX Output Enabled" RSRTX_ATTR_MASK_TEST_ACTION_AUX_OUTPUT_ENABLED ViBoolean gs 
 "Creates a pulse on the AUX OUT connector if the mask is violated. This selection sets the configuration of the AUX OUT connector to Mask Violation.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nMASK:ACTion:YOUT:ENABle\n\nOption Checking:\nNone"
 "\n"

2 all "Mask Test Violation Count Beep" RSRTX_ATTR_MASK_TEST_VIOLATION_COUNT_BEEP ViInt32 gs 
 "Sets the number of mask violations after which the generates a beep sound is executed.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nMASK:ACTion:SOUNd:EVENt:COUNt\n\nOption Checking:\nNone"
 "\n"

2 all "Mask Test Violation Count Stop" RSRTX_ATTR_MASK_TEST_VIOLATION_COUNT_STOP ViInt32 gs 
 "Sets the number of mask violations after which the stops the waveform acquisition is executed.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nMASK:ACTion:STOP:EVENt:COUNt\n\nOption Checking:\nNone"
 "\n"

2 all "Mask Test Violation Count Screenshot" RSRTX_ATTR_MASK_TEST_VIOLATION_COUNT_SCREENSHOT ViInt32 gs 
 "Sets the number of mask violations after which the saves a screenshot according to printer output settings is executed.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nMASK:ACTion:SCRSave:EVENt:COUNt\n\nOption Checking:\nNone"
 "\n"

2 all "Mask Test Violation Count Print" RSRTX_ATTR_MASK_TEST_VIOLATION_COUNT_PRINT ViInt32 gs 
 "Sets the number of mask violations after which the prints a screenshot to a printer connected to the USB connector on the front or rear panel is executed.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nMASK:ACTion:PRINt:EVENt:COUNt\n\nOption Checking:\nNone"
 "\n"

2 all "Mask Test Violation Count Saves Waveform" RSRTX_ATTR_MASK_TEST_VIOLATION_COUNT_SAVES_WAVEFORM ViInt32 gs 
 "Sets the number of mask violations after which the saves the waveform data according to the screenshot output settings is executed.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nMASK:ACTion:WFMSave:EVENt:COUNt\n\nOption Checking:\nNone"
 "\n"

2 all "Mask Test Violation Count Pulse" RSRTX_ATTR_MASK_TEST_VIOLATION_COUNT_PULSE ViInt32 gs 
 "Sets the number of mask violations after which the action is executed. \n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nMASK:ACTion:PULSe:EVENt:COUNt\n\nOption Checking:\nNone"
 "\n"

2 all "Mask Test Violation Pulse Length" RSRTX_ATTR_MASK_TEST_VIOLATION_PULSE_LENGTH ViReal64 gs 
 "Sets the pulse width of the trigger out pulse that is created on mask violation.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nMASK:ACTion:PULSe:PLENgth\n\nOption Checking:\nNone"
 "\n"

2 all "Mask Test Violation Pulse Polarity" RSRTX_ATTR_MASK_TEST_VIOLATION_PULSE_POLARITY ViInt32 gs rsrtx_rngPolarity
 "Sets the polarity of the trigger out pulse that is created on mask violation.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nMASK:ACTion:PULSe:POLarity\n\nOption Checking:\nNone"
 "\n"

2 all "Mask Reset Test Counter" RSRTX_ATTR_MASK_RESET_TEST_COUNTER ViString s 
 "Sets the counters of passed and failed acquisitions to Zero.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nMASK:RESet:COUNter\n\nOption Checking:\nNone"
 "\n"

2 all "Mask Scaling"
 "Contains attributes for Mask Scalling settings.\n"

3 all "Mask Vertical Offset" RSRTX_ATTR_MASK_VERTICAL_OFFSET ViReal64 gs 
 "Moves the mask vertically within the display.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nMASK:YPOSition\n\nOption Checking:\nNone"
 "\n"

3 all "Mask Vertical Scaling" RSRTX_ATTR_MASK_VERTICAL_SCALING ViReal64 gs 
 "Changes the vertical scaling to stretch or compress the mask in y-direction.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nMASK:YSCale\n\nOption Checking:\nNone"
 "\n"

3 all "Mask Vertical Width" RSRTX_ATTR_MASK_VERTICAL_WIDTH ViReal64 gs 
 "Changes the width of the mask in vertical direction.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nMASK:YWIDth\n\nOption Checking:\nNone"
 "\n"

3 all "Mask Horizontal Width" RSRTX_ATTR_MASK_HORIZONTAL_WIDTH ViReal64 gs 
 "Changes the width of the mask in horizontal direction.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nMASK:XWIDth\n\nOption Checking:\nNone"
 "\n"

1 all "Search"
 "Contains attributes for searching functions.\n"

2 all "Search Enabled" RSRTX_ATTR_SEARCH_ENABLED ViBoolean gs 
 "Enables and disables the search mode.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:STATe\n\nOption Checking:\nNone"
 "\n"

2 all "Search Condition" RSRTX_ATTR_SEARCH_CONDITION ViInt32 gs rsrtx_rngSearchCondition
 "Selects the symptom you want to search for.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:CONDition\n\nOption Checking:\nNone"
 "\n"

2 all "Search Source" RSRTX_ATTR_SEARCH_SOURCE ViInt32 gs rsrtx_rngSearchSource
 "Selects the waveform to be analyzed. One of the active channel, math, and reference waveforms can be searched.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:SOURce\n\nOption Checking:\nNone"
 "\n"

2 all "Search Trigger Edge Slope" RSRTX_ATTR_SEARCH_TRIGGER_EDGE_SLOPE ViInt32 gs rsrtx_rngSearchSlope
 "Sets the slope to be found.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:TRIGger:EDGE:SLOPe\n\nOption Checking:\nNone"
 "\n"

2 all "Search Trigger Edge Level" RSRTX_ATTR_SEARCH_TRIGGER_EDGE_LEVEL ViReal64 gs 
 "Sets the voltage level for the edge search.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:TRIGger:EDGE:LEVel\n\nOption Checking:\nNone"
 "\n"

2 all "Search Trigger Edge Hystersis" RSRTX_ATTR_SEARCH_TRIGGER_EDGE_HYSTERSIS ViReal64 gs 
 "Sets a hysteresis range above and below the search level to avoid unwanted search results caused by noise oscillation around the level.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:TRIGger:EDGE:LEVel:DELTa\n\nOption Checking:\nNone"
 "\n"

2 all "Search Trigger Width Level" RSRTX_ATTR_SEARCH_TRIGGER_WIDTH_LEVEL ViReal64 gs 
 "Sets the voltage level on which the pulse width is measured.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:TRIGger:WIDTh:LEVel\n\nOption Checking:\nNone"
 "\n"

2 all "Search Trigger Width Hystersis" RSRTX_ATTR_SEARCH_TRIGGER_WIDTH_HYSTERSIS ViReal64 gs 
 "Defines a range around the width value.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:TRIGger:WIDTh:LEVel:DELTa\n\nOption Checking:\nNone"
 "\n"

2 all "Search Trigger Width Width" RSRTX_ATTR_SEARCH_TRIGGER_WIDTH_WIDTH ViReal64 gs 
 "Sets the reference pulse width, the nominal value for comparisons.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:TRIGger:WIDTh:WIDTh\n\nOption Checking:\nNone"
 "\n"

2 all "Search Trigger Width Delta" RSRTX_ATTR_SEARCH_TRIGGER_WIDTH_DELTA ViReal64 gs 
 "Sets a range delta t to the reference pulse width.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:TRIGger:WIDTh:DELTa\n\nOption Checking:\nNone"
 "\n"

2 all "Search Trigger Width Polarity" RSRTX_ATTR_SEARCH_TRIGGER_WIDTH_POLARITY ViInt32 gs rsrtx_rngPolarity
 "Sets the polarity of the pulse.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:TRIGger:WIDTh:POLarity\n\nOption Checking:\nNone"
 "\n"

2 all "Search Trigger Width Range" RSRTX_ATTR_SEARCH_TRIGGER_WIDTH_RANGE ViInt32 gs rsrtx_rngSearchRange
 "Sets how the measured pulse width is compared with the given limit(s).\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:TRIGger:WIDTh:RANGe\n\nOption Checking:\nNone"
 "\n"

2 all "Search Trigger Peak Polarity" RSRTX_ATTR_SEARCH_TRIGGER_PEAK_POLARITY ViInt32 gs rsrtx_rngSearchSlope
 "Indicates the polarity of a the pulse to be searched for a peak.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:MEASure:PEAK:POLarity\n\nOption Checking:\nNone"
 "\n"

2 all "Search Trigger Peak Limit" RSRTX_ATTR_SEARCH_TRIGGER_PEAK_LIMIT ViReal64 gs 
 "Sets the voltage level for the edge search.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:MEASure:LEVel:PEAK:MAGNitude\n\nOption Checking:\nNone"
 "\n"

2 all "Search Trigger Rise Time Polarity" RSRTX_ATTR_SEARCH_TRIGGER_RISE_TIME_POLARITY ViInt32 gs rsrtx_rngSearchSlope
 "Sets the slope to be found.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:TRIGger:RISetime:SLOPe\n\nOption Checking:\nNone"
 "\n"

2 all "Search Trigger Rise Time Level Lower" RSRTX_ATTR_SEARCH_TRIGGER_RISE_TIME_LEVEL_LOWER ViReal64 gs 
 "Sets the voltage threshold. When the signal crosses this level, the rise time measurement starts or stops depending on the selected slope.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:TRIGger:LEVel:RISetime:LOWer\n\nOption Checking:\nNone"
 "\n"

2 all "Search Trigger Rise Time Level Upper" RSRTX_ATTR_SEARCH_TRIGGER_RISE_TIME_LEVEL_UPPER ViReal64 gs 
 "Sets the voltage threshold. When the signal crosses this level, the rise time measurement starts or stops depending on the selected slope.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:TRIGger:LEVel:RISetime:UPPer\n\nOption Checking:\nNone"
 "\n"

2 all "Search Trigger Rise Time Range" RSRTX_ATTR_SEARCH_TRIGGER_RISE_TIME_RANGE ViInt32 gs rsrtx_rngSearchRange
 "Sets how the measured rise or fall time is compared with the given limit(s).\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:TRIGger:RISetime:RANGe\n\nOption Checking:\nNone"
 "\n"

2 all "Search Trigger Rise Time Reference Time" RSRTX_ATTR_SEARCH_TRIGGER_RISE_TIME_REFERENCE_TIME ViReal64 gs 
 "Sets the reference rise or fall time, the nominal value for comparisons.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:TRIGger:RISetime:TIME\n\nOption Checking:\nNone"
 "\n"

2 all "Search Trigger Rise Time Delta Time" RSRTX_ATTR_SEARCH_TRIGGER_RISE_TIME_DELTA_TIME ViReal64 gs 
 "Sets a range delta t to the reference rise/fall time set with Time if Range is set to Within or Outside.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:TRIGger:RISetime:DELTa\n\nOption Checking:\nNone"
 "\n"

2 all "Search Trigger Runt Polarity" RSRTX_ATTR_SEARCH_TRIGGER_RUNT_POLARITY ViInt32 gs rsrtx_rngSearchSlope
 "Indicates the polarity of a the runt to be searched for.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:TRIGger:RUNT:POLarity\n\nOption Checking:\nNone"
 "\n"

2 all "Search Trigger Runt Level Lower" RSRTX_ATTR_SEARCH_TRIGGER_RUNT_LEVEL_LOWER ViReal64 gs 
 "Sets the lower|upper voltage threshold for runt detection. A positive runt crosses the lower level twice without crossing the lower|upper level.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:TRIGger:LEVel:RUNT:LOWer\n\nOption Checking:\nNone"
 "\n"

2 all "Search Trigger Runt Level Upper" RSRTX_ATTR_SEARCH_TRIGGER_RUNT_LEVEL_UPPER ViReal64 gs 
 "Sets the lower|upper voltage threshold for runt detection. A positive runt crosses the lower level twice without crossing the lower|upper level.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:TRIGger:LEVel:RUNT:UPPer\n\nOption Checking:\nNone"
 "\n"

2 all "Search Trigger Runt Range" RSRTX_ATTR_SEARCH_TRIGGER_RUNT_RANGE ViInt32 gs rsrtx_rngSearchRange
 "Sets how the measured pulse width is compared with the given limit(s).\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:TRIGger:RUNT:RANGe\n\nOption Checking:\nNone"
 "\n"

2 all "Search Trigger Runt Width" RSRTX_ATTR_SEARCH_TRIGGER_RUNT_WIDTH ViReal64 gs 
 "This function configures the conditions for the runt trigger search.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:TRIGger:RUNT:WIDTh\n\nOption Checking:\nNone"
 "\n"

2 all "Search Trigger Runt Delta Width" RSRTX_ATTR_SEARCH_TRIGGER_RUNT_DELTA_WIDTH ViReal64 gs 
 "Sets a range delta t to the reference rise/fall time set with Width if Range is set to Within or Outside.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:TRIGger:RUNT:DELTa\n\nOption Checking:\nNone"
 "\n"

2 all "Search Trigger Data2Clock Clock Source" RSRTX_ATTR_SEARCH_TRIGGER_D2C_CLOCK_SOURCE ViInt32 gs rsrtx_rngSearchSource
 "Sets the waveform sourece for clock line. For setting waveform source of data line use RSRTX_ATTR_SEARCH_SOURCE.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:TRIGger:DATatoclock:CSOurce\n\nOption Checking:\nNone"
 "\n"

2 all "Search Trigger Data2Clock Clock Level" RSRTX_ATTR_SEARCH_TRIGGER_D2C_CLOCK_LEVEL ViReal64 gs 
 "Sets the voltage levels for clock signals. Clock level and clock edge define the reference point for setup and hold time.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:TRIGger:DATatoclock:CLEVel\n\nOption Checking:\nNone"
 "\n"

2 all "Search Trigger Data2Clock Data Level" RSRTX_ATTR_SEARCH_TRIGGER_D2C_DATA_LEVEL ViReal64 gs 
 "Sets the voltage levels for  data signals. The data level defines the point of data transition.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:TRIGger:DATatoclock:DLEVel\n\nOption Checking:\nNone"
 "\n"

2 all "Search Trigger Data2Clock Clock Hysteresis" RSRTX_ATTR_SEARCH_TRIGGER_D2C_CLOCK_HYSTERESIS ViReal64 gs 
 "Sets a hysteresis range to the clock or data levels in order to avoid unwanted search results caused by noise oscillation around the level. For a rising edge, the hysteresis is below the search level. Otherwise, for a falling edge the hysteresis is above the level.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:TRIGger:DATatoclock:CLEVel:DELTa\n\nOption Checking:\nNone"
 "\n"

2 all "Search Trigger Data2Clock Data Hysteresis" RSRTX_ATTR_SEARCH_TRIGGER_D2C_DATA_HYSTERESIS ViReal64 gs 
 "Sets a hysteresis range to the clock or data levels in order to avoid unwanted search results caused by noise oscillation around the level. For a rising edge, the hysteresis is below the search level. Otherwise, for a falling edge the hysteresis is above the level.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:TRIGger:DATatoclock:DLEVel:DELTa\n\nOption Checking:\nNone"
 "\n"

2 all "Search Trigger Data2Clock Polarity" RSRTX_ATTR_SEARCH_TRIGGER_D2C_POLARITY ViInt32 gs rsrtx_rngSearchSlope
 "Sets the slope to be found on clock signal. It define the time reference point for the setup and hold time.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:TRIGger:DATatoclock:CEDGe\n\nOption Checking:\nNone"
 "\n"

2 all "Search Trigger Data2Clock Setup Time" RSRTX_ATTR_SEARCH_TRIGGER_D2C_SETUP_TIME ViReal64 gs 
 "Sets the minimum time before the clock edge while the data signal must stay steady above or below the data level. The setup time can be negative. In this case, the setup interval starts after the clock edge, and the hold time must be positive and longer than the absolute value of the setup time.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:TRIGger:DATatoclock:STIMe\n\nOption Checking:\nNone"
 "\n"

2 all "Search Trigger Data2Clock Hold Time" RSRTX_ATTR_SEARCH_TRIGGER_D2C_HOLD_TIME ViReal64 gs 
 "Sets the minimum time after the clock edge while the data signal must stay steady above or below the data level. The hold time can be negative. In this case, the hold time ends before the clock edge, and the setup time must be positive and longer than the absolute value of the hold time.\n\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:TRIGger:DATatoclock:HTIMe\n\nOption Checking:\nNone"
 "\n"

2 all "Search Trigger Pattern" RSRTX_ATTR_SEARCH_TRIGGER_PATTERN ViString gs 
 "Sets the state of the source channels used for pattern search.\n\nUse: 0 for Low, 1 for High, X for not matter\n\nExample: '1X10'\n\nNotes:\n(1) Order of channels is CH1,CH2,CH3,CH4\n\n(2) Exactly 4 channel must be specified in pattern.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:TRIGger:PATTern:SOURce\n\nOption Checking:\nNone"
 "\n"

2 all "Search Trigger Pattern Combination" RSRTX_ATTR_SEARCH_TRIGGER_PATTERN_COMBINATION ViInt32 gs rsrtx_rngSearchTriggerPatternCombination
 "Sets the logical combination of the channel states.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:TRIGger:PATTern:FUNCtion\n\nOption Checking:\nNone"
 "\n"

2 all "Search Trigger Pattern Comparison" RSRTX_ATTR_SEARCH_TRIGGER_PATTERN_COMPARISON ViInt32 gs rsrtx_rngSearchRange
 "Sets the condition how the duration of a steady pattern is compared with the given reference time.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:TRIGger:PATTern:WIDTh:RANGe\n\nOption Checking:\nNone"
 "\n"

2 all "Search Trigger Pattern Width" RSRTX_ATTR_SEARCH_TRIGGER_PATTERN_WIDTH ViReal64 gs 
 "Sets the reference time of a steady pattern, the nominal value for comparisons.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:TRIGger:PATTern:WIDTh[:WIDTh]\n\nOption Checking:\nNone"
 "\n"

2 all "Search Trigger Pattern Width Delta" RSRTX_ATTR_SEARCH_TRIGGER_PATTERN_WIDTH_DELTA ViReal64 gs 
 "Sets a range delta t to the reference pattern duration, when comparsion  is set to Within or Outside (see RSRTX_ATTR_SEARCH_TRIGGER_PATTERN_COMPARISON).\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:TRIGger:PATTern:WIDTh:DELTa\n\nOption Checking:\nNone"
 "\n"

2 all "Search Trigger Window Level Lower" RSRTX_ATTR_SEARCH_TRIGGER_WINDOW_LEVEL_LOWER ViReal64 gs 
 "Sets the voltage threshold. When the signal crosses this level, the window measurement starts or stops depending on the selected slope.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:TRIGger:LEVel:WINDow:LOWer\n\nOption Checking:\nNone"
 "\n"

2 all "Search Trigger Window Level Upper" RSRTX_ATTR_SEARCH_TRIGGER_WINDOW_LEVEL_UPPER ViReal64 gs 
 "Sets the voltage threshold. When the signal crosses this level, the window measurement starts or stops depending on the selected slope.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:TRIGger:LEVel:WINDow:UPPer\n\nOption Checking:\nNone"
 "\n"

2 all "Search Trigger Window Delta" RSRTX_ATTR_SEARCH_TRIGGER_WINDOW_DELTA ViReal64 gs 
 "Sets a range delta t.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:TRIGger:WINDow:DELTa\n\nOption Checking:\nNone"
 "\n"

2 all "Search Trigger Window Polarity" RSRTX_ATTR_SEARCH_TRIGGER_WINDOW_POLARITY ViInt32 gs rsrtx_rngSearchSlope
 "Sets the slope to be found.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:TRIGger:WINDow:POLarity\n\nOption Checking:\nNone"
 "\n"

2 all "Search Trigger Window Range" RSRTX_ATTR_SEARCH_TRIGGER_WINDOW_RANGE ViInt32 gs rsrtx_rngWindowRange
 "Sets how the measured pulse width is compared with the given limit(s).\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:TRIGger:WINDow:RANGe\n\nOption Checking:\nNone"
 "\n"

2 all "Search Trigger Window Time Range" RSRTX_ATTR_SEARCH_TRIGGER_WINDOW_TIME_RANGE ViInt32 gs rsrtx_rngSearchRange
 "Configures the window time range.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:TRIGger:WINDow:TIMerange\n\nOption Checking:\nNone"
 "\n"

2 all "Search Trigger Window Width" RSRTX_ATTR_SEARCH_TRIGGER_WINDOW_WIDTH ViReal64 gs 
 "Configures window trigger width.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:TRIGger:WINDow:WIDTh\n\nOption Checking:\nNone"
 "\n"

2 all "Search Gate Mode" RSRTX_ATTR_SEARCH_GATE_MODE ViInt32 gs rsrtx_rngSearchGateMode
 "Configures the start and end values for the gate.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:GATE:MODE\n\nOption Checking:\nNone"
 "\n"

2 all "Search Gate Start" RSRTX_ATTR_SEARCH_GATE_START ViReal64 gs 
 "Sets the start time of the search area in relation to the trigger point.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:GATE:ABSolute:STARt\n\nOption Checking:\nNone"
 "\n"

2 all "Search Gate Stop" RSRTX_ATTR_SEARCH_GATE_STOP ViReal64 gs 
 "Sets the stop time of the search area in relation to the trigger point.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:GATE:ABSolute:STOP\n\nOption Checking:\nNone"
 "\n"

2 all "Search Show Result" RSRTX_ATTR_SEARCH_SHOW_RESULT ViBoolean gs 
 "Shows or hides the table of search results.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:RESDiagram:SHOW\n\nOption Checking:\nNone"
 "\n"

2 all "Search Number Of Results" RSRTX_ATTR_SEARCH_NUMBER_OF_RESULTS ViInt32 g 
 "This attribute returns the number of search results.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:RCOunt?\n\nOption Checking:\nNone"
 "\n"

2 all "Search Maximum Number Of Results" RSRTX_ATTR_SEARCH_MAXIMUM_NUMBER_OF_RESULTS ViInt32 g 
 "Returns the maximum number of search results which the instrument can store.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:RESult:BCOunt?\n\nOption Checking:\nNone"
 "\n"

2 all "Export"
 "Contains attributes for search exporting.\n"

3 all "Search Export Name" RSRTX_ATTR_SEARCH_EXPORT_NAME ViString gs 
 "Defines the path and filename of the results file, available for search. The file format is CSV. If the file already exists, it will be overwritten.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nEXPort:SEARch:NAME\n\nOption Checking:\nNone"
 "\n"

3 all "Search Export Save" RSRTX_ATTR_SEARCH_EXPORT_SAVE ViString s 
 "Saves search results of the indicated measurement place to the file.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nEXPort:SEARch:SAVE\n\nOption Checking:\nNone"
 "\n"

2 all "Channel"
 "Contains attributes for searching functions.\n"

3 all "Search Trigger Pattern Level" RSRTX_ATTR_SEARCH_TRIGGER_PATTERN_LEVEL ViReal64 gs 
 "Sets the threshold value for the selected source channel. If the signal value is higher than the trigger level, the signal state is high (1 or true for the boolean logic). Otherwise, the signal state is considered low (0 or false) if the signal value is below the trigger level.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nSEARch:TRIGger:PATTern:LEVel<n>\n\nOption Checking:\nNone"
 "\n"

3 all "Search Trigger Pattern Hysteresis" RSRTX_ATTR_SEARCH_TRIGGER_PATTERN_HYSTERESIS ViReal64 gs 
 "Sets a hysteresis range to the level of the selected source channel in order to avoid unwanted search results caused by noise oscillation around the level. For a rising edge, the hysteresis is below the search level. Otherwise, for a falling edge the hysteresis is above the level.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nSEARch:TRIGger:PATTern:LEVel<n>:DELTa\n\nOption Checking:\nNone"
 "\n"

2 all "LIN"
 "Contains attributes for searching functions in LIN protocol.\n"

3 all "Protocol LIN Search Event" RSRTX_ATTR_PROTOCOL_LIN_SEARCH_EVENT ViInt32 gs rsrtx_rngProtocolSearchEvent
 "Sets the event or combination of events to be searched for. Depending on the selected event, further settings are required.\n\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:LIN:CONDition\n\nOption Checking:\nK3"
 "\n"

3 all "Protocol LIN Search Frame Setup" RSRTX_ATTR_PROTOCOL_LIN_SEARCH_FRAME_SETUP ViInt32 gs rsrtx_rngProtocolLINSearchFrameSetup
 "This function selects the frame type to be searched for.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:LIN:FRAMe\n\nOption Checking:\nK3"
 "\n"

3 all "Protocol LIN Search Condition ID" RSRTX_ATTR_PROTOCOL_LIN_SEARCH_CONDITION_ID ViInt32 gs rsrtx_rngProtocolCondition
 "Sets the operator to set a specific identifier or an identifier range.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:LIN:ICONdition\n\nOption Checking:\nK3"
 "\n"

3 all "Protocol LIN Search Condition Data" RSRTX_ATTR_PROTOCOL_LIN_SEARCH_CONDITION_DATA ViInt32 gs rsrtx_rngProtocolCondition
 "Sets the operator to set a specific identifier or an identifier range.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:LIN:DCONdition\n\nOption Checking:\nK3"
 "\n"

3 all "Protocol LIN Search ID Pattern" RSRTX_ATTR_PROTOCOL_LIN_SEARCH_ID_PATTERN ViString gs 
 "Defines the identifier pattern.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:LIN:IDENtifier\n\nOption Checking:\nK3"
 "\n"

3 all "Protocol LIN Search Data Length" RSRTX_ATTR_PROTOCOL_LIN_SEARCH_DATA_LENGTH ViInt32 gs 
 "Defines the length of the data pattern - the number of bytes in the pattern.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:LIN:DLENgth\n\nOption Checking:\nK3"
 "\n"

3 all "Protocol LIN Search Data Pattern" RSRTX_ATTR_PROTOCOL_LIN_SEARCH_DATA_PATTERN ViString gs 
 "Defines the data pattern.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:LIN:DATA\n\nOption Checking:\nK3"
 "\n"

3 all "Protocol LIN Search Error Checksum" RSRTX_ATTR_PROTOCOL_LIN_SEARCH_ERROR_CHECKSUM ViBoolean gs 
 "Selects the error type to be searched for.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:LIN:CHKSerror\n\nOption Checking:\nK3"
 "\n"

3 all "Protocol LIN Search Error Parity" RSRTX_ATTR_PROTOCOL_LIN_SEARCH_ERROR_PARITY ViBoolean gs 
 "Selects the error type to be searched for.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:LIN:IPERror\n\nOption Checking:\nK3"
 "\n"

3 all "Protocol LIN Search Error Sync" RSRTX_ATTR_PROTOCOL_LIN_SEARCH_ERROR_SYNC ViBoolean gs 
 "Selects the error type to be searched for.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:LIN:SYERror\n\nOption Checking:\nK3"
 "\n"

2 all "CAN"
 "Contains attributes for searching functions in CAN protocol.\n"

3 all "Protocol CAN Search Event" RSRTX_ATTR_PROTOCOL_CAN_SEARCH_EVENT ViInt32 gs rsrtx_rngProtocolSearchEvent
 "Sets the event or combination of events to be searched for. Depending on the selected event, further settings are required.\n\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:CAN:CONDition\n\nOption Checking:\nK3"
 "\n"

3 all "Protocol CAN Search Frame Setup" RSRTX_ATTR_PROTOCOL_CAN_SEARCH_FRAME_SETUP ViInt32 gs rsrtx_rngProtocolCANSearchFrameSetup
 "This function selects the frame type to be searched for.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:CAN:FRAMe\n\nOption Checking:\nK3"
 "\n"

3 all "Protocol CAN Search Frame Type" RSRTX_ATTR_PROTOCOL_CAN_SEARCH_FRAME_TYPE ViInt32 gs rsrtx_rngProtocolCANSearchFrameType
 "Specifies the frame type to be searched for.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:CAN:FTYPe\n\nOption Checking:\nK3"
 "\n"

3 all "Protocol CAN Search ID Type" RSRTX_ATTR_PROTOCOL_CAN_SEARCH_ID_TYPE ViInt32 gs rsrtx_rngProtocolCANIDType
 "Selects the format of data and remote frames.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:CAN:ITYPe\n\nOption Checking:\nK3"
 "\n"

3 all "Protocol CAN Search Condition ID" RSRTX_ATTR_PROTOCOL_CAN_SEARCH_CONDITION_ID ViInt32 gs rsrtx_rngProtocolCondition
 "Sets the operator to set a specific identifier or an identifier range.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:CAN:ICONdition\n\nOption Checking:\nK3"
 "\n"

3 all "Protocol CAN Search Condition Data" RSRTX_ATTR_PROTOCOL_CAN_SEARCH_CONDITION_DATA ViInt32 gs rsrtx_rngProtocolCondition
 "Sets the operator to set a specific identifier or an identifier range.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:CAN:DCONdition\n\nOption Checking:\nK3"
 "\n"

3 all "Protocol CAN Search ID Pattern" RSRTX_ATTR_PROTOCOL_CAN_SEARCH_ID_PATTERN ViString gs 
 "Defines the identifier pattern.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:CAN:IDENtifier\n\nOption Checking:\nK3"
 "\n"

3 all "Protocol CAN Search Data Length" RSRTX_ATTR_PROTOCOL_CAN_SEARCH_DATA_LENGTH ViInt32 gs 
 "Defines the length of the data pattern - the number of bytes in the pattern.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:CAN:DLENgth\n\nOption Checking:\nK3"
 "\n"

3 all "Protocol CAN Search Data Pattern" RSRTX_ATTR_PROTOCOL_CAN_SEARCH_DATA_PATTERN ViString gs 
 "Defines the data pattern.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:CAN:DATA\n\nOption Checking:\nK3"
 "\n"

3 all "Protocol CAN Search Error CRC" RSRTX_ATTR_PROTOCOL_CAN_SEARCH_ERROR_CRC ViBoolean gs 
 "Selects the error type to be searched for.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:CAN:CRCerror\n\nOption Checking:\nK3"
 "\n"

3 all "Protocol CAN Search Error Stuffing" RSRTX_ATTR_PROTOCOL_CAN_SEARCH_ERROR_STUFFING ViBoolean gs 
 "Selects the error type to be searched for.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:CAN:BITSerror\n\nOption Checking:\nK3"
 "\n"

3 all "Protocol CAN Search Error Form" RSRTX_ATTR_PROTOCOL_CAN_SEARCH_ERROR_FORM ViBoolean gs 
 "Selects the error type to be searched for.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:CAN:FORMerror\n\nOption Checking:\nK3"
 "\n"

3 all "Protocol CAN Search Error Ack" RSRTX_ATTR_PROTOCOL_CAN_SEARCH_ERROR_ACK ViBoolean gs 
 "Selects the error type to be searched for.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:CAN:ACKerror\n\nOption Checking:\nK3"
 "\n"

2 all "MILSTD"
 "The MIL-STD-1553 specification defines the characteristics of a serial data bus originally designed for use in the military avionics. Nowadays it is also used in spacecraft on-board data handling.\n"

3 all "MILSTD Search Condition" RSRTX_ATTR_MILSTD_SEARCH_CONDITION ViInt32 gs rsrtx_rngMILSTDSearchCondition
 "Selects the condition to be searched for.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:MILStd:CONDition\n\nOption Checking:\nNone"
 "\n"

3 all "MILSTD Search Word Start" RSRTX_ATTR_MILSTD_SEARCH_WORD_START ViInt32 gs rsrtx_rngMILSTDSearchWordStart
 "Selects a word start to be searched for.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:MILStd:WSTart\n\nOption Checking:\nNone"
 "\n"

3 all "MILSTD Search Error" RSRTX_ATTR_MILSTD_SEARCH_ERROR ViInt32 gs rsrtx_rngMILSTDSearchError
 "Selects the error type to be searched for.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:MILStd:ERRor\n\nOption Checking:\nNone"
 "\n"

3 all "MILSTD Search Transmission Type" RSRTX_ATTR_MILSTD_SEARCH_TRANSMISSION_TYPE ViInt32 gs rsrtx_rngMILSTDTransmissionType
 "Selects the transmission type to be searched for.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:MILStd:TTYPe\n\nOption Checking:\nNone"
 "\n"

3 all "Command"
 "Searches on a command word.\n"

4 all "MILSTD Search Command Data Direction" RSRTX_ATTR_MILSTD_SEARCH_COMMAND_DATA_DIRECTION ViInt32 gs rsrtx_rngMILSTDDirection
 "Selects the transmission mode to be searched for.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:MILStd:TRMode\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Search RT Address Condition" RSRTX_ATTR_MILSTD_SEARCH_RT_ADDRESS_CONDITION ViInt32 gs rsrtx_rngMILSTDCondition
 "For an RT address, searches for a comparison condition.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:MILStd:RTADdress:CONDition\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Search RT Address Minimum" RSRTX_ATTR_MILSTD_SEARCH_RT_ADDRESS_MINIMUM ViString gs 
 "For an RT address, searches for the minimum address.\n01X-string\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:MILStd:RTADdress:MINimum\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Search RT Address Maximum" RSRTX_ATTR_MILSTD_SEARCH_RT_ADDRESS_MAXIMUM ViString gs 
 "For an RT address, searches for the maximum address.\n01X-string\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:MILStd:RTADdress:MAXimum\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Search Sub Address Condition" RSRTX_ATTR_MILSTD_SEARCH_SUB_ADDRESS_CONDITION ViInt32 gs rsrtx_rngMILSTDCondition
 "For the sub address, sets the triggering condition for the comparison of the decoded value to the defined range.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:MILStd:SADDress:CONDition\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Search Sub Address Minimum" RSRTX_ATTR_MILSTD_SEARCH_SUB_ADDRESS_MINIMUM ViString gs 
 "For a subaddress, searches for the minimum address.\n01X-string\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:MILStd:SADDress:MINimum\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Search Sub Address Maximum" RSRTX_ATTR_MILSTD_SEARCH_SUB_ADDRESS_MAXIMUM ViString gs 
 "For a subaddress, searches for the maximum address.\n01X-string\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:MILStd:SADDress:MAXimum\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Search Sub Address" RSRTX_ATTR_MILSTD_SEARCH_SUB_ADDRESS ViInt32 gs rsrtx_rngMILSTDSubAddress
 "Searches for a mode code address.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:MILStd:SADDress:MCADdress\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Search Word Condition" RSRTX_ATTR_MILSTD_SEARCH_WORD_CONDITION ViInt32 gs rsrtx_rngMILSTDCondition
 "For a command word, triggers on a word comparison condition.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:MILStd:WCOunt:CONDition\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Search Word Minimum" RSRTX_ATTR_MILSTD_SEARCH_WORD_MINIMUM ViInt32 gs 
 "Searches for the minimum word count.\n01X-string\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:MILStd:WCOunt:MINimum\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Search Word Maximum" RSRTX_ATTR_MILSTD_SEARCH_WORD_MAXIMUM ViInt32 gs 
 "Searches for the maximum word count.\n01X-string\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:MILStd:WCOunt:MAXimum\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Search Command Mode Code" RSRTX_ATTR_MILSTD_SEARCH_COMMAND_MODE_CODE ViInt32 gs rsrtx_rngMILSTDCodeType
 "Searches for a mode code type.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:MILStd:MCODe\n\nOption Checking:\nNone"
 "\n"

3 all "Status"
 "Searches for a status word that is specified.\n"

4 all "MILSTD Search Received Bit Status" RSRTX_ATTR_MILSTD_SEARCH_RECEIVED_BIT_STATUS ViInt32 gs rsrtx_rngStatus
 "Searches for a broadcast received bit of a status word.\n01X-string\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:MILStd:STATus:BCReceived\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Search Busy Bit Status" RSRTX_ATTR_MILSTD_SEARCH_BUSY_BIT_STATUS ViInt32 gs rsrtx_rngStatus
 "Searches for a busy bit of a status word.\n01X-string\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:MILStd:STATus:BUSY\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Search Bus Control Bit Status" RSRTX_ATTR_MILSTD_SEARCH_BUS_CONTROL_BIT_STATUS ViInt32 gs rsrtx_rngStatus
 "Searches for a dynamic bus control accept bit of a status word.\n01X-string\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:MILStd:STATus:DBCaccept\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Search Instrumentation Bit Status" RSRTX_ATTR_MILSTD_SEARCH_INSTRUMENTATION_BIT_STATUS ViInt32 gs rsrtx_rngStatus
 "Searches for an instrument bit of a status word.\n01X-string\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:MILStd:STATus:INSTrument\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD SearchMessage Error Bit Status" RSRTX_ATTR_MILSTD_SEARCHMESSAGE_ERROR_BIT_STATUS ViInt32 gs rsrtx_rngStatus
 "Searches for a message error bit of a status word.\n01X-string\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:MILStd:STATus:MERRor\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Search Service Request Bit Status" RSRTX_ATTR_MILSTD_SEARCH_SERVICE_REQUEST_BIT_STATUS ViInt32 gs rsrtx_rngStatus
 "Searches for a service request bit of a status word.\n01X-string\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:MILStd:STATus:SREQuest\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Search Subsystem Bit Status" RSRTX_ATTR_MILSTD_SEARCH_SUBSYSTEM_BIT_STATUS ViInt32 gs rsrtx_rngStatus
 "Searches for a subsystem bit of a status word.\n01X-string\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:MILStd:STATus:SUBSystem\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Search Terminal Bit Status" RSRTX_ATTR_MILSTD_SEARCH_TERMINAL_BIT_STATUS ViInt32 gs rsrtx_rngStatus
 "Searches for a terminal bit of a status word.\n01X-string\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:MILStd:STATus:TERMinal\n\nOption Checking:\nNone"
 "\n"

3 all "Data"
 "Searches for a data, that is specified.\n"

4 all "MILSTD Search Data Condition" RSRTX_ATTR_MILSTD_SEARCH_DATA_CONDITION ViInt32 gs rsrtx_rngMILSTDCondition
 "For a data word, searches for a comparison condition.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:MILStd:DATA:CONDition\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Search Data Minimum" RSRTX_ATTR_MILSTD_SEARCH_DATA_MINIMUM ViString gs 
 "For a data word, searches for a minimum value.\n01X-string\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:MILStd:DATA:MINimum\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Search Data Maximum" RSRTX_ATTR_MILSTD_SEARCH_DATA_MAXIMUM ViString gs 
 "For a data word, searches for a maximum value.\n01X-string\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:MILStd:DATA:MAXimum\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Search Data Offset" RSRTX_ATTR_MILSTD_SEARCH_DATA_OFFSET ViInt32 gs 
 "For a data word, searches for a data offset.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:MILStd:DATA:OFFSet\n\nOption Checking:\nNone"
 "\n"

4 all "MILSTD Search Data Offset Words" RSRTX_ATTR_MILSTD_SEARCH_DATA_OFFSET_WORDS ViInt32 gs 
 "For a data word, searches for a number of words.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:MILStd:DATA:WORDs\n\nOption Checking:\nNone"
 "\n"

2 all "ARINC 429"
 "Configures ARINC 429 search settings.\n"

3 all "Protocol ARINC429 Search Type" RSRTX_ATTR_PROTOCOL_ARINC429_SEARCH_TYPE ViInt32 gs rsrtx_rngARINC429Type
 "Sets the event or combination of events to be searched for. Depending on the selected event, further settings are required.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:ARINc:CONDition\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol ARINC429 Search Word Type" RSRTX_ATTR_PROTOCOL_ARINC429_SEARCH_WORD_TYPE ViInt32 gs rsrtx_rngARINC429WordType
 "Selects the word type to be searched for.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:ARINc:WORD[:TYPE]\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol ARINC429 Search Error" RSRTX_ATTR_PROTOCOL_ARINC429_SEARCH_ERROR ViInt32 gs rsrtx_rngARINC429Error
 "Searches for an error condition.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:ARINc:ERRor\n\nOption Checking:\nNone"
 "\n"

3 all "Label Data"
 "Configures ARINC 429 search label+data settings.\n"

4 all "Protocol ARINC429 Search Label Pattern Condition" RSRTX_ATTR_PROTOCOL_ARINC429_SEARCH_LABEL_PATTERN_CONDITION ViInt32 gs rsrtx_rngProtocolARINC429Operator
 "Sets the comparison condition for label: If the pattern contains at least one X (don't care), you can trigger on values equal or not equal to the specified value. If the pattern contains only 0 and 1, you can also trigger on a range greater than or lower than the specified value.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:ARINc:LABel:CONDition\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol ARINC429 Search Label Pattern Min" RSRTX_ATTR_PROTOCOL_ARINC429_SEARCH_LABEL_PATTERN_MIN ViString gs 
 "Searches for a minimum value of the label.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:ARINc:LABel:MINimum\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol ARINC429 Search Label Pattern Max" RSRTX_ATTR_PROTOCOL_ARINC429_SEARCH_LABEL_PATTERN_MAX ViString gs 
 "Searches for a maximum value of the label if Label Pattern Condition is set to InRange or OutOfRange.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:ARINc:LABel:MAXimum\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol ARINC429 Search Data Pattern Condition" RSRTX_ATTR_PROTOCOL_ARINC429_SEARCH_DATA_PATTERN_CONDITION ViInt32 gs rsrtx_rngProtocolARINC429Operator
 "Sets the comparison condition for datal: If the pattern contains at least one X (don't care), you can trigger on values equal or not equal to the specified value. If the pattern contains only 0 and 1, you can also trigger on a range greater than or lower than the specified value.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:ARINc:DATA:CONDition\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol ARINC429 Search Data Pattern Min" RSRTX_ATTR_PROTOCOL_ARINC429_SEARCH_DATA_PATTERN_MIN ViString gs 
 "Searches for a minimum value of the data.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:ARINc:DATA:MINimum\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol ARINC429 Search Data Pattern Max" RSRTX_ATTR_PROTOCOL_ARINC429_SEARCH_DATA_PATTERN_MAX ViString gs 
 "Searches for a maximum value of the data  if Data Pattern Condition is set to InRange or OutOfRange.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:ARINc:DATA:MAX\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol ARINC429 Search Data Offset" RSRTX_ATTR_PROTOCOL_ARINC429_SEARCH_DATA_OFFSET ViInt32 gs 
 "Searches for specified data offset.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:ARINc:DATA:OFFSet\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol ARINC429 Search Data Size" RSRTX_ATTR_PROTOCOL_ARINC429_SEARCH_DATA_SIZE ViInt32 gs 
 "Searches for specified data size.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:ARINc:DATA:SIZE\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol ARINC429 Search Data Format" RSRTX_ATTR_PROTOCOL_ARINC429_SEARCH_DATA_FORMAT ViInt32 gs rsrtx_rngProtocolARINC429DataFormat
 "Searches for a data format.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:ARINc:FORMat\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol ARINC429 Search SDI" RSRTX_ATTR_PROTOCOL_ARINC429_SEARCH_SDI ViInt32 gs rsrtx_rngARINCSsmSdi
 "Searches for the specified source/destination identifier (SDI) bits.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:ARINc:SDI\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol ARINC429 Search SSM" RSRTX_ATTR_PROTOCOL_ARINC429_SEARCH_SSM ViInt32 gs rsrtx_rngARINCSsmSdi
 "Searches for specified sign/status matrix (SSM) bits.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSEARch:PROTocol:ARINc:SSM\n\nOption Checking:\nNone"
 "\n"

1 all "Protocols"
 "Analyze serial protocols\n"

2 all "Protocol Enabled" RSRTX_ATTR_PROTOCOL_ENABLED ViBoolean gs 
 "Switches the protocol display on or off.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:STATe\n\nOption Checking:\nNone"
 "\n"

2 all "Protocol Type" RSRTX_ATTR_PROTOCOL_TYPE ViInt32 gs rsrtx_rngProtocolType
 "Defines the bus or interface type for analysis. For most types, a special option to the instrument is required.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:TYPE\n\nOption Checking:\nNone"
 "\n"

2 all "Bus Save Decoded Data" RSRTX_ATTR_BUS_SAVE_DECODED_DATA ViString s 
 "Saves the decoded data (frame table) to the specified CSV file (comma-separated list).\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:LIST:SAVE\n\nOption Checking:\nNone"
 "\n"

2 all "Protocol Content" RSRTX_ATTR_PROTOCOL_CONTENT ViString g 
 "Returns the contents of the frame table in block data format.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:LIST?\n\nOption Checking:\nNone"
 "\n"

2 all "Display"
 "Display settings.\n"

3 all "Protocol Display Format" RSRTX_ATTR_PROTOCOL_DISPLAY_FORMAT ViInt32 gs rsrtx_rngProtocolFormat
 "Sets the decoding format for the display on the screen.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:FORMat\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol Display Height" RSRTX_ATTR_PROTOCOL_DISPLAY_HEIGHT ViInt32 gs rsrtx_rngProtocolHeight
 "Sets the height of the decoded bus signal on the sreen.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:DSIZe\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol Display Lines" RSRTX_ATTR_PROTOCOL_DISPLAY_LINES ViBoolean gs 
 "Displays the individual bit lines above the decoded bus line.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:DSIGnals\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol Display Vertical" RSRTX_ATTR_PROTOCOL_DISPLAY_VERTICAL ViReal64 gs 
 "Sets the vertical position of the decoded bus signal in divisions on the sreen.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:POSition\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol Display Results" RSRTX_ATTR_PROTOCOL_DISPLAY_RESULTS ViBoolean gs 
 "Displays or hides the table of decode results.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:RESult\n\nOption Checking:\nNone"
 "\n"

2 all "I2C"
 "I2C (Inter-Integrated circuit bus) - decoding requires option R&S RTO-K1\n"

3 all "Protocol I2C Clock Source" RSRTX_ATTR_PROTOCOL_I2C_CLOCK_SOURCE ViInt32 gs rsrtx_rngSource
 "Sets the waveform of the clock line.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2C:CLOCk:SOURce\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol I2C Data Source" RSRTX_ATTR_PROTOCOL_I2C_DATA_SOURCE ViInt32 gs rsrtx_rngSource
 "Sets the waveform of the data line.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2C:DATA:SOURce\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol I2C Frame Count" RSRTX_ATTR_PROTOCOL_I2C_FRAME_COUNT ViInt32 g 
 "Queries the number of decoded frames.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2C:FCOunt?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol I2C Selected Frame" RSRTX_ATTR_PROTOCOL_I2C_SELECTED_FRAME ViInt32 gs 
 "Sets selector repeated capability Frame.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol I2C Frame Data" RSRTX_ATTR_PROTOCOL_I2C_FRAME_DATA ViString g 
 "Returns the data words of the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2C:FRAMe<n>:DATA?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol I2C Frame Status" RSRTX_ATTR_PROTOCOL_I2C_FRAME_STATUS ViInt32 g rsrtx_rngProtocolI2CFrameState
 "Returns the overall state of the frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2C:FRAMe<n>:STATus?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol I2C Frame Start" RSRTX_ATTR_PROTOCOL_I2C_FRAME_START ViReal64 g 
 "Returns the start time of the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2C:FRAMe<n>:STARt?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol I2C Frame End" RSRTX_ATTR_PROTOCOL_I2C_FRAME_END ViReal64 g 
 "Returns the end time of the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2C:FRAMe<n>:STOP?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol I2C Frame Transfer Direction" RSRTX_ATTR_PROTOCOL_I2C_FRAME_TRANSFER_DIRECTION ViInt32 g rsrtx_rngI2CFrameTransferDirection
 "Returns the transfer direction - read or write access from master to slave.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2C:FRAMe<n>:ACCess?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol I2C Frame Address Acknowledge" RSRTX_ATTR_PROTOCOL_I2C_FRAME_ADDRESS_ACKNOWLEDGE ViInt32 g rsrtx_rngProtocolAckBit
 "Returns the address acknowledge bit value for the indicated frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2C:FRAMe<n>:AACCess?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol I2C Frame Address Enabled" RSRTX_ATTR_PROTOCOL_I2C_FRAME_ADDRESS_ENABLED ViBoolean g 
 "Returns the state of the address.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2C:FRAMe<n>:ACOMplete?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol I2C Frame Address Start Ack Bit" RSRTX_ATTR_PROTOCOL_I2C_FRAME_ADDRESS_START_ACK_BIT ViReal64 g 
 "Returns the start time of the address acknowledge bit.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2C:FRAMe<n>:ADBStart?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol I2C Frame Address" RSRTX_ATTR_PROTOCOL_I2C_FRAME_ADDRESS ViInt32 g 
 "Returns the decimal address value of the indicated frame including the R/W bit.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2C:FRAMe<n>:ADDRess?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol I2C Frame Address Without Bit" RSRTX_ATTR_PROTOCOL_I2C_FRAME_ADDRESS_WITHOUT_BIT ViInt32 g 
 "Returns the decimal address value of the indicated frame without R/W bit.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2C:FRAMe<n>:ADEVice?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol I2C Frame Address Length" RSRTX_ATTR_PROTOCOL_I2C_FRAME_ADDRESS_LENGTH ViInt32 g rsrtx_rngFrameAddressLength
 "Returns the address length.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2C:FRAMe<n>:AMODe?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol I2C Frame Address Start" RSRTX_ATTR_PROTOCOL_I2C_FRAME_ADDRESS_START ViReal64 g 
 "Returns the start time of the address for the indicated frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2C:FRAMe<n>:ASTart?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol I2C Selected Byte" RSRTX_ATTR_PROTOCOL_I2C_SELECTED_BYTE ViInt32 gs 
 "Sets selector repeated capability Byte.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol I2C Byte Count" RSRTX_ATTR_PROTOCOL_I2C_BYTE_COUNT ViInt32 g 
 "Returns the number of data bytes in the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2C:FRAMe<n>:BCOunt?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol I2C Byte Ack Bit" RSRTX_ATTR_PROTOCOL_I2C_BYTE_ACK_BIT ViInt32 g rsrtx_rngProtocolAckBit
 "Returns the acknowledge bit value of the specified data byte.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2C:FRAMe<n>:BYTE<o>:ACCess?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol I2C Byte Ack Bit Start" RSRTX_ATTR_PROTOCOL_I2C_BYTE_ACK_BIT_START ViReal64 g 
 "Returns the start time of the acknowledge bit of the specified byte.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2C:FRAMe<n>:BYTE<o>:ACKStart?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol I2C Byte Enabled" RSRTX_ATTR_PROTOCOL_I2C_BYTE_ENABLED ViBoolean g 
 "Returns the state of the byte.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2C:FRAMe<n>:BYTE<o>:COMPlete?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol I2C Byte Start" RSRTX_ATTR_PROTOCOL_I2C_BYTE_START ViReal64 g 
 "Returns the start time of the specified data byte.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2C:FRAMe<n>:BYTE<o>:STARt?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol I2C Byte Value" RSRTX_ATTR_PROTOCOL_I2C_BYTE_VALUE ViInt32 g 
 "Returns the decimal value of the specified byte.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2C:FRAMe<n>:BYTE<o>:VALue?\n\nOption Checking:\nNone"
 "\n"

2 all "SPI"
 "SPI (Serial Peripheral Interface) - decoding requires option R&S RTO-K1\n"

3 all "Protocol SPI Clock Source" RSRTX_ATTR_PROTOCOL_SPI_CLOCK_SOURCE ViInt32 gs rsrtx_rngSource
 "Sets the input channel for the clock lines.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:SPI:CLOCk:SOURce\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol SPI Data Source" RSRTX_ATTR_PROTOCOL_SPI_DATA_SOURCE ViInt32 gs rsrtx_rngMOSISource
 "Sets the input channel for the data lines.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:SPI:DATA:SOURce\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol SPI MISO Source" RSRTX_ATTR_PROTOCOL_SPI_MISO_SOURCE ViInt32 gs rsrtx_rngMISOSource
 "Selects the input channel of the optional MISO line.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:SPI:MISO:SOURce\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol SPI Clock Polarity" RSRTX_ATTR_PROTOCOL_SPI_CLOCK_POLARITY ViInt32 gs rsrtx_rngProtocolSPIPolarity
 "Selects whether transmitted signal is high active (high = 1) or low active (low= 1).\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:SPI:CLOCk:POLarity\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol SPI CS Polarity" RSRTX_ATTR_PROTOCOL_SPI_CS_POLARITY ViInt32 gs rsrtx_rngProtocolSPIPolarity
 "Selects wether the chip select signal is high active (high = 1) or low active (low = 1).\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:SPI:CS:POLarity\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol SPI CS Source" RSRTX_ATTR_PROTOCOL_SPI_CS_SOURCE ViInt32 gs rsrtx_rngSPIChipSelectSource
 "Selects the input channel of the chip select line.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:SPI:CS:SOURce\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol SPI Data Polarity" RSRTX_ATTR_PROTOCOL_SPI_DATA_POLARITY ViInt32 gs rsrtx_rngProtocolSPIPolarity
 "Selects whether transmitted signal is high active (high = 1) or low active (low= 1).\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:SPI:DATA:POLarity\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol SPI Bit Order" RSRTX_ATTR_PROTOCOL_SPI_BIT_ORDER ViInt32 gs rsrtx_rngProtocolSPIBitOrder
 "Defines if the data of the messages starts with msb (most significant bit) or lsb (least significant bit).\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:SPI:BORDer\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol SPI Word Length" RSRTX_ATTR_PROTOCOL_SPI_WORD_LENGTH ViInt32 gs 
 "Sets the number of bits in a message.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:SPI:SSIZe\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol SPI MOSI Polarity" RSRTX_ATTR_PROTOCOL_SPI_MOSI_POLARITY ViInt32 gs rsrtx_rngProtocolSPIMISOPolarity
 "Selects if transmitted data is high active (high = 1) or low active (low = 1) on the MOSI/MISO line.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:SPI:MOSI:POLarity\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol SPI MISO Polarity" RSRTX_ATTR_PROTOCOL_SPI_MISO_POLARITY ViInt32 gs rsrtx_rngProtocolSPIMISOPolarity
 "Selects whether transmitted data is high active (high = 1) or low active (low = 1) on the MISO line.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:SPI:MISO:POLarity\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol SPI Frame Count" RSRTX_ATTR_PROTOCOL_SPI_FRAME_COUNT ViInt32 g 
 "Queries the number of decoded frames.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:SPI:FCOunt?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol SPI Selected Frame" RSRTX_ATTR_PROTOCOL_SPI_SELECTED_FRAME ViInt32 gs 
 "Sets selector repeated capability Frame.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol SPI Frame Status" RSRTX_ATTR_PROTOCOL_SPI_FRAME_STATUS ViInt32 g rsrtx_rngProtocolSPIFrameState
 "Returns the overall state of the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:SPI:FRAMe<n>:STATus?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol SPI Frame Start" RSRTX_ATTR_PROTOCOL_SPI_FRAME_START ViReal64 g 
 "Returns the start time of the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:SPI:FRAMe<n>:STARt?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol SPI Frame End" RSRTX_ATTR_PROTOCOL_SPI_FRAME_END ViReal64 g 
 "Returns the end time of the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:SPI:FRAMe<n>:STOP?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol SPI Frame Data MOSI" RSRTX_ATTR_PROTOCOL_SPI_FRAME_DATA_MOSI ViString g 
 "Returns the data words of the specified frame of the MOSI line.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:SPI:FRAMe<n>:DATA:MOSI?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol SPI Frame Data MISO" RSRTX_ATTR_PROTOCOL_SPI_FRAME_DATA_MISO ViString g 
 "Returns the data words of the specified frame of the MISO line.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:SPI:FRAMe<n>:DATA:MISO?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol SPI Word Count" RSRTX_ATTR_PROTOCOL_SPI_WORD_COUNT ViInt32 g 
 "Returns the number of words in the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:SPI:FRAMe<n>:WCOunt?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol SPI Selected Word" RSRTX_ATTR_PROTOCOL_SPI_SELECTED_WORD ViInt32 gs 
 "Sets selector repeated capability Word.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol SPI Word Start" RSRTX_ATTR_PROTOCOL_SPI_WORD_START ViReal64 g 
 "Returns the start time of the specified data word.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:SPI:FRAMe<n>:WORD<o>:STARt?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol SPI Word End" RSRTX_ATTR_PROTOCOL_SPI_WORD_END ViReal64 g 
 "Returns the end time of the specified data word.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:SPI:FRAMe<n>:WORD<o>:STOP?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol SPI Word MOSI" RSRTX_ATTR_PROTOCOL_SPI_WORD_MOSI ViInt32 g 
 "Returns the data value of the specified word on the MOSI line.\nUse this command if only one line is defined.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:SPI:FRAMe<n>:WORD<o>:MOSI?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol SPI Word MISO" RSRTX_ATTR_PROTOCOL_SPI_WORD_MISO ViInt32 g 
 "Returns the data value of the specified word on the MISO line.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:SPI:FRAMe<n>:WORD<o>:MISO?\n\nOption Checking:\nNone"
 "\n"

3 all "SSPI"
 "SSPI Protocol settings.\n"

4 all "Protocol SSPI Clock Source" RSRTX_ATTR_PROTOCOL_SSPI_CLOCK_SOURCE ViInt32 gs rsrtx_rngSource
 "Sets the input channel for the clock lines.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:SSPI:CLOCk:SOURce\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol SSPI Data Source" RSRTX_ATTR_PROTOCOL_SSPI_DATA_SOURCE ViInt32 gs rsrtx_rngMOSISource
 "Sets the input channel for the clock lines.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:SSPI:DATA:SOURce\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol SSPI MISO Source" RSRTX_ATTR_PROTOCOL_SSPI_MISO_SOURCE ViInt32 gs rsrtx_rngMISOSource
 "Selects the input channel of the optional MISO line.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:SSPI:MISO:SOURce\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol SSPI Clock Polarity" RSRTX_ATTR_PROTOCOL_SSPI_CLOCK_POLARITY ViInt32 gs rsrtx_rngPolarity
 "Selects whether transmitted data is high active (high = 1, Positive) or low active (low = 1, Negative).\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:SSPI:CLOCk:POLarity\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol SSPI Data Polarity" RSRTX_ATTR_PROTOCOL_SSPI_DATA_POLARITY ViInt32 gs rsrtx_rngPolarity
 "Selects whether transmitted data is high active (high = 1, Positive) or low active (low = 1, Negative).\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:SSPI:DATA:POLarity\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol SSPI Interframe Time" RSRTX_ATTR_PROTOCOL_SSPI_INTERFRAME_TIME ViReal64 gs 
 "Within the idle time the data and clock lines are low. A new frame begins when the idle time has expired and the clock line has been inactive during that time. If the time interval between the data words is shorter than the idle time, the words are part of the same frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:SSPI:BITime\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol SSPI Bit Order" RSRTX_ATTR_PROTOCOL_SSPI_BIT_ORDER ViInt32 gs rsrtx_rngProtocolSPIBitOrder
 "Defines if the data of the messages starts with MSB (most significant bit) or LSB (least significant bit).\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:SSPI:BORDer\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol SSPI Word Length" RSRTX_ATTR_PROTOCOL_SSPI_WORD_LENGTH ViInt32 gs 
 "Sets the word length, the number of bits in a message.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:SSPI:SSIZe\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol SSPI MOSI Polarity" RSRTX_ATTR_PROTOCOL_SSPI_MOSI_POLARITY ViInt32 gs rsrtx_rngProtocolSPIMISOPolarity
 "Selects if transmitted data is high active (high = 1) or low active (low = 1) on the MOSI/MISO line.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:SSPI:MOSI:POLarity\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol SSPI MISO Polarity" RSRTX_ATTR_PROTOCOL_SSPI_MISO_POLARITY ViInt32 gs rsrtx_rngProtocolSPIMISOPolarity
 "Selects whether transmitted data is high active (high = 1) or low active (low = 1) on the MISO line.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:SSPI:MISO:POLarity\n\nOption Checking:\nNone"
 "\n"

2 all "UART"
 "UART/RS232 (EIA-232 serial interface) - decoding requires option K2\n"

3 all "Protocol UART Source" RSRTX_ATTR_PROTOCOL_UART_SOURCE ViInt32 gs rsrtx_rngUARTSource
 "Selects the input channel of the UART signal.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:UART:DATA:SOURce\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol UART RX Source Line" RSRTX_ATTR_PROTOCOL_UART_RX_SOURCE_LINE ViInt32 gs rsrtx_rngUARTSource
 "Selects the input channel of the UART signal.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:UART:RX:SOURce\n\nOption Checking:\nK2"
 "\n"

3 all "Protocol UART TX Source Line" RSRTX_ATTR_PROTOCOL_UART_TX_SOURCE_LINE ViInt32 gs rsrtx_rngUARTTxSource
 "Selects the input channel of the UART signal.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:UART:TX:SOURce\n\nOption Checking:\nK2"
 "\n"

3 all "Protocol UART Polarity" RSRTX_ATTR_PROTOCOL_UART_POLARITY ViInt32 gs rsrtx_rngPolarity
 "Selects whether transmitted data is high active (high = 1, Positive) or low active (low = 1, Negative). Alternative Command for RSRTX_ATTR_PROTOCOL_UART_IDLE_STATE_POLARITY.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:UART:DATA:POLarity\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol UART Idle State Polarity" RSRTX_ATTR_PROTOCOL_UART_IDLE_STATE_POLARITY ViInt32 gs RsRtx_rngIdleStatePolarity
 "Defines the logic levels of the bus. The idle state corresponds to a logic 1, and the start bit to a logic 0.\nAlternative command for RSRTX_ATTR_PROTOCOL_UART_POLARITY\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:UART:POLarity\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol UART Interframe Time" RSRTX_ATTR_PROTOCOL_UART_INTERFRAME_TIME ViReal64 gs 
 "Sets the minimal time between two data frames (packets), that is, between the last stop bit and the start bit of the next frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:UART:BITime\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol UART Word Length" RSRTX_ATTR_PROTOCOL_UART_WORD_LENGTH ViInt32 gs 
 "Sets the number of data bits in a message.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:UART:SSIZe\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol UART Bit Rate" RSRTX_ATTR_PROTOCOL_UART_BIT_RATE ViReal64 gs 
 "Sets the number of transmitted bits per second.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:UART:BAUDrate\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol UART Parity" RSRTX_ATTR_PROTOCOL_UART_PARITY ViInt32 gs rsrtx_rngProtocolUARTParity
 "Defines the optional parity bit that is used for error detection.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:UART:PARity\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol UART Stop Bits" RSRTX_ATTR_PROTOCOL_UART_STOP_BITS ViInt32 gs rsrtx_rngProtocolUARTStopBits
 "Sets the stop bits.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:UART:SBIT\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol UART Frame Count" RSRTX_ATTR_PROTOCOL_UART_FRAME_COUNT ViInt32 g 
 "Return the number of decoded frames on the data line.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:UART:FCOunt?\n\nOption Checking:\nK2"
 "\n"

3 all "Protocol UART RX Frame Count" RSRTX_ATTR_PROTOCOL_UART_RX_FRAME_COUNT ViInt32 g 
 "Queries the number of decoded frames on the RX lines, respectivley.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:UART:RX:FCOunt?\n\nOption Checking:\nK2"
 "\n"

3 all "Protocol UART TX Frame Count" RSRTX_ATTR_PROTOCOL_UART_TX_FRAME_COUNT ViInt32 g 
 "Queries the number of decoded frames on the TX lines, respectivley.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:UART:TX:FCOunt?\n\nOption Checking:\nK2"
 "\n"

3 all "Protocol UART Selected Frame" RSRTX_ATTR_PROTOCOL_UART_SELECTED_FRAME ViInt32 gs 
 "Sets selector repeated capability Frame.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol UART Frame State" RSRTX_ATTR_PROTOCOL_UART_FRAME_STATE ViInt32 g RsRtx_rngUARTFrameState
 "Returns the status of the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:UART:FRAMe<n>:STATe?\n\nOption Checking:\nK2"
 "\n"

3 all "Protocol UART Rx Frame State" RSRTX_ATTR_PROTOCOL_UART_RX_FRAME_STATE ViInt32 g RsRtx_rngUARTFrameState
 "Returns the status of the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:UART:RX:FRAMe<n>:STATe?\n\nOption Checking:\nK2"
 "\n"

3 all "Protocol UART Tx Frame State" RSRTX_ATTR_PROTOCOL_UART_TX_FRAME_STATE ViInt32 g RsRtx_rngUARTFrameState
 "Returns the status of the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:UART:TX:FRAMe<n>:STATe?\n\nOption Checking:\nK2"
 "\n"

3 all "Protocol UART Frame Start" RSRTX_ATTR_PROTOCOL_UART_FRAME_START ViReal64 g 
 "Return the start time of the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:UART:FRAMe<n>:STARt?\n\nOption Checking:\nK2"
 "\n"

3 all "Protocol UART Rx Frame Start" RSRTX_ATTR_PROTOCOL_UART_RX_FRAME_START ViReal64 g 
 "Return the start time of the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:UART:RX:FRAMe<n>:STARt?\n\nOption Checking:\nK2"
 "\n"

3 all "Protocol UART Tx Frame Start" RSRTX_ATTR_PROTOCOL_UART_TX_FRAME_START ViReal64 g 
 "Return the start time of the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:UART:TX:FRAMe<n>:STARt?\n\nOption Checking:\nK2"
 "\n"

3 all "Protocol UART Frame End" RSRTX_ATTR_PROTOCOL_UART_FRAME_END ViReal64 g 
 "Return the end time of the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:UART:FRAMe<n>:STOP?\n\nOption Checking:\nK2"
 "\n"

3 all "Protocol UART Rx Frame End" RSRTX_ATTR_PROTOCOL_UART_RX_FRAME_END ViReal64 g 
 "Return the end time of the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:UART:RX:FRAMe<n>:STOP?\n\nOption Checking:\nK2"
 "\n"

3 all "Protocol UART Tx Frame End" RSRTX_ATTR_PROTOCOL_UART_TX_FRAME_END ViReal64 g 
 "Return the end time of the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:UART:TX:FRAMe<n>:STOP?\n\nOption Checking:\nK2"
 "\n"

3 all "Protocol UART Word Count" RSRTX_ATTR_PROTOCOL_UART_WORD_COUNT ViInt32 g 
 "Returns the number of words in the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:UART:FRAMe<n>:WCOunt?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol UART Rx Word Count" RSRTX_ATTR_PROTOCOL_UART_RX_WORD_COUNT ViInt32 g 
 "Returns the number of words in the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:UART:RX:FRAMe<n>:WCOunt?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol UART Tx Word Count" RSRTX_ATTR_PROTOCOL_UART_TX_WORD_COUNT ViInt32 g 
 "Returns the number of words in the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:UART:TX:FRAMe<n>:WCOunt?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol UART Selected Word" RSRTX_ATTR_PROTOCOL_UART_SELECTED_WORD ViInt32 gs 
 "Sets selector repeated capability Word.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol UART Word Value" RSRTX_ATTR_PROTOCOL_UART_WORD_VALUE ViInt32 g 
 "Returns the value of words in the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:UART:FRAMe<n>:WORD<o>:VALue?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol UART Rx Word Value" RSRTX_ATTR_PROTOCOL_UART_RX_WORD_VALUE ViInt32 g 
 "Returns the value of words in the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:UART:RX:FRAMe<n>:WORD<o>:VALue?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol UART Tx Word Value" RSRTX_ATTR_PROTOCOL_UART_TX_WORD_VALUE ViInt32 g 
 "Returns the value of words in the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:UART:TX:FRAMe<n>:WORD<o>:VALue?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol UART Word Start" RSRTX_ATTR_PROTOCOL_UART_WORD_START ViReal64 g 
 "Returns the start time of words in the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:UART:FRAMe<n>:WORD<o>:STARt?\n\nOption Checking:\nK2"
 "\n"

3 all "Protocol UART Rx Word Start" RSRTX_ATTR_PROTOCOL_UART_RX_WORD_START ViReal64 g 
 "Returns the start time of words in the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:UART:RX:FRAMe<n>:WORD<o>:STARt?\n\nOption Checking:\nK2"
 "\n"

3 all "Protocol UART Tx Word Start" RSRTX_ATTR_PROTOCOL_UART_TX_WORD_START ViReal64 g 
 "Returns the start time of words in the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:UART:TX:FRAMe<n>:WORD<o>:STARt?\n\nOption Checking:\nK2"
 "\n"

3 all "Protocol UART Word End" RSRTX_ATTR_PROTOCOL_UART_WORD_END ViReal64 g 
 "Returns the end time of words in the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:UART:FRAMe<n>:WORD<o>:STOP?\n\nOption Checking:\nK2"
 "\n"

3 all "Protocol UART Rx Word End" RSRTX_ATTR_PROTOCOL_UART_RX_WORD_END ViReal64 g 
 "Returns the end time of words in the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:UART:RX:FRAMe<n>:WORD<o>:STOP?\n\nOption Checking:\nK2"
 "\n"

3 all "Protocol UART Tx Word End" RSRTX_ATTR_PROTOCOL_UART_TX_WORD_END ViReal64 g 
 "Returns the end time of words in the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:UART:TX:FRAMe<n>:WORD<o>:STOP?\n\nOption Checking:\nK2"
 "\n"

3 all "Protocol UART Word Enabled" RSRTX_ATTR_PROTOCOL_UART_WORD_ENABLED ViInt32 g rsrtx_rngUARTWordEnabled
 "Returns the state of words in the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:UART:FRAMe<n>:WORD<o>:STATe?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol UART Rx Word Enabled" RSRTX_ATTR_PROTOCOL_UART_RX_WORD_ENABLED ViInt32 g rsrtx_rngUARTWordEnabled
 "Returns the state of words in the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:UART:RX:FRAMe<n>:WORD<o>:STATe?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol UART Tx Word Enabled" RSRTX_ATTR_PROTOCOL_UART_TX_WORD_ENABLED ViInt32 g rsrtx_rngUARTWordEnabled
 "Returns the state of words in the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:UART:TX:FRAMe<n>:WORD<o>:STATe?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol UART Word Source" RSRTX_ATTR_PROTOCOL_UART_WORD_SOURCE ViInt32 g RsRtx_rngUARTFrameSource
 "Returns the value of word source in the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:UART:FRAMe<n>:WORD<o>:SOURce?\n\nOption Checking:\nNone"
 "\n"

2 all "LIN"
 "This class contains attributes that configure the LIN (Local Interconnect Network)\n\nAttributes in this class requires option K3.\n"

3 all "Protocol LIN Source" RSRTX_ATTR_PROTOCOL_LIN_SOURCE ViInt32 gs rsrtx_rngSource
 "This attribute configures source waveform of the data line.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:LIN:DATA:SOURce\n\nOption Checking:\nK3"
 "\n"

3 all "Protocol LIN Polarity" RSRTX_ATTR_PROTOCOL_LIN_POLARITY ViInt32 gs rsrtx_rngProtocolLINPolarity
 "Selects whether transmitted signal is high active (high = 1) or low active (low= 1).\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:LIN:POLarity\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol LIN Standard" RSRTX_ATTR_PROTOCOL_LIN_STANDARD ViInt32 gs rsrtx_rngProtocolLINStandard
 "Selects the version of the LIN standard that is used in the DUT. The setting mainly defines the checksum version used during decoding.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:LIN:STANdard\n\nOption Checking:\nK3"
 "\n"

3 all "Protocol LIN Bit Rate" RSRTX_ATTR_PROTOCOL_LIN_BIT_RATE ViReal64 gs 
 "Sets the number of transmitted bits per second.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:LIN:BITRate\n\nOption Checking:\nK3"
 "\n"

3 all "Protocol LIN Frame Count" RSRTX_ATTR_PROTOCOL_LIN_FRAME_COUNT ViInt32 g 
 "Queries the number of decoded frames.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:LIN:FCOunt?\n\nOption Checking:\nK3"
 "\n"

3 all "Protocol LIN Selected Frame" RSRTX_ATTR_PROTOCOL_LIN_SELECTED_FRAME ViInt32 gs 
 "Sets selector repeated capability Frame.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol LIN Frame Data" RSRTX_ATTR_PROTOCOL_LIN_FRAME_DATA ViString g 
 "Returns the data bytes of the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:LIN:FRAMe<n>:DATA?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol LIN Frame Status" RSRTX_ATTR_PROTOCOL_LIN_FRAME_STATUS ViInt32 g rsrtx_rngLINFrameStatus
 "Returns the status of the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:LIN:FRAMe<n>:STATus?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol LIN Frame Start" RSRTX_ATTR_PROTOCOL_LIN_FRAME_START ViReal64 g 
 "Returns the start time of the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:LIN:FRAMe<n>:STARt?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol LIN Frame End" RSRTX_ATTR_PROTOCOL_LIN_FRAME_END ViReal64 g 
 "Returns the end time of the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:LIN:FRAMe<n>:STOP?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol LIN Frame Checksum Enabled" RSRTX_ATTR_PROTOCOL_LIN_FRAME_CHECKSUM_ENABLED ViInt32 g rsrtx_rngLINChecksum
 "Returns the checksum state of the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:LIN:FRAMe<n>:CSSTate?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol LIN Frame Checksum Value" RSRTX_ATTR_PROTOCOL_LIN_FRAME_CHECKSUM_VALUE ViInt32 g 
 "Returns the checksum value.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:LIN:FRAMe<n>:CSValue?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol LIN Frame Parity Enabled" RSRTX_ATTR_PROTOCOL_LIN_FRAME_PARITY_ENABLED ViInt32 g rsrtx_rngLINParity
 "Returns the identifier state of the selected frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:LIN:FRAMe<n>:IDSTate?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol LIN Frame Parity Value" RSRTX_ATTR_PROTOCOL_LIN_FRAME_PARITY_VALUE ViInt32 g 
 "Returns the parity value.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:LIN:FRAMe<n>:IDPValue?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol LIN Frame ID Value" RSRTX_ATTR_PROTOCOL_LIN_FRAME_ID_VALUE ViInt32 g 
 "Returns the identifier value (address).\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:LIN:FRAMe<n>:IDValue?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol LIN Frame Sync Enabled" RSRTX_ATTR_PROTOCOL_LIN_FRAME_SYNC_ENABLED ViInt32 g rsrtx_rngLINChecksum
 "Returns the state of the sync field for the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:LIN:FRAMe<n>:SYSTate?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol LIN Frame Sync Value" RSRTX_ATTR_PROTOCOL_LIN_FRAME_SYNC_VALUE ViInt32 g 
 "Returns the value of the synchronization field.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:LIN:FRAMe<n>:SYValue?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol LIN Frame Version" RSRTX_ATTR_PROTOCOL_LIN_FRAME_VERSION ViInt32 g rsrtx_rngLINFrameVersion
 "Returns the version of the LIN standard for the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:LIN:FRAMe<n>:VERSion?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol LIN Byte Count" RSRTX_ATTR_PROTOCOL_LIN_BYTE_COUNT ViInt32 g 
 "Returns the number of data bytes in the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:LIN:FRAMe<n>:BCOunt?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol LIN Selected Byte" RSRTX_ATTR_PROTOCOL_LIN_SELECTED_BYTE ViInt32 gs 
 "Sets selector repeated capability Byte.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol LIN Byte Enabled" RSRTX_ATTR_PROTOCOL_LIN_BYTE_ENABLED ViInt32 g rsrtx_rngLINByteEnabled
 "Returns the state of the specified data byte.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:LIN:FRAMe<n>:BYTE<o>:STATe?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol LIN Byte Value" RSRTX_ATTR_PROTOCOL_LIN_BYTE_VALUE ViInt32 g 
 "Returns the decimal value of the specified byte.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:LIN:FRAMe<n>:BYTE<o>:VALue?\n\nOption Checking:\nNone"
 "\n"

2 all "CAN"
 "This class contains attributes that configure the CAN (Controller Area Network)\n\nAttributes in this class requires option K3.\n"

3 all "Protocol CAN Line Type" RSRTX_ATTR_PROTOCOL_CAN_LINE_TYPE ViInt32 gs rsrtx_rngProtocolCANLineType
 "Configures input channel of the CAN line.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:CAN:TYPE\n\nOption Checking:\nK3"
 "\n"

3 all "Protocol CAN Source" RSRTX_ATTR_PROTOCOL_CAN_SOURCE ViInt32 gs rsrtx_rngSource
 "This attribute configures source waveform of the data line.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:CAN:DATA:SOURce\n\nOption Checking:\nK3"
 "\n"

3 all "Protocol CAN Bit Rate" RSRTX_ATTR_PROTOCOL_CAN_BIT_RATE ViReal64 gs 
 "Sets the number of transmitted bits per second.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:CAN:BITRate\n\nOption Checking:\nK3"
 "\n"

3 all "Protocol CAN Sample Point" RSRTX_ATTR_PROTOCOL_CAN_SAMPLE_POINT ViReal64 gs 
 "Sets the position of the sample point within the bit in percent of the nominal bit time.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:CAN:SAMPlepoint\n\nOption Checking:\nK3"
 "\n"

3 all "Protocol CAN Frame Count" RSRTX_ATTR_PROTOCOL_CAN_FRAME_COUNT ViInt32 g 
 "Queries the number of decoded frames.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:CAN:FCOunt?\n\nOption Checking:\nK3"
 "\n"

3 all "Protocol CAN Selected Frame" RSRTX_ATTR_PROTOCOL_CAN_SELECTED_FRAME ViInt32 gs 
 "Sets selector repeated capability Frame.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol CAN Frame Type" RSRTX_ATTR_PROTOCOL_CAN_FRAME_TYPE ViInt32 g rsrtx_rngCANFrameType
 "Returns the type of the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:CAN:FRAMe<n>:TYPE?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol CAN Frame Status" RSRTX_ATTR_PROTOCOL_CAN_FRAME_STATUS ViInt32 g rsrtx_rngCANFrameStatus
 "Returns the overall state of the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:CAN:FRAMe<n>:STATus?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol CAN Frame Start" RSRTX_ATTR_PROTOCOL_CAN_FRAME_START ViReal64 g 
 "Returns the start time of the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:CAN:FRAMe<n>:STARt?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol CAN Frame End" RSRTX_ATTR_PROTOCOL_CAN_FRAME_END ViReal64 g 
 "Returns the end time of the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:CAN:FRAMe<n>:STOP?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol CAN Frame Data" RSRTX_ATTR_PROTOCOL_CAN_FRAME_DATA ViString g 
 "Returns the data words of the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:CAN:FRAMe<n>:DATA?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol CAN Ack State" RSRTX_ATTR_PROTOCOL_CAN_ACK_STATE ViInt32 g rsrtx_rngCANAckState
 "Returns the state of the acknowledge field.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:CAN:FRAMe<n>:ACKState?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol CAN Ack Value" RSRTX_ATTR_PROTOCOL_CAN_ACK_VALUE ViInt32 g 
 "Returns the value of the acknowledge field.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:CAN:FRAMe<n>:ACKValue?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol CAN Checksum State" RSRTX_ATTR_PROTOCOL_CAN_CHECKSUM_STATE ViInt32 g rsrtx_rngCANAckState
 "Returns the state of the checksum.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:CAN:FRAMe<n>:CSSTate?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol CAN Checksum Value" RSRTX_ATTR_PROTOCOL_CAN_CHECKSUM_VALUE ViInt32 g 
 "Returns the checksum value.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:CAN:FRAMe<n>:CSValue?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol CAN Data Length State" RSRTX_ATTR_PROTOCOL_CAN_DATA_LENGTH_STATE ViInt32 g rsrtx_rngCANAckState
 "Returns the state of the data length code.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:CAN:FRAMe<n>:DLCState?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol CAN Data Length Value" RSRTX_ATTR_PROTOCOL_CAN_DATA_LENGTH_VALUE ViInt32 g 
 "Returns the number of data bytes in the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:CAN:FRAMe<n>:DLCValue?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol CAN ID State" RSRTX_ATTR_PROTOCOL_CAN_ID_STATE ViInt32 g rsrtx_rngCANAckState
 "Returns the state of the identifier.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:CAN:FRAMe<n>:IDSTate?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol CAN ID Value" RSRTX_ATTR_PROTOCOL_CAN_ID_VALUE ViInt32 g 
 "Returns the decimal address value of the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:CAN:FRAMe<n>:IDValue?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol CAN ID Type" RSRTX_ATTR_PROTOCOL_CAN_ID_TYPE ViInt32 g rsrtx_rngProtocolCANIDType
 "Returns the length of the identifier: 11 bit for CAN base frames, or 29 bits for CAN extended frames.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:CAN:FRAMe<n>:IDTYpe?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol CAN BSE Position" RSRTX_ATTR_PROTOCOL_CAN_BSE_POSITION ViReal64 g 
 "Returns the position of the bit stuffing error in the specified frame (if available).\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:CAN:FRAMe<n>:BSEPosition?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol CAN Byte Count" RSRTX_ATTR_PROTOCOL_CAN_BYTE_COUNT ViInt32 g 
 "Returns the number of data bytes in the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:CAN:FRAMe<n>:BCOunt?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol CAN Selected Byte" RSRTX_ATTR_PROTOCOL_CAN_SELECTED_BYTE ViInt32 gs 
 "Sets selector repeated capability Byte.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol CAN Byte State" RSRTX_ATTR_PROTOCOL_CAN_BYTE_STATE ViInt32 g rsrtx_rngCANAckState
 "Returns the state of the specified data byte.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:CAN:FRAMe<n>:BYTE<o>:STATe?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol CAN Byte Value" RSRTX_ATTR_PROTOCOL_CAN_BYTE_VALUE ViInt32 g 
 "Returns the decimal value of the specified byte.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:CAN:FRAMe<n>:BYTE<o>:VALue?\n\nOption Checking:\nNone"
 "\n"

2 all "Parallel Bus"
 "Parallel Bus settings.\n"

3 all "Parallel Bus Analyzed Lines" RSRTX_ATTR_PARALLEL_BUS_ANALYZED_LINES ViInt32 gs 
 "Sets the number of lines to be analyzed.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:PARallel:WIDTh\n\nOption Checking:\nNone"
 "\n"

3 all "Parallel Bus Frame Count" RSRTX_ATTR_PARALLEL_BUS_FRAME_COUNT ViInt32 g 
 "Returns the number of decoded frames.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:PARallel:FCOunt?\n\nOption Checking:\nNone"
 "\n"

3 all "Parallel Bus Selected Frame" RSRTX_ATTR_PARALLEL_BUS_SELECTED_FRAME ViInt32 gs 
 "Sets selector repeated capability Frame.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nNone"
 "\n"

3 all "Parallel Bus Frame Data" RSRTX_ATTR_PARALLEL_BUS_FRAME_DATA ViString g 
 "Returns the data words of the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:PARallel:FRAMe<n>:DATA?\n\nOption Checking:\nNone"
 "\n"

3 all "Parallel Bus Frame Enabled" RSRTX_ATTR_PARALLEL_BUS_FRAME_ENABLED ViInt32 g rsrtx_rngParallelBusFrameEnabled
 "Returns the overall state of the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:PARallel:FRAMe<n>:STATe?\n\nOption Checking:\nNone"
 "\n"

3 all "Parallel Bus Frame Start" RSRTX_ATTR_PARALLEL_BUS_FRAME_START ViReal64 g 
 "Returns the start time of the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:PARallel:FRAMe<n>:STARt?\n\nOption Checking:\nNone"
 "\n"

3 all "Parallel Bus Frame End" RSRTX_ATTR_PARALLEL_BUS_FRAME_END ViReal64 g 
 "Returns the end time of the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:PARallel:FRAMe<n>:STOP?\n\nOption Checking:\nNone"
 "\n"

3 all "Line"
 "This class contains methods for configuring individual lines of the parallel bus.\n"

4 all "Parallel Bus Bit Source" RSRTX_ATTR_PARALLEL_BUS_BIT_SOURCE ViInt32 gs RsRtx_rngParallelBitSource
 "Defines the logic channel that is assigned to the selected bit. Use the command for each bit of the bus.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)ParallelLine (Bit0,Bit1,Bit2,Bit3,Bit4,Bit5,Bit6,Bit7,Bit8,Bit9,Bit10,Bit11,Bit12,Bit13,Bit14,Bit15)\n\nRemote-control command:\nBUS<b>:PARallel:DATA<m>:SOURce\n\nOption Checking:\nNone"
 "\n"

3 all "Parallel Bus Clocked"
 "Parallel Bus clocked settings.\n"

4 all "Parallel Bus Clocked Analyzed Lines" RSRTX_ATTR_PARALLEL_BUS_CLOCKED_ANALYZED_LINES ViInt32 gs 
 "Sets the number of lines to be analyzed.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:CPARallel:WIDTh\n\nOption Checking:\nNone"
 "\n"

4 all "Parallel Bus Clocked Frame Count" RSRTX_ATTR_PARALLEL_BUS_CLOCKED_FRAME_COUNT ViInt32 g 
 "Returns the number of decoded frames.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:CPARallel:FCOunt?\n\nOption Checking:\nNone"
 "\n"

4 all "Parallel Bus Clocked Slope" RSRTX_ATTR_PARALLEL_BUS_CLOCKED_SLOPE ViInt32 gs rsrtx_rngTriggerSlope
 "Selects if the data is sampled on the rising or falling slope of the clock, or on both edges (EITHer). The clock slope marks the begin of a new bit.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:CPARallel:CLOCK:SLOPe\n\nOption Checking:\nNone"
 "\n"

4 all "Parallel Bus Clocked CS Polarity" RSRTX_ATTR_PARALLEL_BUS_CLOCKED_CS_POLARITY ViInt32 gs rsrtx_rngPolarity
 "Selects wether the chip select signal is high active (high = 1) or low active (low = 1).\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:CPARallel:CS:POLarity\n\nOption Checking:\nNone"
 "\n"

4 all "Parallel Bus Clocked Selected Frame" RSRTX_ATTR_PARALLEL_BUS_CLOCKED_SELECTED_FRAME ViInt32 gs 
 "Sets selector repeated capability Frame.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nNone"
 "\n"

4 all "Parallel Bus Clocked Frame Data" RSRTX_ATTR_PARALLEL_BUS_CLOCKED_FRAME_DATA ViString g 
 "Returns the data words of the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:CPARallel:FRAMe<n>:DATA?\n\nOption Checking:\nNone"
 "\n"

4 all "Parallel Bus Clocked Frame Enabled" RSRTX_ATTR_PARALLEL_BUS_CLOCKED_FRAME_ENABLED ViInt32 g rsrtx_rngParallelBusFrameEnabled
 "Returns the overall state of the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:CPARallel:FRAMe<n>:STATe?\n\nOption Checking:\nNone"
 "\n"

4 all "Parallel Bus Clocked Frame Start" RSRTX_ATTR_PARALLEL_BUS_CLOCKED_FRAME_START ViReal64 g 
 "Returns the start time of the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:CPARallel:FRAMe<n>:STARt?\n\nOption Checking:\nNone"
 "\n"

4 all "Parallel Bus Clocked Frame End" RSRTX_ATTR_PARALLEL_BUS_CLOCKED_FRAME_END ViReal64 g 
 "Returns the end time of the specified frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:CPARallel:FRAMe<n>:STOP?\n\nOption Checking:\nNone"
 "\n"

4 all "Parallel Bus Clocked Source" RSRTX_ATTR_PARALLEL_BUS_CLOCKED_SOURCE ViInt32 gs RsRtx_rngClockedSource
 "Selects the digital channel that is used as clock line.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:CPARallel:CLOCk:SOURce\n\nOption Checking:\nNone"
 "\n"

4 all "Parallel Bus Clocked Chip Select Enabled" RSRTX_ATTR_PARALLEL_BUS_CLOCKED_CHIP_SELECT_ENABLED ViBoolean gs 
 "Enables and disables the chip select line.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:CPARallel:CS:ENABle\n\nOption Checking:\nNone"
 "\n"

4 all "Parallel Bus Clocked Chip Select Source" RSRTX_ATTR_PARALLEL_BUS_CLOCKED_CHIP_SELECT_SOURCE ViInt32 gs RsRtx_rngClockedSource
 "Selects the digital channel that is used as chip select line.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:CPARallel:CS:SOURce\n\nOption Checking:\nNone"
 "\n"

4 all "Line"
 "This class contains methods for configuring individual lines of the parallel bus.\n"

5 all "Parallel Bus Clocked Bit Source" RSRTX_ATTR_PARALLEL_BUS_CLOCKED_BIT_SOURCE ViInt32 gs RsRtx_rngParallelBitSource
 "Defines the logic channel that is assigned to the selected bit. Use the command for each bit of the bus.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)ParallelLine (Bit0,Bit1,Bit2,Bit3,Bit4,Bit5,Bit6,Bit7,Bit8,Bit9,Bit10,Bit11,Bit12,Bit13,Bit14,Bit15)\n\nRemote-control command:\nBUS<b>:CPARallel:DATA<m>:SOURce\n\nOption Checking:\nNone"
 "\n"

2 all "Audio Signals"
 "This class contains attributes that configure and analyze audio signals. \n\nAttributes in this class requires option R&S RTO-K5.\n"

3 all "Protocol Audio Variant" RSRTX_ATTR_PROTOCOL_AUDIO_VARIANT ViInt32 gs rsrtx_rngAudioVariant
 "Selects the audio signal type.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2S:AVARiant\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol Audio Word Length" RSRTX_ATTR_PROTOCOL_AUDIO_WORD_LENGTH ViInt32 gs 
 "Defines the number of bits in an audio data word.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2S:WLENgth\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol Audio Channel Order" RSRTX_ATTR_PROTOCOL_AUDIO_CHANNEL_ORDER ViInt32 gs rsrtx_rngAudioChannelOrder
 "Defines if the left or the right channel is the first channel in the frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2S:CHANnel:ORDer\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol Audio Bit Order" RSRTX_ATTR_PROTOCOL_AUDIO_BIT_ORDER ViInt32 gs rsrtx_rngProtocolAudioBitOrder
 "Select if the data of the messages starts with msb or lsb.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2S:BORDer\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol Audio Channel Offset" RSRTX_ATTR_PROTOCOL_AUDIO_CHANNEL_OFFSET ViInt32 gs 
 "Sets the number of bits between the channel start and the start of the audio word. The setting is available for left-justified data format and TDM audio signals.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2S:CHANnel:OFFSet\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol Audio Channel Length" RSRTX_ATTR_PROTOCOL_AUDIO_CHANNEL_LENGTH ViInt32 gs 
 "Sets the number of bits in a channel block for right-justified data format and TDM audio signals.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2S:CHANnel:LENGth\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol Audio Frame Offset" RSRTX_ATTR_PROTOCOL_AUDIO_FRAME_OFFSET ViInt32 gs 
 "Sets the number of bits between the frame start and the start of the first channel of a TDM audio line. Each FSYNC edge restarts the offset count.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2S:FOFFset\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol Audio TDM Channels" RSRTX_ATTR_PROTOCOL_AUDIO_TDM_CHANNELS ViInt32 gs 
 "Sets the number of channels transmitted on the TDM audio line.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2S:CHANnel:TDMCount\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol Audio Selected Frame" RSRTX_ATTR_PROTOCOL_AUDIO_SELECTED_FRAME ViInt32 gs 
 "Sets selector repeated capability Frame.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol Audio Frame Count" RSRTX_ATTR_PROTOCOL_AUDIO_FRAME_COUNT ViInt32 g 
 "Queries the number of decoded frames.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2S:FCOunt?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol Audio Frame Status" RSRTX_ATTR_PROTOCOL_AUDIO_FRAME_STATUS ViInt32 g rsrtx_rngAudioFrameStatus
 "Returns the overall state of the frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2S:FRAMe<n>:STATe?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol Audio Frame Start" RSRTX_ATTR_PROTOCOL_AUDIO_FRAME_START ViReal64 g 
 "Return the start time of the selected frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2S:FRAMe<n>:STARt?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol Audio Frame Stop" RSRTX_ATTR_PROTOCOL_AUDIO_FRAME_STOP ViReal64 g 
 "Return the stop time of the selected frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2S:FRAMe<n>:STOP?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol Audio Frame Left Channel Status" RSRTX_ATTR_PROTOCOL_AUDIO_FRAME_LEFT_CHANNEL_STATUS ViInt32 g rsrtx_rngAudioFrameStatus
 "Return the status of the left channel of the selected frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2S:FRAMe<n>:LEFT:STATe?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol Audio Frame Right Channel Status" RSRTX_ATTR_PROTOCOL_AUDIO_FRAME_RIGHT_CHANNEL_STATUS ViInt32 g rsrtx_rngAudioFrameStatus
 "Return the status of the right channel of the selected frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2S:FRAMe<n>:RIGHt:STATe?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol Audio Frame Left Channel Value" RSRTX_ATTR_PROTOCOL_AUDIO_FRAME_LEFT_CHANNEL_VALUE ViReal64 g 
 "Return the data value of the left channel.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2S:FRAMe<n>:LEFT:VALue?\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol Audio Frame Right Channel Value" RSRTX_ATTR_PROTOCOL_AUDIO_FRAME_RIGHT_CHANNEL_VALUE ViReal64 g 
 "Return the data value of the right channel.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2S:FRAMe<n>:RIGHt:VALue?\n\nOption Checking:\nNone"
 "\n"

3 all "TDM Channel"
 "This class contains attributes with TDMChannel repeated capability.\n"

4 all "Protocol Audio Frame TDM Status" RSRTX_ATTR_PROTOCOL_AUDIO_FRAME_TDM_STATUS ViInt32 g rsrtx_rngAudioFrameStatus
 "Returns the state of the indicated channel of the selected frame.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)TDMChannel (TDM0,TDM1,TDM2,TDM3,TDM4,TDM5,TDM6,TDM7,TDM8)\n\nRemote-control command:\nBUS<b>:I2S:FRAMe<n>:TDM<o>:STATe?\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol Audio Frame TDM Value" RSRTX_ATTR_PROTOCOL_AUDIO_FRAME_TDM_VALUE ViReal64 g 
 "Return the data value of the indicated TDM channel.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)TDMChannel (TDM0,TDM1,TDM2,TDM3,TDM4,TDM5,TDM6,TDM7,TDM8)\n\nRemote-control command:\nBUS<b>:I2S:FRAMe<n>:TDM<o>:VALue?\n\nOption Checking:\nNone"
 "\n"

3 all "Clock"
 "Configures the clock line properties.\n"

4 all "Protocol Audio Clock Source" RSRTX_ATTR_PROTOCOL_AUDIO_CLOCK_SOURCE ViInt32 gs rsrtx_rngAudioSource
 "Selects the source of the waveform.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2S:CLOCk:SOURce\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol Audio Clock Threshold" RSRTX_ATTR_PROTOCOL_AUDIO_CLOCK_THRESHOLD ViReal64 gs 
 "Sets the threshold value for the clock line SCLK.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2S:CLOCk:THReshold\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol Audio Clock Polarity" RSRTX_ATTR_PROTOCOL_AUDIO_CLOCK_POLARITY ViInt32 gs rsrtx_rngAudioClockPolarity
 "Selects line polarity.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2S:CLOCk:POLarity\n\nOption Checking:\nNone"
 "\n"

3 all "Word Select"
 "Configures the word select line properties for I2S standard\n"

4 all "Protocol Audio WS Source" RSRTX_ATTR_PROTOCOL_AUDIO_WS_SOURCE ViInt32 gs rsrtx_rngAudioSource
 "Selects the source of the word select line for I2S standard, left- und right-justified data formats, or the source of the frame synchronization pulse for TDM audio signals.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2S:WSELect:SOURce\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol Audio WS Threshold" RSRTX_ATTR_PROTOCOL_AUDIO_WS_THRESHOLD ViReal64 gs 
 "Sets the threshold value for the word select and FSYNC lines.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2S:WSELect:THReshold\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol Audio WS Polarity" RSRTX_ATTR_PROTOCOL_AUDIO_WS_POLARITY ViInt32 gs rsrtx_rngAudioWSPolarity
 "Selects line polarity.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2S:WSELect:POLarity\n\nOption Checking:\nNone"
 "\n"

3 all "Data"
 "Configures properties of the audio data line.\n"

4 all "Protocol Audio Data Source" RSRTX_ATTR_PROTOCOL_AUDIO_DATA_SOURCE ViInt32 gs rsrtx_rngAudioSource
 "Selects the source of the audio data line.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2S:DATA:SOURce\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol Audio Data Threshold" RSRTX_ATTR_PROTOCOL_AUDIO_DATA_THRESHOLD ViReal64 gs 
 "Sets the threshold value for the data line.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2S:DATA:THReshold\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol Audio Data Polarity" RSRTX_ATTR_PROTOCOL_AUDIO_DATA_POLARITY ViInt32 gs rsrtx_rngProtocolSPIMISOPolarity
 "Selects line polarity.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2S:DATA:POLarity\n\nOption Checking:\nNone"
 "\n"

3 all "Track Waveform"
 "Selects Track Channel\n"

4 all "Protocol Audio Track Waveform Display Mode" RSRTX_ATTR_PROTOCOL_AUDIO_TRACK_WAVEFORM_DISPLAY_MODE ViInt32 gs rsrtx_rngTrackDisplayMode
 "Defines how the decoded bus, the bit lines of the channels, and the track waveforms are displayed.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2S:DISPlay\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol Audio Track Waveform Left Position" RSRTX_ATTR_PROTOCOL_AUDIO_TRACK_WAVEFORM_LEFT_POSITION ViReal64 gs 
 "Sets the vertical positiion of the track waveform for the left channel in divisions. The\ncommand is relevant for IS standard, left justified and right justified audio formats.s.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2S:TRACk:LEFT:POSition\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol Audio Track Waveform Left Scale" RSRTX_ATTR_PROTOCOL_AUDIO_TRACK_WAVEFORM_LEFT_SCALE ViReal64 gs 
 "Sets the vertical scale of the track waveform for the left channel in bits per division.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2S:TRACk:LEFT:SCALe\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol Audio Track Waveform Right Position" RSRTX_ATTR_PROTOCOL_AUDIO_TRACK_WAVEFORM_RIGHT_POSITION ViReal64 gs 
 "Sets the vertical positiion of the track waveform for the right channel in divisions. The command is relevant for IS standard, left justified and right justified audio formats.s.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2S:TRACk:RIGHt:POSition\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol Audio Track Waveform Right Scale" RSRTX_ATTR_PROTOCOL_AUDIO_TRACK_WAVEFORM_RIGHT_SCALE ViReal64 gs 
 "Sets the vertical scale of the track waveform for the right channel in bits per division.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2S:TRACk:RIGHt:SCALe\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol Audio Track Waveform Set To Default" RSRTX_ATTR_PROTOCOL_AUDIO_TRACK_WAVEFORM_SET_TO_DEFAULT ViString s 
 "Sets all selected tracks to the middle of the display and scales them to full height of the display (8 dovisions). The track waveforms overlap.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2S:TRACk:SET:DEFault\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol Audio Track Waveform Set To Screen" RSRTX_ATTR_PROTOCOL_AUDIO_TRACK_WAVEFORM_SET_TO_SCREEN ViString s 
 "Arranges the selected tracks vertically, one above the other. The track waveforms do not overlap.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:I2S:TRACk:SET:SCReen\n\nOption Checking:\nNone"
 "\n"

4 all "Track Channel"
 "Selects the track channel.\n"

5 all "Protocol Audio Track Waveform Channel Enabled" RSRTX_ATTR_PROTOCOL_AUDIO_TRACK_WAVEFORM_CHANNEL_ENABLED ViBoolean gs 
 "Defines if the indicated track waveform is visible on the display.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)TDMChannel (TDM0,TDM1,TDM2,TDM3,TDM4,TDM5,TDM6,TDM7,TDM8)\n\nRemote-control command:\nBUS<b>:I2S:TRACk:TDM<o>:STATe\n\nOption Checking:\nNone"
 "\n"

5 all "Protocol Audio Track Waveform Channel Position" RSRTX_ATTR_PROTOCOL_AUDIO_TRACK_WAVEFORM_CHANNEL_POSITION ViReal64 gs 
 "Sets the vertical positiion of the selected track waveform in divisions.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)TDMChannel (TDM0,TDM1,TDM2,TDM3,TDM4,TDM5,TDM6,TDM7,TDM8)\n\nRemote-control command:\nBUS<b>:I2S:TRACk:TDM<o>:POSition\n\nOption Checking:\nNone"
 "\n"

5 all "Protocol Audio Track Waveform Channel Scale" RSRTX_ATTR_PROTOCOL_AUDIO_TRACK_WAVEFORM_CHANNEL_SCALE ViReal64 gs 
 "Sets the vertical scale of the track waveform for the left channel in bits per division.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)TDMChannel (TDM0,TDM1,TDM2,TDM3,TDM4,TDM5,TDM6,TDM7,TDM8)\n\nRemote-control command:\nBUS<b>:I2S:TRACk:TDM<o>:SCALe\n\nOption Checking:\nNone"
 "\n"

2 all "MILSTD"
 "The MIL-STD-1553 specification defines the characteristics of a serial data bus originally designed for use in the military avionics. Nowadays it is also used in spacecraft on-board data handling.\n"

3 all "Protocol MILSTD Source" RSRTX_ATTR_PROTOCOL_MILSTD_SOURCE ViInt32 gs rsrtx_rngSource
 "Sets the channel for the signal source.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:MILStd:SOURce\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol MILSTD Polarity" RSRTX_ATTR_PROTOCOL_MILSTD_POLARITY ViInt32 gs rsrtx_rngPolarity
 "Sets the polarity of the bus.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:MILStd:POLarity\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol MILSTD Treshold High" RSRTX_ATTR_PROTOCOL_MILSTD_TRESHOLD_HIGH ViReal64 gs 
 "Sets the upper threshold level of the signal.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:MILStd:THReshold:HIGH\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol MILSTD Treshold Low" RSRTX_ATTR_PROTOCOL_MILSTD_TRESHOLD_HLOW ViReal64 gs 
 "Sets the lower threshold level of the signal.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:MILStd:THReshold:LOW\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol MILSTD Timing Deprecated" RSRTX_ATTR_PROTOCOL_MILSTD_TIMING ViReal64 gs 
 "This attribute is deprecated. Use RSRTX_ATTR_PROTOCOL_MILSTD_RESPONSE_TIME_MAXIMUM instead.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:MILStd:RESPonsetime:MAXimum\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol MILSTD Inter Message Gap Time Infinite" RSRTX_ATTR_PROTOCOL_MILSTD_INTER_MESSAGE_GAP_TIME_INFINITE ViBoolean gs 
 "Enables infinite Inter Message Gap Time.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:MILStd:IMGTime:INFinite\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol MILSTD Inter Message Gap Time Minimum" RSRTX_ATTR_PROTOCOL_MILSTD_INTER_MESSAGE_GAP_TIME_MINIMUM ViReal64 gs 
 "Configures minimum Inter Message Gap Time.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:MILStd:IMGTime:MINimum\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol MILSTD Inter Message Gap Time Maximum" RSRTX_ATTR_PROTOCOL_MILSTD_INTER_MESSAGE_GAP_TIME_MAXIMUM ViReal64 gs 
 "Configures maximum Inter Message Gap Time.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:MILStd:IMGTime:MAXimum\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol MILSTD Response Time Infinite" RSRTX_ATTR_PROTOCOL_MILSTD_RESPONSE_TIME_INFINITE ViBoolean gs 
 "Enables infinite response time.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:MILStd:RESPonsetime:INFinite\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol MILSTD Response Time Minimum" RSRTX_ATTR_PROTOCOL_MILSTD_RESPONSE_TIME_MINIMUM ViReal64 gs 
 "Configures minimum response time.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:MILStd:RESPonsetime:MINimum\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol MILSTD Response Time Maximum" RSRTX_ATTR_PROTOCOL_MILSTD_RESPONSE_TIME_MAXIMUM ViReal64 gs 
 "Configures maximum response time.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:MILStd:RESPonsetime:MAXimum\n\nOption Checking:\nNone"
 "\n"

3 all "Word Results"
 "Word results.\n"

4 all "Protocol MILSTD Word Count" RSRTX_ATTR_PROTOCOL_MILSTD_WORD_COUNT ViInt32 g 
 "Returns the number of received words.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:MILStd:WCOunt?\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol MILSTD Selected Word" RSRTX_ATTR_PROTOCOL_MILSTD_SELECTED_WORD ViInt32 gs 
 "Sets selector repeated capability Word.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol MILSTD Word Start" RSRTX_ATTR_PROTOCOL_MILSTD_WORD_START ViReal64 g 
 "Returns the start time of the specified word.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:MILStd:WORD<n>:STARt?\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol MILSTD Word Stop" RSRTX_ATTR_PROTOCOL_MILSTD_WORD_STOP ViReal64 g 
 "Returns the stop time of the specified word.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:MILStd:WORD<n>:STOP?\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol MILSTD Word Status" RSRTX_ATTR_PROTOCOL_MILSTD_WORD_STATUS ViInt32 g rsrtx_rngMILSTDStatus
 "For a status word returns the value and if there are errors.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:MILStd:WORD<n>:STATus?\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol MILSTD Word Transmission Direction" RSRTX_ATTR_PROTOCOL_MILSTD_WORD_TRANSMISSION_DIRECTION ViInt32 g rsrtx_rngMILSTDDirection
 "Returns the transmission direction of the specified word.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:MILStd:WORD<n>:TRMode?\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol MILSTD Word Type" RSRTX_ATTR_PROTOCOL_MILSTD_WORD_TYPE ViInt32 g rsrtx_rngMILSTDType
 "Returns the type of word of the specified word.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:MILStd:WORD<n>:TYPE?\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol MILSTD Word Parity" RSRTX_ATTR_PROTOCOL_MILSTD_WORD_PARITY ViInt32 g 
 "Returns the parity of the specified word.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:MILStd:WORD<n>:PARity?\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol MILSTD Word Response Time" RSRTX_ATTR_PROTOCOL_MILSTD_WORD_RESPONSE_TIME ViReal64 g 
 "Return the response time of the specified word.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:MILStd:WORD<n>:RTIMe?\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol MILSTD Word Value" RSRTX_ATTR_PROTOCOL_MILSTD_WORD_VALUE ViReal64 g 
 "Returns the value of the specified data word.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:MILStd:WORD<n>:DATA?\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol MILSTD Word Intermessage Gate Time" RSRTX_ATTR_PROTOCOL_MILSTD_WORD_INTERMESSAGE_GATE_TIME ViReal64 g 
 "Returns the intermessage gate time of the specified word.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:MILStd:WORD<n>:IMGTime?\n\nOption Checking:\nNone"
 "\n"

4 all "Command"
 "Command word attributes.\n"

5 all "Protocol MILSTD Command Word Count" RSRTX_ATTR_PROTOCOL_MILSTD_COMMAND_WORD_COUNT ViInt32 g 
 "For a command word, returns the word count.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:MILStd:WORD<n>:COMMand:WCOunt?\n\nOption Checking:\nNone"
 "\n"

5 all "Protocol MILSTD Command Word Mode Code Type" RSRTX_ATTR_PROTOCOL_MILSTD_COMMAND_WORD_MODE_CODE_TYPE ViInt32 g rsrtx_rngMILSTDCodeType
 "For the sepcified command word, returns the type of mode code.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:MILStd:WORD<n>:COMMand:MCODe:CODE?\n\nOption Checking:\nNone"
 "\n"

5 all "Protocol MILSTD Command Word Mode Code Value" RSRTX_ATTR_PROTOCOL_MILSTD_COMMAND_WORD_MODE_CODE_VALUE ViReal64 g 
 "For the specified command word, returns the value of the mode code.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:MILStd:WORD<n>:COMMand:MCODe:VALue?\n\nOption Checking:\nNone"
 "\n"

5 all "Protocol MILSTD Command Word RT Address" RSRTX_ATTR_PROTOCOL_MILSTD_COMMAND_WORD_RT_ADDRESS ViString g 
 "Returns the RT address of the specified word.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:MILStd:WORD<n>:COMMand:RTADdress?\n\nOption Checking:\nNone"
 "\n"

5 all "Protocol MILSTD Command Word Sub Address" RSRTX_ATTR_PROTOCOL_MILSTD_COMMAND_WORD_SUB_ADDRESS ViString g 
 "For a command word, returns the subaddress of the specified word.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:MILStd:WORD<n>:COMMand:SADDress?\n\nOption Checking:\nNone"
 "\n"

4 all "Bit Status"
 "Bit status attributes.\n"

5 all "Protocol MILSTD Word Received Bit Status" RSRTX_ATTR_PROTOCOL_MILSTD_WORD_RECEIVED_BIT_STATUS ViInt32 g 
 "Returns the state of the broadcast command received bit of the specified status word.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:MILStd:WORD<n>:STATus:BCReceived?\n\nOption Checking:\nNone"
 "\n"

5 all "Protocol MILSTD Word Busy Bit Status" RSRTX_ATTR_PROTOCOL_MILSTD_WORD_BUSY_BIT_STATUS ViInt32 g 
 "Returns the state of the busy bit of the specified status word.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:MILStd:WORD<n>:STATus:BUSY?\n\nOption Checking:\nNone"
 "\n"

5 all "Protocol MILSTD Word Bus Control Bit Status" RSRTX_ATTR_PROTOCOL_MILSTD_WORD_BUS_CONTROL_BIT_STATUS ViInt32 g 
 "Returns the state of the dynamic bus control bit of the specified status word.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:MILStd:WORD<n>:STATus:DBCaccept?\n\nOption Checking:\nNone"
 "\n"

5 all "Protocol MILSTD Word Instrumentation Bit Status" RSRTX_ATTR_PROTOCOL_MILSTD_WORD_INSTRUMENTATION_BIT_STATUS ViInt32 g 
 "Returns the state of the instrumentation bit of the specified status word.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:MILStd:WORD<n>:STATus:INSTrument?\n\nOption Checking:\nNone"
 "\n"

5 all "Protocol MILSTD Word Message Error Bit Status" RSRTX_ATTR_PROTOCOL_MILSTD_WORD_MESSAGE_ERROR_BIT_STATUS ViInt32 g 
 "Returns the state of the message error bit of the specified status word.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:MILStd:WORD<n>:STATus:MERRor?\n\nOption Checking:\nNone"
 "\n"

5 all "Protocol MILSTD Word Status RT Address" RSRTX_ATTR_PROTOCOL_MILSTD_WORD_STATUS_RT_ADDRESS ViString g 
 "Returns the RT address of the specified status word.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:MILStd:WORD<n>:STATus:RTADdress?\n\nOption Checking:\nNone"
 "\n"

5 all "Protocol MILSTD Word Subsystem Bit Status" RSRTX_ATTR_PROTOCOL_MILSTD_WORD_SUBSYSTEM_BIT_STATUS ViInt32 g 
 "Returns the state of the subsystem bit of the specified status word.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:MILStd:WORD<n>:STATus:SUBSystem?\n\nOption Checking:\nNone"
 "\n"

5 all "Protocol MILSTD Word Terminal Bit Status" RSRTX_ATTR_PROTOCOL_MILSTD_WORD_TERMINAL_BIT_STATUS ViInt32 g 
 "Returns the state of the terminal flag bit of the specified status word.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:MILStd:WORD<n>:STATus:TERMinal?\n\nOption Checking:\nNone"
 "\n"

5 all "Protocol MILSTD Word Service Request Bit Status" RSRTX_ATTR_PROTOCOL_MILSTD_WORD_SERVICE_REQUEST_BIT_STATUS ViInt32 g 
 "Returns the state of the service request bit of the specified word.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:MILStd:WORD<n>:STATus:SREQuest?\n\nOption Checking:\nNone"
 "\n"

2 all "ARINC 429"
 "ARINC 429 (Option K7)\n"

3 all "Protocol ARINC429 Source" RSRTX_ATTR_PROTOCOL_ARINC429_SOURCE ViInt32 gs rsrtx_rngSource
 "Sets the channel for the signal source.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:ARINc:SOURce\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol ARINC429 Polarity" RSRTX_ATTR_PROTOCOL_ARINC429_POLARITY ViInt32 gs rsrtx_rngProtocolARINC429Polarity
 "Sets the wire on which the bus signal is measured.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:ARINc:POLarity\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol ARINC429 Bit Rate Mode" RSRTX_ATTR_PROTOCOL_ARINC429_BIT_RATE_MODE ViInt32 gs rsrtx_rngProtocolARINC429BitRateMode
 "Sets the bit rate mode to high or low speed.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:ARINc:BRMode\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol ARINC429 Bit Rate" RSRTX_ATTR_PROTOCOL_ARINC429_BIT_RATE ViReal64 gs 
 "Sets the number of transmitted bits per second.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:ARINc:BRValue\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol ARINC429 Threshold High" RSRTX_ATTR_PROTOCOL_ARINC429_THRESHOLD_HIGH ViReal64 gs 
 "Sets the high threshold level of the signal.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:ARINc:THReshold:HIGH\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol ARINC429 Threshold Low" RSRTX_ATTR_PROTOCOL_ARINC429_THRESHOLD_LOW ViReal64 gs 
 "Sets the low threshold level of the signal.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:ARINc:THReshold:LOW\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol ARINC429 Data Format" RSRTX_ATTR_PROTOCOL_ARINC429_DATA_FORMAT ViInt32 gs rsrtx_rngProtocolARINC429DataFormat
 "Sets the decoding data format for the specified ARINC 429 bus.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:ARINc:DATA:FORMat\n\nOption Checking:\nNone"
 "\n"

3 all "Decoding Results"
 "Returns the decoding result of the specified word.\n"

4 all "Protocol ARINC429 Word Count" RSRTX_ATTR_PROTOCOL_ARINC429_WORD_COUNT ViInt32 g 
 "Returns the number of decoded words.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:ARINc:WCOunt?\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol ARINC429 Selected Word" RSRTX_ATTR_PROTOCOL_ARINC429_SELECTED_WORD ViInt32 gs 
 "Sets selector repeated capability Word.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol ARINC429 Word Status" RSRTX_ATTR_PROTOCOL_ARINC429_WORD_STATUS ViInt32 g rsrtx_rngARINC429WordStatus
 "Returns the status of the specified word.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:ARINc:WORD<n>:STATus?\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol ARINC429 Word Start" RSRTX_ATTR_PROTOCOL_ARINC429_WORD_START ViReal64 g 
 "Returns the start time of the specified word.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:ARINc:WORD<n>:STARt?\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol ARINC429 Word Stop" RSRTX_ATTR_PROTOCOL_ARINC429_WORD_STOP ViReal64 g 
 "Returns the start time of the specified word.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:ARINc:WORD<n>:STOP?\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol ARINC429 Word SDI" RSRTX_ATTR_PROTOCOL_ARINC429_WORD_SDI ViInt32 g 
 "Returns the source/destination identifier (SDI) bits of the specified word.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:ARINc:WORD<n>:SDI?\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol ARINC429 Word SSM" RSRTX_ATTR_PROTOCOL_ARINC429_WORD_SSM ViInt32 g 
 "Returns the source/destination identifier (SDI) bits of the specified word.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:ARINc:WORD<n>:SSM?\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol ARINC429 Word Label" RSRTX_ATTR_PROTOCOL_ARINC429_WORD_LABEL ViString g 
 "Returns the label of the specified word.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:ARINc:WORD<n>:LABel?\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol ARINC429 Word Label Value" RSRTX_ATTR_PROTOCOL_ARINC429_WORD_LABEL_VALUE ViInt32 g 
 "Returns the decimal value of the label of the specified word.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:ARINc:WORD<n>:LABel[:VALue]?\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol ARINC429 Word Pattern" RSRTX_ATTR_PROTOCOL_ARINC429_WORD_PATTERN ViInt32 g 
 "Returns all 32 bits of a data word as decimal value.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:ARINc:WORD<n>:PATTern?\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol ARINC429 Word Parity" RSRTX_ATTR_PROTOCOL_ARINC429_WORD_PARITY ViInt32 g 
 "Returns the parity of the specified word.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:ARINc:WORD<n>:PARity?\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol ARINC429 Word Format" RSRTX_ATTR_PROTOCOL_ARINC429_WORD_FORMAT ViInt32 g rsrtx_rngProtocolARINC429DataFormat
 "Returns the format of the sepcified word.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:ARINc:WORD<n>:FORMat?\n\nOption Checking:\nNone"
 "\n"

4 all "Protocol ARINC429 Word Data" RSRTX_ATTR_PROTOCOL_ARINC429_WORD_DATA ViInt32 g 
 "Returns the decimal value of the data of the specified word.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:ARINc:WORD<n>:DATA[:VALue]?\n\nOption Checking:\nNone"
 "\n"

1 all "Power Analysis"
 "Power Analysis.\n"

2 all "Power Analysis Enabled" RSRTX_ATTR_POWER_ANALYSIS_ENABLED ViBoolean gs 
 "Enables the power analysis.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:ENABle\n\nOption Checking:\nNone"
 "\n"

2 all "Power Analysis Type" RSRTX_ATTR_POWER_ANALYSIS_TYPE ViInt32 gs rsrtx_rngPowerAnalysisType
 "Selects power analysis type.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:ATYPe\n\nOption Checking:\nNone"
 "\n"

2 all "Power Analysis Result Table Enabled" RSRTX_ATTR_POWER_ANALYSIS_RESULT_TABLE_ENABLED ViBoolean gs 
 "Displays or hides the result table. This attribute is available for harmonic and spectrum power measurements.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:RESult:TABLe\n\nOption Checking:\nNone"
 "\n"

2 all "Power Analysis Reset Statistics" RSRTX_ATTR_POWER_ANALYSIS_RESET_STATISTICS ViString s 
 "Resets statistics.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:STATistics:RESet\n\nOption Checking:\nNone"
 "\n"

2 all "Power Analysis Statistics Visible" RSRTX_ATTR_POWER_ANALYSIS_STATISTICS_VISIBLE ViBoolean gs 
 "Visible statistics\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:STATistics:VISible\n\nOption Checking:\nNone"
 "\n"

2 all "Power Analysis Start Deskew" RSRTX_ATTR_POWER_ANALYSIS_START_DESKEW ViString s 
 "Starts the automatic deskew procedure to align the waveforms of all visible channels. It is necessary to deskew if a current and a voltage probe is used in the measurment. Use the R&S RT-ZF20 power deskew fixture to deskew the probes.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:DESKew[:EXECute]\n\nOption Checking:\nNone"
 "\n"

2 all "Power Analysis Zero Offset" RSRTX_ATTR_POWER_ANALYSIS_ZERO_OFFSET ViString s 
 "Sets zero offset.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:ZOFFset[:EXECute]\n\nOption Checking:\nNone"
 "\n"

2 all "Power Analysis Autoset" RSRTX_ATTR_POWER_ANALYSIS_AUTOSET ViString s 
 "Starts power analysis autoset.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:AUToscale\n\nOption Checking:\nNone"
 "\n"

2 all "Power Analysis Autoset Current" RSRTX_ATTR_POWER_ANALYSIS_AUTOSET_CURRENT ViString s 
 "Starts power analysis current autoset.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:AUToscale:CURRent\n\nOption Checking:\nNone"
 "\n"

2 all "Power Analysis Autoset Voltage" RSRTX_ATTR_POWER_ANALYSIS_AUTOSET_VOLTAGE ViString s 
 "Starts power analysis voltage autoset.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:AUToscale:VOLTage\n\nOption Checking:\nNone"
 "\n"

2 all "Source"
 "Clas for attributes with Source repcap.\n"

3 all "Power Analysis Voltage Source" RSRTX_ATTR_POWER_ANALYSIS_VOLTAGE_SOURCE ViInt32 gs rsrtx_rngPowerAnalysisSource
 "Sets the channel for the voltage source input.\n\nAvailable Repeated Capabilities:\nSourceNumber (S1,S2,S3,S4)\n\nRemote-control command:\nPOWer:SOURce:VOLTage<n>\n\nOption Checking:\nNone"
 "\n"

3 all "Power Analysis Current Source" RSRTX_ATTR_POWER_ANALYSIS_CURRENT_SOURCE ViInt32 gs rsrtx_rngPowerAnalysisSource
 "Sets the channel for the current source input.\n\nAvailable Repeated Capabilities:\nSourceNumber (S1,S2,S3,S4)\n\nRemote-control command:\nPOWer:SOURce:CURRent<n>\n\nOption Checking:\nNone"
 "\n"

2 all "Report"
 "Power analysis report.\n"

3 all "Power Analysis Add Report" RSRTX_ATTR_POWER_ANALYSIS_ADD_REPORT ViString s 
 "Adds a power report.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:REPort:ADD\n\nOption Checking:\nNone"
 "\n"

3 all "Power Analysis Report DUT" RSRTX_ATTR_POWER_ANALYSIS_REPORT_DUT ViString gs 
 "Sets a device under test (DUT) value that can be shown at the titel page of a report.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:REPort:DUT\n\nOption Checking:\nNone"
 "\n"

3 all "Power Analysis Report User" RSRTX_ATTR_POWER_ANALYSIS_REPORT_USER ViString gs 
 "Sets a user value that can be shown at the titel page of a report.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:REPort:USER\n\nOption Checking:\nNone"
 "\n"

3 all "Power Analysis Report Site" RSRTX_ATTR_POWER_ANALYSIS_REPORT_SITE ViString gs 
 "Sets a site value that can be shown at the titel page of a report.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:REPort:SITE\n\nOption Checking:\nNone"
 "\n"

3 all "Power Analysis Report Temperature" RSRTX_ATTR_POWER_ANALYSIS_REPORT_TEMPERATURE ViInt32 gs 
 "Sets a temperature value that can be shown at the titel page of a report.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:REPort:TEMPerature\n\nOption Checking:\nNone"
 "\n"

3 all "Power Analysis Report Description" RSRTX_ATTR_POWER_ANALYSIS_REPORT_DESCRIPTION ViString gs 
 "Sets a description that can be shown at the titel page of a report.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:REPort:DESCription\n\nOption Checking:\nNone"
 "\n"

3 all "Power Analysis Report Output Folder" RSRTX_ATTR_POWER_ANALYSIS_REPORT_OUTPUT_FOLDER ViString gs 
 "Sets the directory for the output folder, where the reports are stored.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:REPort:OUTPut\n\nOption Checking:\nNone"
 "\n"

2 all "Power Quality Measurement"
 "The "Power Quality" analysis measurements include the real power, the reactive power and the apparent power as well as the power factor. The crest factors and the phase angle between the current and voltage are also measured. These properties describe the power transfer in the system and allow you to characterize the power quality of the system.\n"

3 all "Start Power Quality Measurement" RSRTX_ATTR_START_POWER_QUALITY_MEASUREMENT ViString s 
 "Starts the power quality measurement.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:QUALity:EXECute\n\nOption Checking:\nNone"
 "\n"

3 all "Power Quality Measurement Add Report" RSRTX_ATTR_POWER_QUALITY_MEASUREMENT_ADD_REPORT ViString s 
 "Adds the result to the report list.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:QUALity:REPort:ADD\n\nOption Checking:\nNone"
 "\n"

3 all "Results"
 "Power quality measurement results.\n"

2 all "Consumption Measurement"
 "Consumption Measurement.\n"

3 all "Start Power Consumption Measurement" RSRTX_ATTR_START_POWER_CONSUMPTION_MEASUREMENT ViString s 
 "Start power consumption measurement.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:CONSumption:EXECute\n\nOption Checking:\nNone"
 "\n"

3 all "Restart Power Consumption Measurement" RSRTX_ATTR_RESTART_POWER_CONSUMPTION_MEASUREMENT ViString s 
 "Restart power consumption measurement.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:CONSumption:RESTart\n\nOption Checking:\nNone"
 "\n"

3 all "Power Consumption Measurement Add Report" RSRTX_ATTR_POWER_CONSUMPTION_MEASUREMENT_ADD_REPORT ViString s 
 "Adds the result to the report list.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:CONSumption:REPort:ADD\n\nOption Checking:\nNone"
 "\n"

3 all "Results"
 "Power consumption measurement results.\n"

4 all "Power Consumption Measurement Duration Result" RSRTX_ATTR_POWER_CONSUMPTION_MEASUREMENT_DURATION_RESULT ViReal64 g 
 "Returns the result of the measurement.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:CONSumption:RESult:DURation?\n\nOption Checking:\nNone"
 "\n"

4 all "Power Consumption Measurement Energy Result" RSRTX_ATTR_POWER_CONSUMPTION_MEASUREMENT_ENERGY_RESULT ViReal64 g 
 "Returns the result of the measurement.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:CONSumption:RESult:ENERgy?\n\nOption Checking:\nNone"
 "\n"

4 all "Power Consumption Measurement Active Result" RSRTX_ATTR_POWER_CONSUMPTION_MEASUREMENT_ACTIVE_RESULT ViReal64 g 
 "Returns the result of the measurement.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:CONSumption:RESult:REALpower?\n\nOption Checking:\nNone"
 "\n"

4 all "Power Consumption Measurement Apparent Power Result" RSRTX_ATTR_POWER_CONSUMPTION_MEASUREMENT_APPARENT_POWER_RESULT ViReal64 g 
 "Returns the Apparent Power result of the measurement.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:CONSumption:RESult:APParent?\n\nOption Checking:\nNone"
 "\n"

4 all "Power Consumption Measurement Power Factor Result" RSRTX_ATTR_POWER_CONSUMPTION_MEASUREMENT_POWER_FACTOR_RESULT ViReal64 g 
 "Returns the Power Factor result of the measurement.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:CONSumption:RESult:PFACtor?\n\nOption Checking:\nNone"
 "\n"

4 all "Power Consumption Measurement Phase Result" RSRTX_ATTR_POWER_CONSUMPTION_MEASUREMENT_PHASE_RESULT ViReal64 g 
 "Returns the phase result of the measurement.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:CONSumption:RESult:PHASe?\n\nOption Checking:\nNone"
 "\n"

4 all "Power Consumption Measurement Reactive Power Result" RSRTX_ATTR_POWER_CONSUMPTION_MEASUREMENT_REACTIVE_POWER_RESULT ViReal64 g 
 "Returns the Reactive Power result of the measurement.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:CONSumption:RESult:REACtive?\n\nOption Checking:\nNone"
 "\n"

2 all "Current Harmonics Measurement"
 "Current Harmonics Measurement.\n"

3 all "Start Power Current Harmonics Measurement" RSRTX_ATTR_START_POWER_CURRENT_HARMONICS_MEASUREMENT ViString s 
 "Start power current harmonics measurement.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:HARMonics:EXECute\n\nOption Checking:\nNone"
 "\n"

3 all "Power Current Harmonics Measurement Standard" RSRTX_ATTR_POWER_CURRENT_HARMONICS_MEASUREMENT_STANDARD ViInt32 gs rsrtx_rngHarmonicsStandard
 "Selects current harmonics standard.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:HARMonics:STANdard\n\nOption Checking:\nNone"
 "\n"

3 all "Power Current Harmonics Measurement Fundamental" RSRTX_ATTR_POWER_CURRENT_HARMONICS_MEASUREMENT_FUNDAMENTAL ViInt32 gs rsrtx_rngHarmonicsFundamental
 "Configures current harmonics fundamental.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:HARMonics:ENFRequency\n\nOption Checking:\nNone"
 "\n"

3 all "Power Current Harmonics Measurement Fundamental MIL" RSRTX_ATTR_POWER_CURRENT_HARMONICS_MEASUREMENT_FUNDAMENTAL_MIL ViInt32 gs rsrtx_rngHarmonicsFundamentalMIL
 "Selects the frequency of the input signal when Standard is set to MIL.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:HARMonics:MIFRequency\n\nOption Checking:\nNone"
 "\n"

3 all "Power Current Harmonics Measurement Fundamental RTC" RSRTX_ATTR_POWER_CURRENT_HARMONICS_MEASUREMENT_FUNDAMENTAL_RTC ViInt32 gs rsrtx_rngHarmonicsFundamentalRTC
 "Selects the frequency of the input signal when Standard is set to RTC.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:HARMonics:DOFRequency\n\nOption Checking:\nNone"
 "\n"

3 all "Power Current Harmonics Number Of Measured Harmonics" RSRTX_ATTR_POWER_CURRENT_HARMONICS_NUMBER_OF_MEASURED_HARMONICS ViInt32 g 
 "Returns the number of measured harmonics.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:HARMonics:AVAilable?\n\nOption Checking:\nNone"
 "\n"

3 all "Power Current Harmonics Measurement Add Report" RSRTX_ATTR_POWER_CURRENT_HARMONICS_MEASUREMENT_ADD_REPORT ViString s 
 "Adds the result to the report list.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:HARMonics:REPort:ADD\n\nOption Checking:\nNone"
 "\n"

3 all "Power Current Harmonics Measurement Duration" RSRTX_ATTR_POWER_CURRENT_HARMONICS_MEASUREMENT_DURATION ViReal64 g 
 "Returns the measurement duration.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:HARMonics:MEASurement:DURation?\n\nOption Checking:\nNone"
 "\n"

3 all "Results"
 "Current harmonics measurement results.\n"

4 all "Power Current Harmonics Measurement Limit Check Result" RSRTX_ATTR_POWER_CURRENT_HARMONICS_MEASUREMENT_LIMIT_CHECK_RESULT ViInt32 g rsrtx_rngLimitCheck
 "Returns the limit check result.\n\nAvailable Repeated Capabilities:\nResultNumber (Res1,Res2,Res3,Res4,Res5,Res6,Res7,Res8,Res9,Res10,Res11,Res12,Res13,Res14,Res15,Res16,Res17,Res18,Res19,Res20,Res21,Res22,Res23,Res24,Res25,Res26,Res27,Res28,Res29,Res30,Res31,Res32,Res33,Res34,Res35,Res36,Res37,Res38,Res39,Res40)\n\nRemote-control command:\nPOWer:HARMonics:RESult<n>:VALid?\n\nOption Checking:\nNone"
 "\n"

4 all "Reset Power Current Harmonics Measurement Results" RSRTX_ATTR_RESET_POWER_CURRENT_HARMONICS_MEASUREMENT_RESULTS ViString s 
 "Resets the results.\n\nAvailable Repeated Capabilities:\nResultNumber (Res1,Res2,Res3,Res4,Res5,Res6,Res7,Res8,Res9,Res10,Res11,Res12,Res13,Res14,Res15,Res16,Res17,Res18,Res19,Res20,Res21,Res22,Res23,Res24,Res25,Res26,Res27,Res28,Res29,Res30,Res31,Res32,Res33,Res34,Res35,Res36,Res37,Res38,Res39,Res40)\n\nRemote-control command:\nPOWer:HARMonics:RESult<n>:RESet\n\nOption Checking:\nNone"
 "\n"

3 all "Frequency Results"
 "Current harmonics measurement frequency results.\n"

4 all "Power Current Harmonics Measurement Frequency Current" RSRTX_ATTR_POWER_CURRENT_HARMONICS_MEASUREMENT_FREQUENCY_CURRENT ViReal64 g 
 "Returns the current frequency value.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:HARMonics:MEASurement:FREQuency[:ACTual]?\n\nOption Checking:\nNone"
 "\n"

4 all "Power Current Harmonics Measurement Frequency Average" RSRTX_ATTR_POWER_CURRENT_HARMONICS_MEASUREMENT_FREQUENCY_AVERAGE ViReal64 g 
 "Returns the average frequency of the measured signal.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:HARMonics:MEASurement:FREQuency:AVG?\n\nOption Checking:\nNone"
 "\n"

4 all "Power Current Harmonics Measurement Frequency Maximum" RSRTX_ATTR_POWER_CURRENT_HARMONICS_MEASUREMENT_FREQUENCY_MAXIMUM ViReal64 g 
 "Returns the maximum frequency of the measured signal.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:HARMonics:MEASurement:FREQuency:PPEak?\n\nOption Checking:\nNone"
 "\n"

4 all "Power Current Harmonics Measurement Frequency Minimum" RSRTX_ATTR_POWER_CURRENT_HARMONICS_MEASUREMENT_FREQUENCY_MINIMUM ViReal64 g 
 "Returns the minimum frequency of the measured signal.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:HARMonics:MEASurement:FREQuency:NPEak?\n\nOption Checking:\nNone"
 "\n"

4 all "Power Current Harmonics Measurement Frequency Standard Deviation" RSRTX_ATTR_POWER_CURRENT_HARMONICS_MEASUREMENT_FREQUENCY_STANDARD_DEVIATION ViReal64 g 
 "Returns the standard deviation of frequencies of the measured signal.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:HARMonics:MEASurement:FREQuency:STDDev?\n\nOption Checking:\nNone"
 "\n"

3 all "Real Power Results"
 "Current harmonics measurement real power results.\n"

4 all "Power Current Harmonics Measurement Real Power Current" RSRTX_ATTR_POWER_CURRENT_HARMONICS_MEASUREMENT_REAL_POWER_CURRENT ViReal64 g 
 "Returns the current real power value.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:HARMonics:MEASurement:REALpower[:ACTual]?\n\nOption Checking:\nNone"
 "\n"

3 all "Total Harmonic Distortion Results"
 "Current harmonics measurement total harmonic distortion results.\n"

4 all "Power Current Harmonics Measurement Total Harmonic Distortion Current" RSRTX_ATTR_POWER_CURRENT_HARMONICS_MEASUREMENT_TOTAL_HARMONIC_DISTORTION_CURRENT ViReal64 g 
 "Returns the current total harmonic disortion value.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:HARMonics:MEASurement:THDistortion[:ACTual]?\n\nOption Checking:\nNone"
 "\n"

4 all "Power Current Harmonics Measurement Total Harmonic Distortion Average" RSRTX_ATTR_POWER_CURRENT_HARMONICS_MEASUREMENT_TOTAL_HARMONIC_DISTORTION_AVERAGE ViReal64 g 
 "Returns the average total harmonic disortion of the measured signal.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:HARMonics:MEASurement:THDistortion:AVG?\n\nOption Checking:\nNone"
 "\n"

4 all "Power Current Harmonics Measurement Total Harmonic Distortion Maximum" RSRTX_ATTR_POWER_CURRENT_HARMONICS_MEASUREMENT_TOTAL_HARMONIC_DISTORTION_MAXIMUM ViReal64 g 
 "Returns the maximum total harmonic disortion of the measured signal.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:HARMonics:MEASurement:THDistortion:PPEak?\n\nOption Checking:\nNone"
 "\n"

4 all "Power Current Harmonics Measurement Total Harmonic Distortion Minimum" RSRTX_ATTR_POWER_CURRENT_HARMONICS_MEASUREMENT_TOTAL_HARMONIC_DISTORTION_MINIMUM ViReal64 g 
 "Returns the minimum total harmonic disortion of the measured signal.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:HARMonics:MEASurement:THDistortion:NPEak?\n\nOption Checking:\nNone"
 "\n"

4 all "Power Current Harmonics Measurement Total Harmonic Distortion Standard Deviation" RSRTX_ATTR_POWER_CURRENT_HARMONICS_MEASUREMENT_TOTAL_HARMONIC_DISTORTION_STANDARD_DEVIATION ViReal64 g 
 "Returns the standard deviation of total harmonic disortions of the measured signal.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:HARMonics:MEASurement:THDistortion:STDDev?\n\nOption Checking:\nNone"
 "\n"

3 all "Current Harmonics Export"
 "Contains attributes for eporting power measurement.\n"

4 all "Current Harmonics Export Name" RSRTX_ATTR_CURRENT_HARMONICS_EXPORT_NAME ViString gs 
 "Defines the path and filename of the results file, available for current harmonics and spectrum power measurements. The file format is CSV. If the file already exists, it will be overwritten.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nEXPort:POWer:NAME\n\nOption Checking:\nNone"
 "\n"

4 all "Current Harmonics Export Save" RSRTX_ATTR_CURRENT_HARMONICS_EXPORT_SAVE ViString s 
 "Saves statistical results of the indicated measurement place to the file that is defined by RSRTX_ATTR_CURRENT_HARMONICS_EXPORT_NAME.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nEXPort:POWer:SAVE\n\nOption Checking:\nNone"
 "\n"

2 all "Inrush Current Measurement"
 "Inrush current measurement.\n"

3 all "Start Power Inrush Current Measurement" RSRTX_ATTR_START_POWER_INRUSH_CURRENT_MEASUREMENT ViString s 
 "Start power inrush current measurement.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:INRushcurrent:EXECute\n\nOption Checking:\nNone"
 "\n"

3 all "Power Inrush Current Measurement Gate Count" RSRTX_ATTR_POWER_INRUSH_CURRENT_MEASUREMENT_GATE_COUNT ViInt32 gs 
 "Power inrush current measurement gate count.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:INRushcurrent:GCOunt\n\nOption Checking:\nNone"
 "\n"

3 all "Power Inrush Current Measurement Add Report" RSRTX_ATTR_POWER_INRUSH_CURRENT_MEASUREMENT_ADD_REPORT ViString s 
 "Adds the result to the report list.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:INRushcurrent:REPort:ADD\n\nOption Checking:\nNone"
 "\n"

3 all "Gate"
 "Attributes with gate repeated capability.\n"

4 all "Power Inrush Current Measurement Gate Start" RSRTX_ATTR_POWER_INRUSH_CURRENT_MEASUREMENT_GATE_START ViReal64 gs 
 "Start of the gate.\n\nAvailable Repeated Capabilities:\nGate (Gate1,Gate2,Gate3)\n\nRemote-control command:\nPOWer:INRushcurrent:GATE<n>:STARt\n\nOption Checking:\nNone"
 "\n"

4 all "Power Inrush Current Measurement Gate Stop" RSRTX_ATTR_POWER_INRUSH_CURRENT_MEASUREMENT_GATE_STOP ViReal64 gs 
 "Stop of the gate.\n\nAvailable Repeated Capabilities:\nGate (Gate1,Gate2,Gate3)\n\nRemote-control command:\nPOWer:INRushcurrent:GATE<n>:STOP\n\nOption Checking:\nNone"
 "\n"

3 all "Results"
 "Results of the inrush current measurement.\n"

4 all "Power Inrush Current Measurement Area Result" RSRTX_ATTR_POWER_INRUSH_CURRENT_MEASUREMENT_AREA_RESULT ViReal64 g 
 "Area result of the measurement.\n\nAvailable Repeated Capabilities:\nGate (Gate1,Gate2,Gate3)\n\nRemote-control command:\nPOWer:INRushcurrent:RESult<n>:AREA?\n\nOption Checking:\nNone"
 "\n"

4 all "Power Inrush Current Measurement Maximum Result" RSRTX_ATTR_POWER_INRUSH_CURRENT_MEASUREMENT_MAXIMUM_RESULT ViReal64 g 
 "Maximum result of the measurement.\n\nAvailable Repeated Capabilities:\nGate (Gate1,Gate2,Gate3)\n\nRemote-control command:\nPOWer:INRushcurrent:RESult<n>:MAXCurrent?\n\nOption Checking:\nNone"
 "\n"

2 all "Ripple Measurement"
 "Ripple mesurement.\n"

3 all "Start Power Ripple Measurement" RSRTX_ATTR_START_POWER_RIPPLE_MEASUREMENT ViString s 
 "Start power ripple measurement.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:RIPPle:EXECute\n\nOption Checking:\nNone"
 "\n"

3 all "Power Ripple Measurement Add Report" RSRTX_ATTR_POWER_RIPPLE_MEASUREMENT_ADD_REPORT ViString s 
 "Adds the result to the report list.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:RIPPle:REPort:ADD\n\nOption Checking:\nNone"
 "\n"

3 all "Results"
 "Results of the ripple analysis.\n"

2 all "Spectrum Measurement"
 "Power spectrum measurement.\n"

3 all "Start Power Spectrum Measurement" RSRTX_ATTR_START_POWER_SPECTRUM_MEASUREMENT ViString s 
 "Starts the spectrum measurement.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SPECtrum:EXECute\n\nOption Checking:\nNone"
 "\n"

3 all "Power Spectrum Measurement Frequency" RSRTX_ATTR_POWER_SPECTRUM_MEASUREMENT_FREQUENCY ViReal64 gs 
 "Sets the SMPS switching frequency.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SPECtrum:FREQuency\n\nOption Checking:\nNone"
 "\n"

3 all "Power Spectrum Measurement Add Report" RSRTX_ATTR_POWER_SPECTRUM_MEASUREMENT_ADD_REPORT ViString s 
 "Adds the result to the report list.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SPECtrum:REPort:ADD\n\nOption Checking:\nNone"
 "\n"

3 all "Results"
 "Power Spectrum Measurement Results.\n"

4 all "Reset Power Spectrum Measurement Results" RSRTX_ATTR_RESET_POWER_SPECTRUM_MEASUREMENT_RESULTS ViString s 
 "Resets the results.\n\nAvailable Repeated Capabilities:\nResultNumber (Res1,Res2,Res3,Res4,Res5,Res6,Res7,Res8,Res9,Res10,Res11,Res12,Res13,Res14,Res15,Res16,Res17,Res18,Res19,Res20,Res21,Res22,Res23,Res24,Res25,Res26,Res27,Res28,Res29,Res30,Res31,Res32,Res33,Res34,Res35,Res36,Res37,Res38,Res39,Res40)\n\nRemote-control command:\nPOWer:SPECtrum:RESult<n>:RESet\n\nOption Checking:\nNone"
 "\n"

2 all "Slew Rate Measurement"
 "Slew rate measurement.\n"

3 all "Start Power Slew Rate Measurement" RSRTX_ATTR_START_POWER_SLEW_RATE_MEASUREMENT ViString s 
 "Starts the slew rate measurement.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SLEWrate:EXECute\n\nOption Checking:\nNone"
 "\n"

3 all "Power Slew Rate Measurement Delta Sample" RSRTX_ATTR_POWER_SLEW_RATE_MEASUREMENT_DELTA_SAMPLE ViReal64 gs 
 "Configures the length of the delta sample\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SLEWrate:DSAMple\n\nOption Checking:\nNone"
 "\n"

3 all "Power Slew Rate Measurement Delta Time" RSRTX_ATTR_POWER_SLEW_RATE_MEASUREMENT_DELTA_TIME ViReal64 gs 
 "Configures the delta time.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SLEWrate:DTIMe\n\nOption Checking:\nNone"
 "\n"

3 all "Power Slew Rate Measurement Add Report" RSRTX_ATTR_POWER_SLEW_RATE_MEASUREMENT_ADD_REPORT ViString s 
 "Adds the result to the report list.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SLEWrate:REPort:ADD\n\nOption Checking:\nNone"
 "\n"

3 all "Results"
 "Slew rate measurement results.\n"

2 all "Modulation Measurement"
 "Power modulation measurement.\n"

3 all "Start Power Modulation Measurement" RSRTX_ATTR_START_POWER_MODULATION_MEASUREMENT ViString s 
 "Starts the measurement.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:MODulation:EXECute\n\nOption Checking:\nNone"
 "\n"

3 all "Power Modulation Measurement Type" RSRTX_ATTR_POWER_MODULATION_MEASUREMENT_TYPE ViInt32 gs rsrtx_rngModulationType
 "Selects modulation type.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:MODulation:TYPE\n\nOption Checking:\nNone"
 "\n"

3 all "Power Modulation Measurement Add Report" RSRTX_ATTR_POWER_MODULATION_MEASUREMENT_ADD_REPORT ViString s 
 "Adds the result to the report list.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:MODulation:REPort:ADD\n\nOption Checking:\nNone"
 "\n"

3 all "Power Modulation Threshold Upper" RSRTX_ATTR_POWER_MODULATION_THRESHOLD_UPPER ViReal64 gs 
 "Sets the threshold for unipolar sources, or the upper level for bipolar sources. The signal is measured at the crossing points of the signal with the threshold.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:MODulation:THReshold[:UPPer]\n\nOption Checking:\nNone"
 "\n"

3 all "Power Modulation Threshold Lower" RSRTX_ATTR_POWER_MODULATION_THRESHOLD_LOWER ViReal64 gs 
 "Sets the lower level for bipolar sources, which determines the crossing points on negative pulses.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:MODulation:THReshold:LOWer\n\nOption Checking:\nNone"
 "\n"

3 all "Power Modulation Threshold Hysteresis" RSRTX_ATTR_POWER_MODULATION_THRESHOLD_HYSTERESIS ViReal64 gs 
 "Sets the hysteresis for correct edge detection.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:MODulation:THReshold:HYSTeresis\n\nOption Checking:\nNone"
 "\n"

3 all "Results"
 "Results of the modulation measurement.\n"

2 all "Dynamic On Resistance Measurement"
 "Dynamic On Resistance Measurement.\n"

3 all "Start Power Dynamic On Resistance Measurement" RSRTX_ATTR_START_POWER_DYNAMIC_ON_RESISTANCE_MEASUREMENT ViString s 
 "Starts the measurement.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:DONResistance:EXECute\n\nOption Checking:\nNone"
 "\n"

3 all "Power Dynamic On Resistance Measurement Add Report" RSRTX_ATTR_POWER_DYNAMIC_ON_RESISTANCE_MEASUREMENT_ADD_REPORT ViString s 
 "Adds the result to the report list.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:DONResistance:REPort:ADD\n\nOption Checking:\nNone"
 "\n"

3 all "Gate"
 "Attributes with gate repeated capability.\n"

4 all "Power Dynamic On Resistance Measurement Gate Start" RSRTX_ATTR_POWER_DYNAMIC_ON_RESISTANCE_MEASUREMENT_GATE_START ViReal64 gs 
 "Start of the gate.\n\nAvailable Repeated Capabilities:\nGate (Gate1,Gate2,Gate3)\n\nRemote-control command:\nPOWer:DONResistance:GATE<n>:START\n\nOption Checking:\nNone"
 "\n"

4 all "Power Dynamic On Resistance Measurement Gate Stop" RSRTX_ATTR_POWER_DYNAMIC_ON_RESISTANCE_MEASUREMENT_GATE_STOP ViReal64 gs 
 "Stop of the gate.\n\nAvailable Repeated Capabilities:\nGate (Gate1,Gate2,Gate3)\n\nRemote-control command:\nPOWer:DONResistance:GATE<n>STOP\n\nOption Checking:\nNone"
 "\n"

3 all "Results"
 "Put a help here\n"

4 all "Power Dynamic On Resistance Measurement Result" RSRTX_ATTR_POWER_DYNAMIC_ON_RESISTANCE_MEASUREMENT_RESULT ViReal64 g 
 "Returns the result of the measurement\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:DONResistance:RESult:DONResistance?\n\nOption Checking:\nNone"
 "\n"

2 all "Efficiency Measurement"
 "Power efficiency measurement.\n"

3 all "Start Power Efficiency Measurement" RSRTX_ATTR_START_POWER_EFFICIENCY_MEASUREMENT ViString s 
 "Starts the measurement.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:EFFiciency:EXECute\n\nOption Checking:\nNone"
 "\n"

3 all "Power Efficiency Measurement Add Report" RSRTX_ATTR_POWER_EFFICIENCY_MEASUREMENT_ADD_REPORT ViString s 
 "Adds the result to the report list.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:EFFiciency:REPort:ADD\n\nOption Checking:\nNone"
 "\n"

3 all "Results"
 "Results of the measurement.\n"

2 all "Switchingloss Measurement"
 "Switchingloss measurement\n"

3 all "Start Power Switchingloss Measurement" RSRTX_ATTR_START_POWER_SWITCHINGLOSS_MEASUREMENT ViString s 
 "Starts the measurement.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SWITching:EXECute\n\nOption Checking:\nNone"
 "\n"

3 all "Power Switchingloss Measurement Type" RSRTX_ATTR_POWER_SWITCHINGLOSS_MEASUREMENT_TYPE ViInt32 gs rsrtx_rngSwitchinglossType
 "Configures switchingloss measurement type.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SWITching:TYPE\n\nOption Checking:\nNone"
 "\n"

3 all "Power Switchingloss Measurement Add Report" RSRTX_ATTR_POWER_SWITCHINGLOSS_MEASUREMENT_ADD_REPORT ViString s 
 "Adds the result to the report list.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SWITching:REPort:ADD\n\nOption Checking:\nNone"
 "\n"

3 all "Gate"
 "Configures gate.\n"

4 all "Set Power Switschingloss Measurement Gate To Waveform" RSRTX_ATTR_SET_POWER_SWITSCHINGLOSS_MEASUREMENT_GATE_TO_WAVEFORM ViString s 
 "Sets gate to waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SWITching:GATE:SWAVe\n\nOption Checking:\nNone"
 "\n"

4 all "Power Switchingloss Measurement Gate Conduction Start" RSRTX_ATTR_POWER_SWITCHINGLOSS_MEASUREMENT_GATE_CONDUCTION_START ViReal64 gs 
 "Start of the gate.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SWITching:GATE:CONDuction:STARt\n\nOption Checking:\nNone"
 "\n"

4 all "Power Switchingloss Measurement Gate Conduction Stop" RSRTX_ATTR_POWER_SWITCHINGLOSS_MEASUREMENT_GATE_CONDUCTION_STOP ViReal64 gs 
 "Stop of the gate.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SWITching:GATE:CONDuction:STOP\n\nOption Checking:\nNone"
 "\n"

4 all "Power Switchingloss Measurement Gate No Conduction Start" RSRTX_ATTR_POWER_SWITCHINGLOSS_MEASUREMENT_GATE_NO_CONDUCTION_START ViReal64 gs 
 "Start of the gate.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SWITching:GATE:NCONduction:STARt\n\nOption Checking:\nNone"
 "\n"

4 all "Power Switchingloss Measurement Gate No Conduction Stop" RSRTX_ATTR_POWER_SWITCHINGLOSS_MEASUREMENT_GATE_NO_CONDUCTION_STOP ViReal64 gs 
 "Stop of the gate.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SWITching:GATE:NCONduction:STOP\n\nOption Checking:\nNone"
 "\n"

4 all "Power Switchingloss Measurement Gate Turn On Start" RSRTX_ATTR_POWER_SWITCHINGLOSS_MEASUREMENT_GATE_TURN_ON_START ViReal64 gs 
 "Start of the gate.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SWITching:GATE:TON:STARt\n\nOption Checking:\nNone"
 "\n"

4 all "Power Switchingloss Measurement Gate Turn On Stop" RSRTX_ATTR_POWER_SWITCHINGLOSS_MEASUREMENT_GATE_TURN_ON_STOP ViReal64 gs 
 "Stop of the gate.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SWITching:GATE:TON:STOP\n\nOption Checking:\nNone"
 "\n"

4 all "Power Switchingloss Measurement Gate Turn Off Start" RSRTX_ATTR_POWER_SWITCHINGLOSS_MEASUREMENT_GATE_TURN_OFF_START ViReal64 gs 
 "Start of the gate.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SWITching:GATE:TOFF:STARt\n\nOption Checking:\nNone"
 "\n"

4 all "Power Switchingloss Measurement Gate Turn Off Stop" RSRTX_ATTR_POWER_SWITCHINGLOSS_MEASUREMENT_GATE_TURN_OFF_STOP ViReal64 gs 
 "Stop of the gate.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SWITching:GATE:TOFF:STOP\n\nOption Checking:\nNone"
 "\n"

3 all "Results"
 "Results of the measurement.\n"

4 all "Power Switchingloss Measurement Conduction Energy Result" RSRTX_ATTR_POWER_SWITCHINGLOSS_MEASUREMENT_CONDUCTION_ENERGY_RESULT ViReal64 g 
 "Result of the measurement\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SWITching:RESult:CONDuction:ENERgy?\n\nOption Checking:\nNone"
 "\n"

4 all "Power Switchingloss Measurement Conduction Power Result" RSRTX_ATTR_POWER_SWITCHINGLOSS_MEASUREMENT_CONDUCTION_POWER_RESULT ViReal64 g 
 "Result of the measurement\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SWITching:RESult:CONDuction:POWer?\n\nOption Checking:\nNone"
 "\n"

4 all "Power Switchingloss Measurement No Conduction Energy Result" RSRTX_ATTR_POWER_SWITCHINGLOSS_MEASUREMENT_NO_CONDUCTION_ENERGY_RESULT ViReal64 g 
 "Result of the measurement\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SWITching:RESult:NCONduction:ENERgy?\n\nOption Checking:\nNone"
 "\n"

4 all "Power Switchingloss Measurement No Conduction Power Result" RSRTX_ATTR_POWER_SWITCHINGLOSS_MEASUREMENT_NO_CONDUCTION_POWER_RESULT ViReal64 g 
 "Result of the measurement\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SWITching:RESult:NCONduction:POWer?\n\nOption Checking:\nNone"
 "\n"

4 all "Power Switchingloss Measurement Turn On Energy Result" RSRTX_ATTR_POWER_SWITCHINGLOSS_MEASUREMENT_TURN_ON_ENERGY_RESULT ViReal64 g 
 "Result of the measurement\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SWITching:RESult:TON:ENERgy?\n\nOption Checking:\nNone"
 "\n"

4 all "Power Switchingloss Measurement Turn On Power Result" RSRTX_ATTR_POWER_SWITCHINGLOSS_MEASUREMENT_TURN_ON_POWER_RESULT ViReal64 g 
 "Result of the measurement\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SWITching:RESult:TON:POWer?\n\nOption Checking:\nNone"
 "\n"

4 all "Power Switchingloss Measurement Turn Off Energy Result" RSRTX_ATTR_POWER_SWITCHINGLOSS_MEASUREMENT_TURN_OFF_ENERGY_RESULT ViReal64 g 
 "Result of the measurement\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SWITching:RESult:TOFF:ENERgy?\n\nOption Checking:\nNone"
 "\n"

4 all "Power Switchingloss Measurement Turn Off Power Result" RSRTX_ATTR_POWER_SWITCHINGLOSS_MEASUREMENT_TURN_OFF_POWER_RESULT ViReal64 g 
 "Result of the measurement\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SWITching:RESult:TOFF:POWer?\n\nOption Checking:\nNone"
 "\n"

4 all "Power Switchingloss Measurement Total Energy Result" RSRTX_ATTR_POWER_SWITCHINGLOSS_MEASUREMENT_TOTAL_ENERGY_RESULT ViReal64 g 
 "Result of the measurement\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SWITching:RESult:TOTal:ENERgy?\n\nOption Checking:\nNone"
 "\n"

4 all "Power Switchingloss Measurement Total Power Result" RSRTX_ATTR_POWER_SWITCHINGLOSS_MEASUREMENT_TOTAL_POWER_RESULT ViReal64 g 
 "Result of the measurement\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SWITching:RESult:TOTal:POWer?\n\nOption Checking:\nNone"
 "\n"

2 all "On Off Measurement"
 "Power on/off measurement.\n"

3 all "Start Power On Off Measurement" RSRTX_ATTR_START_POWER_ON_OFF_MEASUREMENT ViString s 
 "Starts the measurement.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:ONOFf:EXECute\n\nOption Checking:\nNone"
 "\n"

3 all "Power On Off Measurement Type" RSRTX_ATTR_POWER_ON_OFF_MEASUREMENT_TYPE ViInt32 gs rsrtx_rngOnOffType
 "Configures measurement type.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:ONOFf:MEASurement\n\nOption Checking:\nNone"
 "\n"

3 all "Power On Off Measurement Add Report" RSRTX_ATTR_POWER_ON_OFF_MEASUREMENT_ADD_REPORT ViString s 
 "Adds the result to the report list.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:ONOFf:REPort:ADD\n\nOption Checking:\nNone"
 "\n"

3 all "Results"
 "Measurement result\n"

4 all "Power On Off Measurement Result" RSRTX_ATTR_POWER_ON_OFF_MEASUREMENT_RESULT ViReal64 g 
 "Result of the measurement\n\nAvailable Repeated Capabilities:\nOnOffResult (OOR1,OOR2,OOR3)\n\nRemote-control command:\nPOWer:ONOFf:RESult<n>:TIME?\n\nOption Checking:\nNone"
 "\n"

2 all "Safe Operating Area"
 "Configures the Safe Operating Area.\nThe safe operating area is defined by the voltage and current conditions over which a\npower semiconductor device is expected to operate without self-damage. The "Safe\nOperating Area" analysis provides a diagram of the safe operating conditions of your\ndevice.\n"

3 all "Start Power Safe Operating Area Measurement" RSRTX_ATTR_START_POWER_SAFE_OPERATING_AREA_MEASUREMENT ViString s 
 "Starts the safe operating area measurement.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:EXECute\n\nOption Checking:\nNone"
 "\n"

3 all "Restart Power Safe Operating Area Measurement" RSRTX_ATTR_RESTART_POWER_SAFE_OPERATING_AREA_MEASUREMENT ViString s 
 "Restarts the measurement.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:RESTart\n\nOption Checking:\nNone"
 "\n"

3 all "Power Safe Operating Area Add Report" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_ADD_REPORT ViString s 
 "Adds the result to the report list.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:REPort:ADD\n\nOption Checking:\nNone"
 "\n"

3 all "Power Safe Operating Area Scale" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_SCALE ViInt32 gs rsrtx_rngScaleLinLog
 "Sets the scale for the measurement.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:SCALe\n\nOption Checking:\nNone"
 "\n"

3 all "Power Safe Operating Area Mask Scale" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_MASK_SCALE ViInt32 gs rsrtx_rngScaleLinLog
 "Sets the scale for the mask, linear or logarithmic.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:SCALe:MASK\n\nOption Checking:\nNone"
 "\n"

3 all "Power Safe Operating Area Display Scale" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_DISPLAY_SCALE ViInt32 gs rsrtx_rngScaleLinLog
 "Sets a linear or a logarithmic scaled for the displayed results.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:SCALe:DISPlay\n\nOption Checking:\nNone"
 "\n"

3 all "Power Safe Operating Area Linear Add" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_LIN_ADD ViString s 
 "Adds a point.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:LINear:ADD\n\nOption Checking:\nNone"
 "\n"

3 all "Power Safe Operating Area Linear Insert" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_LINEAR_INSERT ViInt32 s 
 "Inserts a point.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:LINear:INSert\n\nOption Checking:\nNone"
 "\n"

3 all "Power Safe Operating Area Linear Remove" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_LINEAR_REMOVE ViInt32 s 
 "Removes a point.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:LINear:REMove\n\nOption Checking:\nNone"
 "\n"

3 all "Power Safe Operating Area Linear Count" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_LINEAR_COUNT ViInt32 g 
 "Queries the number of points.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:LINear:COUNt?\n\nOption Checking:\nNone"
 "\n"

3 all "Power Safe Operating Area Logarithmic Add" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_LOGARITHMIC_ADD ViString s 
 "Adds a point.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:LOGarithmic:ADD\n\nOption Checking:\nNone"
 "\n"

3 all "Power Safe Operating Area Logarithmic Insert" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_LOGARITHMIC_INSERT ViInt32 s 
 "Inserts a point.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:LOGarithmic:INSert\n\nOption Checking:\nNone"
 "\n"

3 all "Power Safe Operating Area Logarithmic Remove" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_LOGARITHMIC_REMOVE ViInt32 s 
 "Removes a point.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:LOGarithmic:REMove\n\nOption Checking:\nNone"
 "\n"

3 all "Power Safe Operating Area Logarithmic Count" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_LOGARITHMIC_COUNT ViInt32 g 
 "Queries the number of points.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:LOGarithmic:COUNt?\n\nOption Checking:\nNone"
 "\n"

3 all "Power Safe Operating Area Selected Point" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_SELECTED_POINT ViInt32 gs 
 "Sets selector repeated capability Point.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nNone"
 "\n"

3 all "Point"
 "Class for Point repcap. Points is selected with attribute RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_SELECTED_POINT.\n"

4 all "Power Safe Operating Area Linear Point Voltage" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_LINEAR_POINT_VOLTAGE ViReal64 gs 
 "Sets the voltage for the correponding point.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:LINear:POINt<m>:VOLTage\n\nOption Checking:\nNone"
 "\n"

4 all "Power Safe Operating Area Linear Point Current" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_LINEAR_POINT_CURRENT ViReal64 gs 
 "Sets the current for the correponding point.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:LINear:POINt<m>:CURRent\n\nOption Checking:\nNone"
 "\n"

4 all "Power Safe Operating Area Linear Point Current Min" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_LINEAR_POINT_CURRENT_MIN ViReal64 gs 
 "Sets the minimum current for the correponding point.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:LINear:POINt<m>:CURRent:MINimum\n\nOption Checking:\nNone"
 "\n"

4 all "Power Safe Operating Area Linear Point Current Max" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_LINEAR_POINT_CURRENT_MAX ViReal64 gs 
 "Sets the maximum current for the correponding point.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:LINear:POINt<m>:CURRent:MAXimum\n\nOption Checking:\nNone"
 "\n"

4 all "Power Safe Operating Area Logarithmic Point Voltage" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_LOGARITHMIC_POINT_VOLTAGE ViReal64 gs 
 "Sets the voltage for the correponding point.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:LOGarithmic:POINt<m>:VOLTage\n\nOption Checking:\nNone"
 "\n"

4 all "Power Safe Operating Area Logarithmic Point Current" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_LOGARITHMIC_POINT_CURRENT ViReal64 gs 
 "Sets the current for the correponding point.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:LOGarithmic:POINt<m>:CURRent\n\nOption Checking:\nNone"
 "\n"

4 all "Power Safe Operating Area Logarithmic Point Current Min" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_LOGARITHMIC_POINT_CURRENT_MIN ViReal64 gs 
 "Sets the minimum current for the correponding point.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:LOGarithmic:POINt<m>:CURRent:MINimum\n\nOption Checking:\nNone"
 "\n"

4 all "Power Safe Operating Area Logarithmic Point Current Max" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_LOGARITHMIC_POINT_CURRENT_MAX ViReal64 gs 
 "Sets the maximum current for the correponding point.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:LOGarithmic:POINt<m>:CURRent:MAXimum\n\nOption Checking:\nNone"
 "\n"

3 all "Results"
 "The results of "Safe Operating Area" measurements.\n"

4 all "Acquisition"
 "Acquisition results.\n"

5 all "Power Safe Operating Area Result Acquisition Tolerance" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_RESULT_ACQUISITION_TOLERANCE ViReal64 gs 
 "Sets acquisition tolerance in percent.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:RESult:ACQuisition:TOLerance\n\nOption Checking:\nNone"
 "\n"

5 all "Power Safe Operating Area Result Acquisition Passed Results" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_RESULT_ACQUISITION_PASSED_RESULTS ViInt32 g 
 "Returns the number of passed points, i.e they are within the defined safe operating area.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:RESult:ACQuisition:PASSed?\n\nOption Checking:\nNone"
 "\n"

5 all "Power Safe Operating Area Result Acquisition Failed Results" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_RESULT_ACQUISITION_FAILED_RESULTS ViInt32 g 
 "Returns the number of points that failed, i.e they are not within the defined safe operating area.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:RESult:ACQuisition:FAILed?\n\nOption Checking:\nNone"
 "\n"

5 all "Power Safe Operating Area Result Acquisition Failed Rate" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_RESULT_ACQUISITION_FAILED_RATE ViReal64 g 
 "Returns the total point fail rate, i.e the ratio of point hits to the number of tested points for the current acquisition.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:RESult:ACQuisition:FRATe?\n\nOption Checking:\nNone"
 "\n"

5 all "Power Safe Operating Area Result Acquisition Number Of Points" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_RESULT_ACQUISITION_NUMBER_OF_POINTS ViInt32 g 
 "Returns the number of points, considered for the current acquisition.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:RESult:ACQuisition:POINts?\n\nOption Checking:\nNone"
 "\n"

5 all "Power Safe Operating Area Result Acquisition Status" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_RESULT_ACQUISITION_STATUS ViBoolean g 
 "Returns the result, passed or failed, of the current aqcuisition measurement.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:RESult:ACQuisition:STATe?\n\nOption Checking:\nNone"
 "\n"

5 all "Power Safe Operating Area Result Acquisition Violation Count" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_RESULT_ACQUISITION_VIOLATION_COUNT ViInt32 g 
 "Returns the acquisition violation count.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:RESult:ACQuisition:VCOunt?\n\nOption Checking:\nNone"
 "\n"

5 all "Point"
 "Class for Point repcap. Points is selected with attribute RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_SELECTED_POINT.\n"

6 all "Power Safe Operating Area Result Acquisition Violation" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_RESULT_ACQUISITION_VIOLATION ViString g 
 "Returns the current and voltage value for the corresponding acquisition violation.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:RESult:ACQuisition:VIOLation<n>?\n\nOption Checking:\nNone"
 "\n"

6 all "Power Safe Operating Area Result Acquisition Violation Current" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_RESULT_ACQUISITION_VIOLATION_CURRENT ViReal64 g 
 "Returns the current value for the corresponding acquisition violation point.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:RESult:ACQuisition:VIOLation<n>:CURRent?\n\nOption Checking:\nNone"
 "\n"

6 all "Power Safe Operating Area Result Acquisition Violation Voltage" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_RESULT_ACQUISITION_VIOLATION_VOLTAGE ViReal64 g 
 "Returns the voltage value for the corresponding acquisition violation point.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:RESult:ACQuisition:VIOLation<n>:VOLTage?\n\nOption Checking:\nNone"
 "\n"

6 all "Voltage Data"
 "Acquires voltage data.\n"

6 all "Voltage Data Conversion"
 "Attributes for conversion of voltage data.\n"

7 all "Power Safe Operating Area Result Acquisition Voltage Data Conversion X Start" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_RESULT_ACQUISITION_VOLTAGE_DATA_CONVERSION_X_START ViReal64 g 
 "Return the time of the first sample of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:RESult:ACQuisition:VIOLation<n>:VOLTage:DATA:XORigin?\n\nOption Checking:\nNone"
 "\n"

7 all "Power Safe Operating Area Result Acquisition Voltage Data Conversion X Increment" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_RESULT_ACQUISITION_VOLTAGE_DATA_CONVERSION_X_INCREMENT ViReal64 g 
 "Return the time difference between two adjacent samples of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:RESult:ACQuisition:VIOLation<n>:VOLTage:DATA:XINCrement?\n\nOption Checking:\nNone"
 "\n"

7 all "Power Safe Operating Area Result Acquisition Voltage Data Conversion Y Start" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_RESULT_ACQUISITION_VOLTAGE_DATA_CONVERSION_Y_START ViReal64 g 
 "Return the voltage value for binary value 0 of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:RESult:ACQuisition:VIOLation<n>:VOLTage:DATA:YORigin?\n\nOption Checking:\nNone"
 "\n"

7 all "Power Safe Operating Area Result Acquisition Voltage Data Conversion Y Increment" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_RESULT_ACQUISITION_VOLTAGE_DATA_CONVERSION_Y_INCREMENT ViReal64 g 
 "Return the voltage value per bit of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:RESult:ACQuisition:VIOLation<n>:VOLTage:DATA:YINCrement?\n\nOption Checking:\nNone"
 "\n"

7 all "Power Safe Operating Area Result Acquisition Voltage Data Conversion Y Resolution" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_RESULT_ACQUISITION_VOLTAGE_DATA_CONVERSION_Y_RESOLUTION ViInt32 g 
 "Return the vertical bit resolution of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:RESult:ACQuisition:VIOLation<n>:VOLTage:DATA:YRESolution?\n\nOption Checking:\nNone"
 "\n"

6 all "Current Data"
 "Acquires current data.\n"

6 all "Current Data Conversion"
 "Attributes for conversion of current data.\n"

7 all "Power Safe Operating Area Result Acquisition Current Data Conversion X Start" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_RESULT_ACQUISITION_CURRENT_DATA_CONVERSION_X_START ViReal64 g 
 "Return the time of the first sample of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:RESult:ACQuisition:VIOLation<n>:CURRent:DATA:XORigin?\n\nOption Checking:\nNone"
 "\n"

7 all "Power Safe Operating Area Result Acquisition Current Data Conversion X Increment" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_RESULT_ACQUISITION_CURRENT_DATA_CONVERSION_X_INCREMENT ViReal64 g 
 "Return the time difference between two adjacent samples of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:RESult:ACQuisition:VIOLation<n>:CURRent:DATA:XINCrement?\n\nOption Checking:\nNone"
 "\n"

7 all "Power Safe Operating Area Result Acquisition Current Data Conversion Y Start" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_RESULT_ACQUISITION_CURRENT_DATA_CONVERSION_Y_START ViReal64 g 
 "Return the voltage value for binary value 0 of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:RESult:ACQuisition:VIOLation<n>:CURRent:DATA:YORigin?\n\nOption Checking:\nNone"
 "\n"

7 all "Power Safe Operating Area Result Acquisition Current Data Conversion Y Increment" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_RESULT_ACQUISITION_CURRENT_DATA_CONVERSION_Y_INCREMENT ViReal64 g 
 "Return the voltage value per bit of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:RESult:ACQuisition:VIOLation<n>:CURRent:DATA:YINCrement?\n\nOption Checking:\nNone"
 "\n"

7 all "Power Safe Operating Area Result Acquisition Current Data Conversion Y Resolution" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_RESULT_ACQUISITION_CURRENT_DATA_CONVERSION_Y_RESOLUTION ViInt32 g 
 "Return the vertical bit resolution of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:RESult:ACQuisition:VIOLation<n>:CURRent:DATA:YRESolution?\n\nOption Checking:\nNone"
 "\n"

4 all "Total"
 "Total results.\n"

5 all "Power Safe Operating Area Result Total Tolerance" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_RESULT_TOTAL_TOLERANCE ViReal64 gs 
 "Sets total tolerance in percent.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:RESult:TOTal:TOLerance\n\nOption Checking:\nNone"
 "\n"

5 all "Power Safe Operating Area Result Total Passed Results" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_RESULT_TOTAL_PASSED_RESULTS ViInt32 g 
 "Returns the number of passed acquisitions, i.e they are within the defined safe operating area.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:RESult:TOTal:PASSed?\n\nOption Checking:\nNone"
 "\n"

5 all "Power Safe Operating Area Result Total Failed Results" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_RESULT_TOTAL_FAILED_RESULTS ViInt32 g 
 "Returns the total number of failed acquisitions, i.e they are not within the defined safe operating area.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:RESult:TOTal:FAILed?\n\nOption Checking:\nNone"
 "\n"

5 all "Power Safe Operating Area Result Total Failed Rate" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_RESULT_TOTAL_FAILED_RATE ViReal64 g 
 "Returns the total acquisition fail rate, i.e the ratio of acquisition hits to the number of tested acquisitions.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:RESult:TOTal:FRATe?\n\nOption Checking:\nNone"
 "\n"

5 all "Power Safe Operating Area Result Total Number Of Acquisitions" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_RESULT_TOTAL_NUMBER_OF_ACQUISITIONS ViInt32 g 
 "Returns the total number of acquisitions used to determine the total result.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:RESult:TOTal:COUNt?\n\nOption Checking:\nNone"
 "\n"

5 all "Power Safe Operating Area Result Total Status" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_RESULT_TOTAL_STATUS ViBoolean g 
 "Returns the result, passed or failed, of the total measurement.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:RESult:TOTal:STATe?\n\nOption Checking:\nNone"
 "\n"

5 all "Power Safe Operating Area Result Total Violation Count" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_RESULT_TOTAL_VIOLATION_COUNT ViInt32 g 
 "Returns the total violation count.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:RESult:TOTal:VCOunt?\n\nOption Checking:\nNone"
 "\n"

5 all "Power Safe Operating Area Result Total Passed Samples" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_RESULT_TOTAL_PASSED_SAMPLES ViInt32 g 
 "Returns the number of passed samples, i.e they are within the defined safe operating area.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:RESult:TOTal:SAMPle:PASSed?\n\nOption Checking:\nNone"
 "\n"

5 all "Power Safe Operating Area Result Total Failed Samples" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_RESULT_TOTAL_FAILED_SAMPLES ViInt32 g 
 "Returns the total number of failed samples, i.e they are not within the defined safe operating area.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:RESult:TOTal:SAMPle:FAILed?\n\nOption Checking:\nNone"
 "\n"

5 all "Power Safe Operating Area Result Total Number Of Samples" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_RESULT_TOTAL_NUMBER_OF_SAMPLES ViInt32 g 
 "Returns the total number of acquisitions used to determine the total result.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:RESult:TOTal:SAMPle:COUNt?\n\nOption Checking:\nNone"
 "\n"

5 all "Point"
 "Class for Point repcap. Points is selected with attribute RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_SELECTED_POINT.\n"

6 all "Power Safe Operating Area Result Total Violation" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_RESULT_TOTAL_VIOLATION ViString g 
 "Returns the current and voltage value for the corresponding total violation.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:RESult:TOTal:VIOLation<n>?\n\nOption Checking:\nNone"
 "\n"

6 all "Power Safe Operating Area Result Total Violation Current" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_RESULT_TOTAL_VIOLATION_CURRENT ViReal64 g 
 "Returns the current of the total violation.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:RESult:TOTal:VIOLation<n>:CURRent?\n\nOption Checking:\nNone"
 "\n"

6 all "Power Safe Operating Area Result Total Violation Voltage" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_RESULT_TOTAL_VIOLATION_VOLTAGE ViReal64 g 
 "Returns the voltage of the total violation.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:RESult:TOTal:VIOLation<n>:VOLTage?\n\nOption Checking:\nNone"
 "\n"

6 all "Voltage Data"
 "Acquires voltage data.\n"

6 all "Voltage Data Conversion"
 "Attributes for conversion of voltage data.\n"

7 all "Power Safe Operating Area Result Total Voltage Data Conversion X Start" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_RESULT_TOTAL_VOLTAGE_DATA_CONVERSION_X_START ViReal64 g 
 "Return the time of the first sample of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:RESult:TOTal:VIOLation<n>:VOLTage:DATA:XORigin?\n\nOption Checking:\nNone"
 "\n"

7 all "Power Safe Operating Area Result Total Voltage Data Conversion X Increment" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_RESULT_TOTAL_VOLTAGE_DATA_CONVERSION_X_INCREMENT ViReal64 g 
 "Return the time difference between two adjacent samples of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:RESult:TOTal:VIOLation<n>:VOLTage:DATA:XINCrement?\n\nOption Checking:\nNone"
 "\n"

7 all "Power Safe Operating Area Result Total Voltage Data Conversion Y Start" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_RESULT_TOTAL_VOLTAGE_DATA_CONVERSION_Y_START ViReal64 g 
 "Return the voltage value for binary value 0 of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:RESult:TOTal:VIOLation<n>:VOLTage:DATA:YORigin?\n\nOption Checking:\nNone"
 "\n"

7 all "Power Safe Operating Area Result Total Voltage Data Conversion Y Increment" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_RESULT_TOTAL_VOLTAGE_DATA_CONVERSION_Y_INCREMENT ViReal64 g 
 "Return the voltage value per bit of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:RESult:TOTal:VIOLation<n>:VOLTage:DATA:YINCrement?\n\nOption Checking:\nNone"
 "\n"

7 all "Power Safe Operating Area Result Total Voltage Data Conversion Y Resolution" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_RESULT_TOTAL_VOLTAGE_DATA_CONVERSION_Y_RESOLUTION ViInt32 g 
 "Return the vertical bit resolution of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:RESult:TOTal:VIOLation<n>:VOLTage:DATA:YRESolution?\n\nOption Checking:\nNone"
 "\n"

6 all "Current Data"
 "Acquires current data.\n"

6 all "Current Data Conversion"
 "Attributes for conversion of current data.\n"

7 all "Power Safe Operating Area Result Total Current Data Conversion X Start" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_RESULT_TOTAL_CURRENT_DATA_CONVERSION_X_START ViReal64 g 
 "Return the time of the first sample of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:RESult:TOTal:VIOLation<n>:CURRent:DATA:XORigin?\n\nOption Checking:\nNone"
 "\n"

7 all "Power Safe Operating Area Result Total Current Data Conversion X Increment" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_RESULT_TOTAL_CURRENT_DATA_CONVERSION_X_INCREMENT ViReal64 g 
 "Return the time difference between two adjacent samples of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:RESult:TOTal:VIOLation<n>:CURRent:DATA:XINCrement?\n\nOption Checking:\nNone"
 "\n"

7 all "Power Safe Operating Area Result Total Current Data Conversion Y Start" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_RESULT_TOTAL_CURRENT_DATA_CONVERSION_Y_START ViReal64 g 
 "Return the voltage value for binary value 0 of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:RESult:TOTal:VIOLation<n>:CURRent:DATA:YORigin?\n\nOption Checking:\nNone"
 "\n"

7 all "Power Safe Operating Area Result Total Current Data Conversion Y Increment" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_RESULT_TOTAL_CURRENT_DATA_CONVERSION_Y_INCREMENT ViReal64 g 
 "Return the voltage value per bit of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:RESult:TOTal:VIOLation<n>:CURRent:DATA:YINCrement?\n\nOption Checking:\nNone"
 "\n"

7 all "Power Safe Operating Area Result Total Current Data Conversion Y Resolution" RSRTX_ATTR_POWER_SAFE_OPERATING_AREA_RESULT_TOTAL_CURRENT_DATA_CONVERSION_Y_RESOLUTION ViInt32 g 
 "Return the vertical bit resolution of the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:SOA:RESult:TOTal:VIOLation<n>:CURRent:DATA:YRESolution?\n\nOption Checking:\nNone"
 "\n"

2 all "Transient Response"
 "Measures the response of a system to a change from equilibrium. This response is described by different properties like the rise time, the overshoot, the settling time, the peak time and the delay time\n"

3 all "Start Power Transient Response Measurement" RSRTX_ATTR_START_POWER_TRANSIENT_RESPONSE_MEASUREMENT ViString s 
 "Starts the transient response measurement.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:TRANsient:EXECute\n\nOption Checking:\nNone"
 "\n"

3 all "Power Transient Response Signal High" RSRTX_ATTR_POWER_TRANSIENT_RESPONSE_SIGNAL_HIGH ViReal64 gs 
 "Sets the expected signal high voltage value.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:TRANsient:SIGHigh\n\nOption Checking:\nNone"
 "\n"

3 all "Power Transient Response Signal Low" RSRTX_ATTR_POWER_TRANSIENT_RESPONSE_SIGNAL_LOW ViReal64 gs 
 "Sets the expected signal low voltage value.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:TRANsient:SIGLow\n\nOption Checking:\nNone"
 "\n"

3 all "Power Transient Response Add Report" RSRTX_ATTR_POWER_TRANSIENT_RESPONSE_ADD_REPORT ViString s 
 "Adds the result to the report list.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:TRANsient:REPort:ADD\n\nOption Checking:\nNone"
 "\n"

3 all "Power Transient Response Start Time" RSRTX_ATTR_POWER_TRANSIENT_RESPONSE_START_TIME ViReal64 gs 
 "Sets the start time.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:TRANsient:STARt\n\nOption Checking:\nNone"
 "\n"

3 all "Power Transient Response Stop Time" RSRTX_ATTR_POWER_TRANSIENT_RESPONSE_STOP_TIME ViReal64 gs 
 "Sets the stop time.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:TRANsient:STOP\n\nOption Checking:\nNone"
 "\n"

3 all "Results"
 "Returns transient response results.\n"

4 all "Power Transient Response Delay Time" RSRTX_ATTR_POWER_TRANSIENT_RESPONSE_DELAY_TIME ViReal64 g 
 "Queries the delay time.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:TRANsient:RESult:DELay?\n\nOption Checking:\nNone"
 "\n"

4 all "Power Transient Response Overshoot" RSRTX_ATTR_POWER_TRANSIENT_RESPONSE_OVERSHOOT ViReal64 g 
 "Queries the overshoot.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:TRANsient:RESult:OVERshoot?\n\nOption Checking:\nNone"
 "\n"

4 all "Power Transient Response Peak Time" RSRTX_ATTR_POWER_TRANSIENT_RESPONSE_PEAK_TIME ViReal64 g 
 "Queries the peak time.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:TRANsient:RESult:PEAK:TIME?\n\nOption Checking:\nNone"
 "\n"

4 all "Power Transient Response Peak Value" RSRTX_ATTR_POWER_TRANSIENT_RESPONSE_PEAK_VALUE ViReal64 g 
 "Queries the peak value.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:TRANsient:RESult:PEAK:VALue?\n\nOption Checking:\nNone"
 "\n"

4 all "Power Transient Response Rise Time" RSRTX_ATTR_POWER_TRANSIENT_RESPONSE_RISE_TIME ViReal64 g 
 "Queries the rise time.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:TRANsient:RESult:RTIMe?\n\nOption Checking:\nNone"
 "\n"

4 all "Power Transient Response Settling Time" RSRTX_ATTR_POWER_TRANSIENT_RESPONSE_SETTLING_TIME ViReal64 g 
 "Queries the settling time.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPOWer:TRANsient:RESult:SETTlingtime?\n\nOption Checking:\nNone"
 "\n"

1 all "Spectrum Analysis"
 "Contains attributes for Spectrum Analysis.\n"

2 all "Spectrum Analysis Enable" RSRTX_ATTR_SPECTRUM_ANALYSIS_ENABLE ViBoolean gs 
 "Switches on the spectrum analysis.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum[:STATe]\n\nOption Checking:\nNone"
 "\n"

2 all "Spectrum Analysis Mode" RSRTX_ATTR_SPECTRUM_ANALYSIS_MODE ViInt32 gs RsRtx_rngSpectrumAnalysisMode
 "Configures spectrum anaylsis mode.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:MODE\n\nOption Checking:\nNone"
 "\n"

2 all "Spectrum Analysis Source" RSRTX_ATTR_SPECTRUM_ANALYSIS_SOURCE ViInt32 gs rsrtx_rngSource
 "Selects the source for the spectrum analysis diagrams.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:SOURce\n\nOption Checking:\nNone"
 "\n"

2 all "Frequency Domain"
 "Contains attributes for Spectrum Frequency Domain.\n"

3 all "Spectrum Frequency Average Complete" RSRTX_ATTR_SPECTRUM_FREQUENCY_AVERAGE_COMPLETE ViBoolean g 
 "Returns the state of spectrum averaging.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:FREQuency:AVERage:COMPlete?\n\nOption Checking:\nNone"
 "\n"

3 all "Spectrum Frequency Average Count" RSRTX_ATTR_SPECTRUM_FREQUENCY_AVERAGE_COUNT ViInt32 gs 
 "Defines the number of spectrums used for averaging.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:FREQuency:AVERage:COUNt\n\nOption Checking:\nNone"
 "\n"

3 all "Spectrum Frequency Magnitude Scale" RSRTX_ATTR_SPECTRUM_FREQUENCY_MAGNITUDE_SCALE ViInt32 gs RsRtx_rngMagnitudeScale
 "Defines the scaling unit of the y-axis.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:FREQuency:MAGNitude:SCALe\n\nOption Checking:\nNone"
 "\n"

3 all "Spectrum Frequency Position" RSRTX_ATTR_SPECTRUM_FREQUENCY_POSITION ViReal64 gs 
 "Defines the position of the spectrum.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:FREQuency:POSition\n\nOption Checking:\nNone"
 "\n"

3 all "Spectrum Frequency Reset" RSRTX_ATTR_SPECTRUM_FREQUENCY_RESET ViString s 
 "Resets the Min, Max and Average waveforms to the current waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:FREQuency:RESet\n\nOption Checking:\nNone"
 "\n"

3 all "Spectrum Frequency Scale" RSRTX_ATTR_SPECTRUM_FREQUENCY_SCALE ViReal64 gs 
 "Sets the scaling of the spectrum analysis waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:FREQuency:SCALe\n\nOption Checking:\nNone"
 "\n"

3 all "Spectrum Frequency Window Position" RSRTX_ATTR_SPECTRUM_FREQUENCY_WINDOW_POSITION ViInt32 gs 
 "Defines the position of the divide bar between normal waveform and FFT window. Sets the vertical position in pixels, measured from the top edge. The vertical display size is 800 px.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nDISPlay:CBAR:FFT[:POSition]\n\nOption Checking:\nNone"
 "\n"

3 all "Spectrum Frequency Window Type" RSRTX_ATTR_SPECTRUM_FREQUENCY_WINDOW_TYPE ViInt32 gs RsRtx_rngSpectrumFrequencyWindowType
 "Window functions are multiplied with the input values and thus can improve the spectrum analysis display.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:FREQuency:WINDow:TYPE\n\nOption Checking:\nNone"
 "\n"

3 all "Spectrum Frequency Start" RSRTX_ATTR_SPECTRUM_FREQUENCY_START ViReal64 gs 
 "Defines the start frequency of the displayed frequency domain at the left display edge: Center - Span/2\nYou can set start and stop frequency instead of defining a center frequency and span.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:FREQuency:STARt\n\nOption Checking:\nNone"
 "\n"

3 all "Spectrum Frequency Stop" RSRTX_ATTR_SPECTRUM_FREQUENCY_STOP ViReal64 gs 
 "Defines the stop frequency of the displayed frequency domain at the right display edge: Center + Span/2\nYou can set start and stop frequency instead of defining a center frequency and span.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:FREQuency:STOP\n\nOption Checking:\nNone"
 "\n"

3 all "Spectrum Frequency Center" RSRTX_ATTR_SPECTRUM_FREQUENCY_CENTER ViReal64 gs 
 "Defines the position of the displayed frequency domain, which is (Center - Span/2) to (Center + Span/2). The width of the domain is defined using the command SPECtrum:FREQuency:SPAN.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:FREQuency:CENTer\n\nOption Checking:\nNone"
 "\n"

3 all "Spectrum Frequency Span" RSRTX_ATTR_SPECTRUM_FREQUENCY_SPAN ViReal64 gs 
 "The span is specified in Hertz and defines the width of the displayed frequency range, which is (Center - Span/2) to (Center + Span/2).\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:FREQuency:SPAN\n\nOption Checking:\nNone"
 "\n"

3 all "Spectrum Frequency Full Span" RSRTX_ATTR_SPECTRUM_FREQUENCY_FULL_SPAN ViString s 
 "Performs the spectrum analysis calculation for the full frequency span.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:FREQuency:FULLspan\n\nOption Checking:\nNone"
 "\n"

3 all "Spectrum Frequency Bandwidth Auto" RSRTX_ATTR_SPECTRUM_FREQUENCY_BANDWIDTH_AUTO ViBoolean gs 
 "Enables the auto resolution bandwidth mode. In the auto mode Span:RBW ratio of 1:100 is set.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:FREQuency:BANDwidth[:RESolution]:AUTO\n\nOption Checking:\nNone"
 "\n"

3 all "Spectrum Frequency Bandwidth Ratio" RSRTX_ATTR_SPECTRUM_FREQUENCY_BANDWIDTH_RATIO ViReal64 gs 
 "Defines the ratio of span (Hz) / resolution bandwidth (Hz). The span/RBW ratio is half the number of points used for FFT which is defined with manual operation in the menu.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:FREQuency:BANDwidth[:RESolution]:RATio\n\nOption Checking:\nNone"
 "\n"

3 all "Spectrum Frequency Bandwidth Resolution" RSRTX_ATTR_SPECTRUM_FREQUENCY_BANDWIDTH_RESOLUTION ViReal64 gs 
 "Defines the resolution bandwidth - the minimum frequency step at which the individual components of a spectrum can be distinguished.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:FREQuency:BANDwidth[:RESolution][:VALue]\n\nOption Checking:\nNone"
 "\n"

2 all "Spectrogram"
 "Contains attributes for Spectrogram Settings.\n"

3 all "Spectrum Spectrogram Reset" RSRTX_ATTR_SPECTRUM_SPECTROGRAM_RESET ViString s 
 "Resets the current spectogram and starts a new recording of information.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:SPECtrogram:RESet\n\nOption Checking:\nNone"
 "\n"

3 all "Spectrum Spectrogram Scale" RSRTX_ATTR_SPECTRUM_SPECTROGRAM_SCALE ViInt32 gs 
 "Defines a zoom factor for the spectogram.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:SPECtrogram:SCALe\n\nOption Checking:\nNone"
 "\n"

3 all "Spectrum Spectrogram Window Position" RSRTX_ATTR_SPECTRUM_SPECTROGRAM_WINDOW_POSITION ViInt32 gs 
 "Defines the position of the divide bar on top of the spectrogram. Sets the vertical position in pixels, measured from the top edge. The vertical display size is 800 px.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nDISPlay:CBAR:SPECtrogram[:POSition]\n\nOption Checking:\nNone"
 "\n"

2 all "Marker"
 "Contains attributes for Spectrogram Marker settings.\n"

3 all "Spectrum Marker Enable" RSRTX_ATTR_SPECTRUM_MARKER_ENABLE ViBoolean gs 
 "Enables the usage of markers.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:MARKer[:ENABle]\n\nOption Checking:\nNone"
 "\n"

3 all "Spectrum Marker Source" RSRTX_ATTR_SPECTRUM_MARKER_SOURCE ViInt32 gs RsRtx_rngSpectrumMarkerSource
 "Sets the source for the marker search function.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:MARKer:SOURce\n\nOption Checking:\nNone"
 "\n"

3 all "Spectrum Marker Display" RSRTX_ATTR_SPECTRUM_MARKER_DISPLAY ViInt32 gs RsRtx_rngSpectrumMarkerDisplay
 "Sets the display settings of the markers on the waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:MARKer:DISPlay\n\nOption Checking:\nNone"
 "\n"

3 all "Spectrum Marker Setup Distance" RSRTX_ATTR_SPECTRUM_MARKER_SETUP_DISTANCE ViReal64 gs 
 "Defines a distance between two subsequent peaks that has to be kept, for the peak to be detected.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:MARKer:SETup:DISTance\n\nOption Checking:\nNone"
 "\n"

3 all "Spectrum Marker Setup Excursion" RSRTX_ATTR_SPECTRUM_MARKER_SETUP_EXCURSION ViReal64 gs 
 "Defines a level deifference between two subsequent peaks that has to be kept, for the peak to be detected.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:MARKer:SETup:EXCursion\n\nOption Checking:\nNone"
 "\n"

3 all "Spectrum Marker Setup Minimum Level" RSRTX_ATTR_SPECTRUM_MARKER_SETUP_MINIMUM_LEVEL ViReal64 gs 
 "Sets the minimum level for marker peak detection.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:MARKer:SETup:MLEVel\n\nOption Checking:\nNone"
 "\n"

3 all "Spectrum Marker Setup Detection Mode" RSRTX_ATTR_SPECTRUM_MARKER_SETUP_DETECTION_MODE ViInt32 gs RsRtx_rngSpectrumMarkerSetupDetectionMode
 "Sets the mode for marker detection.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:MARKer:SETup:MMODe\n\nOption Checking:\nNone"
 "\n"

3 all "Spectrum Marker Setup Maximum Width" RSRTX_ATTR_SPECTRUM_MARKER_SETUP_MAXIMUM_WIDTH ViReal64 gs 
 "Sets the maximum width, that a peak can have for it to be detected.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:MARKer:SETup:MWIDth\n\nOption Checking:\nNone"
 "\n"

3 all "Spectrum Marker Setup Center Screen" RSRTX_ATTR_SPECTRUM_MARKER_SETUP_CENTER_SCREEN ViString s 
 "Sets the range to the center of the screen.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:MARKer:REFerence:SETup:CSCReen\n\nOption Checking:\nNone"
 "\n"

3 all "Spectrum Marker Setup Range To Peak" RSRTX_ATTR_SPECTRUM_MARKER_SETUP_RANGE_TO_PEAK ViString s 
 "Sets the range to the highest peak.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:MARKer:REFerence:SETup:CMPeak\n\nOption Checking:\nNone"
 "\n"

3 all "Spectrum Marker Reference Mode" RSRTX_ATTR_SPECTRUM_MARKER_REFERENCE_MODE ViInt32 gs RsRtx_rngSpectrumMarkerReferenceMode
 "Sets the mode for the selection of the reference peak. The peak with the highest level within the selected settings is set as the reference marker.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:MARKer:REFerence:SETup:MODE\n\nOption Checking:\nNone"
 "\n"

3 all "Spectrum Marker Reference Frequency" RSRTX_ATTR_SPECTRUM_MARKER_REFERENCE_FREQUENCY ViReal64 gs 
 "Sets the center frequency for the capture range, when SPECtrum:MARKer:REFerence:SETup:MODE RANGe.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:MARKer:REFerence:SETup:FREQuency\n\nOption Checking:\nNone"
 "\n"

3 all "Spectrum Marker Reference Span" RSRTX_ATTR_SPECTRUM_MARKER_REFERENCE_SPAN ViReal64 gs 
 "Sets the span range, which is defined as the ratio of the capture range and the width of the specified reference mode, when SPECtrum:MARKer:REFerence:SETup:MODE RANGe.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:MARKer:REFerence:SETup:SPAN\n\nOption Checking:\nNone"
 "\n"

3 all "Spectrum Marker Reference Index" RSRTX_ATTR_SPECTRUM_MARKER_REFERENCE_INDEX ViInt32 gs 
 "Sets the reference marker to the peak with the specified index, when SPECtrum:MARKer:REFerence:SETup:MODE INDicated.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:MARKer:REFerence:SETup:INDex\n\nOption Checking:\nNone"
 "\n"

3 all "Spectrum Marker Table"
 "Contains attributes for Marker Table Settings.\n"

4 all "Spectrum Marker Table Enable" RSRTX_ATTR_SPECTRUM_MARKER_TABLE_ENABLE ViBoolean gs 
 "Enables the display of the marker table.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:MARKer:RTABle:ENABle\n\nOption Checking:\nNone"
 "\n"

4 all "Spectrum Marker Table Detected Peaks" RSRTX_ATTR_SPECTRUM_MARKER_TABLE_DETECTED_PEAKS ViInt32 g 
 "Returns the number of detected peaks.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:MARKer:RCOunt?\n\nOption Checking:\nNone"
 "\n"

4 all "Spectrum Marker Table Result Mode" RSRTX_ATTR_SPECTRUM_MARKER_TABLE_RESULT_MODE ViInt32 gs RsRtx_rngSpectrumMarkerResultMode
 "Sets the mode for the display of the results in the marker table.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:MARKer:RMODe\n\nOption Checking:\nNone"
 "\n"

4 all "Spectrum Marker Table Position" RSRTX_ATTR_SPECTRUM_MARKER_TABLE_POSITION ViInt32 gs RsRtx_rngSpectrumMarkerTablePosition
 "Defines the position of the marker table on the screen: top right, bottom right, or full screen. With full screen setting, the table covers nearly the complete righthand half of the screen.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:MARKer:RTABle:POSition\n\nOption Checking:\nNone"
 "\n"

3 all "Results"
 "The result values include the result number ant the corresponding frequency and magnitude. \n"

4 all "Spectrum Reference Marker Frequency" RSRTX_ATTR_SPECTRUM_REFERENCE_MARKER_FREQUENCY ViReal64 g 
 "Returns the frequency of the reference marker.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:MARKer:RMARker:FREQuency?\n\nOption Checking:\nNone"
 "\n"

4 all "Spectrum Reference Marker Level" RSRTX_ATTR_SPECTRUM_REFERENCE_MARKER_LEVEL ViReal64 g 
 "Returns the level of the reference marker.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:MARKer:RMARker:LEVel?\n\nOption Checking:\nNone"
 "\n"

2 all "Display"
 "Contains attributes for Spectrogram Diagram Display Settings.\n"

3 all "Spectrum Display Magnitude Mode" RSRTX_ATTR_SPECTRUM_DISPLAY_MAGNITUDE_MODE ViBoolean gs 
 "Enables the magnitude coloring of the waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:DIAGram:COLor:MAGNitude:MODE\n\nOption Checking:\nNone"
 "\n"

3 all "Spectrum Display Maximum Level" RSRTX_ATTR_SPECTRUM_DISPLAY_MAXIMUM_LEVEL ViReal64 gs 
 "Sets the level used as a maximum for the color scale selected with SPECtrum:DIAGram:COLor:SCHeme:FDOMain/SPECtrum:DIAGram:COLor:SCHeme:SPECtrogramm . All level values higher than the maximum will be displayed with the maximum color.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:DIAGram:COLor:MAXimum[:LEVel]\n\nOption Checking:\nNone"
 "\n"

3 all "Spectrum Display Minimum Level" RSRTX_ATTR_SPECTRUM_DISPLAY_MINIMUM_LEVEL ViReal64 gs 
 "Sets the level used as a minimum of the color scale selected with SPECtrum:DIAGram:COLor:SCHeme:FDOMain/SPECtrum:DIAGram:COLor:SCHeme:SPECtrogramm. All level values lower than the minimum will be displayed with the minimum color.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:DIAGram:COLor:MINimum[:LEVel]\n\nOption Checking:\nNone"
 "\n"

3 all "Spectrum Display Color Scheme" RSRTX_ATTR_SPECTRUM_DISPLAY_COLOR_SCHEME ViInt32 gs RsRtx_rngSpectrumDisplayColorScheme
 "Sets the color scale for the display of the waveform in the frequency domain diagram.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:DIAGram:COLor:SCHeme:FDOMain\n\nOption Checking:\nNone"
 "\n"

3 all "Spectrum Display Spectrogram Color Scheme" RSRTX_ATTR_SPECTRUM_DISPLAY_SPECTROGRAM_COLOR_SCHEME ViInt32 gs RsRtx_rngSpectrumDisplayColorScheme
 "Sets the color scale for the display of the spectogram.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:DIAGram:COLor:SCHeme:SPECtrogramm\n\nOption Checking:\nNone"
 "\n"

3 all "Spectrum Display Frequency Domain Enable" RSRTX_ATTR_SPECTRUM_DISPLAY_FREQUENCY_DOMAIN_ENABLE ViBoolean gs 
 "Enables the display of the frequency domain diagram.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:DIAGram:FDOMain[:ENABle]\n\nOption Checking:\nNone"
 "\n"

3 all "Spectrum Display Spectrogram Enable" RSRTX_ATTR_SPECTRUM_DISPLAY_SPECTROGRAM_ENABLE ViBoolean gs 
 "Enables the display of the spectrum diagram.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:DIAGram:SPECtrogram[:ENABle]\n\nOption Checking:\nNone"
 "\n"

3 all "Spectrum Display Time Domain Enable" RSRTX_ATTR_SPECTRUM_DISPLAY_TIME_DOMAIN_ENABLE ViBoolean gs 
 "Enables the display of the time domain diagram.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:DIAGram:TDOMain[:ENABle]\n\nOption Checking:\nNone"
 "\n"

2 all "Waveform"
 "Contains attributes for Spectrum Waveform settings.\n"

3 all "Spectrum Waveform Enable" RSRTX_ATTR_SPECTRUM_WAVEFORM_ENABLE ViBoolean gs 
 "Enables or diables the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:WAVeform:SPECtrum[:ENABle]\n\nOption Checking:\nNone"
 "\n"

3 all "Spectrum Waveform Minimum Enable" RSRTX_ATTR_SPECTRUM_WAVEFORM_MINIMUM_ENABLE ViBoolean gs 
 "Enables or diables the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:WAVeform:MINimum[:ENABle]\n\nOption Checking:\nNone"
 "\n"

3 all "Spectrum Waveform Maximum Enable" RSRTX_ATTR_SPECTRUM_WAVEFORM_MAXIMUM_ENABLE ViBoolean gs 
 "Enables or diables the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:WAVeform:MAXimum[:ENABle]\n\nOption Checking:\nNone"
 "\n"

3 all "Spectrum Waveform Average Enable" RSRTX_ATTR_SPECTRUM_WAVEFORM_AVERAGE_ENABLE ViBoolean gs 
 "Enables or diables the indicated waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:WAVeform:AVERage[:ENABle]\n\nOption Checking:\nNone"
 "\n"

2 all "Time Domain"
 "Contains attributes for Spectrum Time Domain settings.\n"

3 all "Spectrum Time Domain Position" RSRTX_ATTR_SPECTRUM_TIME_DOMAIN_POSITION ViReal64 gs 
 "Sets the time position of the analyzed time range.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:TIME:POSition\n\nOption Checking:\nNone"
 "\n"

3 all "Spectrum Time Domain Range" RSRTX_ATTR_SPECTRUM_TIME_DOMAIN_RANGE ViReal64 gs 
 "Sets the time range for the time domain diagram.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:TIME:RANGe\n\nOption Checking:\nNone"
 "\n"

1 all "Digital Voltmeter and Counter"
 "Contains attributes for DVM and Counter settings.\n"

2 all "DVM Enable" RSRTX_ATTR_DVM_ENABLE ViBoolean gs 
 "Enables and disables all configured voltmeter measurements.\n\nAvailable Repeated Capabilities:\nDigitalVoltmeter (DVM1,DVM2,DVM3,DVM4)\n\nRemote-control command:\nDVM<m>:ENABle\n\nOption Checking:\nNone"
 "\n"

2 all "DVM Source" RSRTX_ATTR_DVM_SOURCE ViInt32 gs rsrtx_rngSource
 "Sets the measurement source for the indicated DVM measurement.\n\nAvailable Repeated Capabilities:\nDigitalVoltmeter (DVM1,DVM2,DVM3,DVM4)\n\nRemote-control command:\nDVM<m>:SOURce\n\nOption Checking:\nNone"
 "\n"

2 all "DVM Type" RSRTX_ATTR_DVM_TYPE ViInt32 gs RsRtx_rngDVMType
 "Sets the measurement type for the indicated DVM measurement.\nSet OFF to disable the measurement.\n\nAvailable Repeated Capabilities:\nDigitalVoltmeter (DVM1,DVM2,DVM3,DVM4)\n\nRemote-control command:\nDVM<m>:TYPE\n\nOption Checking:\nNone"
 "\n"

2 all "DVM Position" RSRTX_ATTR_DVM_POSITION ViInt32 gs RsRtx_rngDVMPosition
 "Sets the corner of the screen in which the measurement results are displayed.\n\nAvailable Repeated Capabilities:\nDigitalVoltmeter (DVM1,DVM2,DVM3,DVM4)\n\nRemote-control command:\nDVM<m>:POSition\n\nOption Checking:\nNone"
 "\n"

2 all "DVM Result" RSRTX_ATTR_DVM_RESULT ViReal64 g 
 "Returns the current value of the indicated measurement.\n\nAvailable Repeated Capabilities:\nDigitalVoltmeter (DVM1,DVM2,DVM3,DVM4)\n\nRemote-control command:\nDVM<m>:RESult[:ACTual]?\n\nOption Checking:\nNone"
 "\n"

2 all "DVM Result Status" RSRTX_ATTR_DVM_RESULT_STATUS ViString g 
 "Returns the result value and the status of the result.\nThe status is the decimal representation of a 4-bit register value:\nBit 0 = 1: result is valid\nBit 1 = 1: no result available\nBit 2 = 1: clipping occurs\nBit 3 = 1: no period found\n\nAvailable Repeated Capabilities:\nDigitalVoltmeter (DVM1,DVM2,DVM3,DVM4)\n\nRemote-control command:\nDVM<m>:RESult[:ACTual]:STATus?\n\nOption Checking:\nNone"
 "\n"

2 all "Counter"
 "Contains attributes for Counter Settings and Results.\n"

3 all "Counter Enable" RSRTX_ATTR_COUNTER_ENABLE ViBoolean gs 
 "Enables or disables the trigger counter measurements.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTCOunter:ENABle\n\nOption Checking:\nNone"
 "\n"

3 all "Counter Frequency" RSRTX_ATTR_COUNTER_FREQUENCY ViReal64 g 
 "Returns the frequency of the trigger source.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTCOunter:RESult[:ACTual]:FREQuency?\n\nOption Checking:\nNone"
 "\n"

3 all "Counter Period" RSRTX_ATTR_COUNTER_PERIOD ViReal64 g 
 "Returns the period of the trigger source.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTCOunter:RESult[:ACTual]:PERiod?\n\nOption Checking:\nNone"
 "\n"

3 all "Counter Source" RSRTX_ATTR_COUNTER_SOURCE ViInt32 gs RsRtx_rngCounterSource
 "Sets the measurement source for the counter.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTCOunter:SOURce\n\nOption Checking:\nNone"
 "\n"

1 all "Bode Plot"
 "This class contains methods for the Bode Plot application (option R&S RTM-K36).\n"

2 all "Bode Plot Enable" RSRTX_ATTR_BODE_PLOT_ENABLE ViBoolean gs 
 "Enables the Bode plot diagram.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nBPLot:ENABle\n\nOption Checking:\nK36"
 "\n"

2 all "Bode Plot Start Frequency" RSRTX_ATTR_BODE_PLOT_START_FREQUENCY ViReal64 gs 
 "Sets the start frequency of the sweep for the Bode plot.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nBPLot:FREQuency:STARt\n\nOption Checking:\nK36"
 "\n"

2 all "Bode Plot Stop Frequency" RSRTX_ATTR_BODE_PLOT_STOP_FREQUENCY ViReal64 gs 
 "Sets the stop frequency of the sweep for the Bode plot.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nBPLot:FREQuency:STOP\n\nOption Checking:\nK36"
 "\n"

2 all "Bode Plot Input Channel" RSRTX_ATTR_BODE_PLOT_INPUT_CHANNEL ViInt32 gs RsRtx_rngBodeSourceChannel
 "Selects the channel for the input signal of the DUT.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nBPLot:INPut[:SOURce]\n\nOption Checking:\nNone"
 "\n"

2 all "Bode Plot Output Channel" RSRTX_ATTR_BODE_PLOT_OUTPUT_CHANNEL ViInt32 gs RsRtx_rngBodeSourceChannel
 "Selects the channel for the output signal of the DUT.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nBPLot:OUTPut[:SOURce]\n\nOption Checking:\nNone"
 "\n"

2 all "Bode Plot Gain Enable" RSRTX_ATTR_BODE_PLOT_GAIN_ENABLE ViBoolean gs 
 "Enables the gain waveform for the Bode plot.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nBPLot:GAIN:ENABle\n\nOption Checking:\nNone"
 "\n"

2 all "Bode Plot Gain Position" RSRTX_ATTR_BODE_PLOT_GAIN_POSITION ViReal64 gs 
 "Sets the vertical position of the gain waveform in divisions.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nBPLot:GAIN:POSition\n\nOption Checking:\nNone"
 "\n"

2 all "Bode Plot Gain Scale" RSRTX_ATTR_BODE_PLOT_GAIN_SCALE ViReal64 gs 
 "Sets the vertical scale for the gain waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nBPLot:GAIN:SCALe\n\nOption Checking:\nK36"
 "\n"

2 all "Bode Plot Phase Enable" RSRTX_ATTR_BODE_PLOT_PHASE_ENABLE ViBoolean g 
 "Enables the phase waveform for the Bode plot.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nBPLot:PHASe:ENABle?\n\nOption Checking:\nNone"
 "\n"

2 all "Bode Plot Phase Position" RSRTX_ATTR_BODE_PLOT_PHASE_POSITION ViReal64 g 
 "Sets the vertical position of the phase waveform in divisions.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nBPLot:PHASe:POSition?\n\nOption Checking:\nNone"
 "\n"

2 all "Bode Plot Phase Scale" RSRTX_ATTR_BODE_PLOT_PHASE_SCALE ViReal64 g 
 "Sets the vertical scale for the phase waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nBPLot:PHASe:SCALe?\n\nOption Checking:\nK36"
 "\n"

2 all "Bode Plot Amplitude Enable" RSRTX_ATTR_BODE_PLOT_AMPLITUDE_ENABLE ViBoolean gs 
 "Enables the amplitude waveform for the Bode plot.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nBPLot:AMPLitude:ENABle\n\nOption Checking:\nK36"
 "\n"

2 all "Bode Plot Amplitude Position" RSRTX_ATTR_BODE_PLOT_AMPLITUDE_POSITION ViReal64 gs 
 "Sets the vertical position of the amplitude waveform in divisions.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nBPLot:AMPLitude:POSition\n\nOption Checking:\nK36"
 "\n"

2 all "Bode Plot Amplitude Scale" RSRTX_ATTR_BODE_PLOT_AMPLITUDE_SCALE ViReal64 gs 
 "Sets the vertical scale for the amplitude waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nBPLot:AMPLitude:SCALe\n\nOption Checking:\nK36"
 "\n"

2 all "Start Bode Plot Measurement" RSRTX_ATTR_START_BODE_PLOT_MEASUREMENT ViString s 
 "Starts the Bode plot measurement.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nBPLot:STATe RUN\n\nOption Checking:\nK36"
 "\n"

2 all "Stop Bode Plot Measurement" RSRTX_ATTR_STOP_BODE_PLOT_MEASUREMENT ViString s 
 "Stops the Bode plot measurement.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nBPLot:STATe STOP\n\nOption Checking:\nK36"
 "\n"

2 all "Bode Plot Measurement State" RSRTX_ATTR_BODE_PLOT_MEASUREMENT_STATE ViInt32 gs RsRtx_rngBodePlotMeasurementState
 "Starts or stops the Bode plot measurement.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nBPLot:STATe\n\nOption Checking:\nK36"
 "\n"

2 all "Bode Plot Repeated Measurement Enable" RSRTX_ATTR_BODE_PLOT_REPEATED_MEASUREMENT_ENABLE ViBoolean gs 
 "Repeats the measurement, using the same parameters.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nBPLot:REPeat\n\nOption Checking:\nK36"
 "\n"

2 all "Bode Plot Reset" RSRTX_ATTR_BODE_PLOT_RESET ViString s 
 "Deletes all test results.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nBPLot:RESet\n\nOption Checking:\nNone"
 "\n"

2 all "Bode Plot Amplitude Mode" RSRTX_ATTR_BODE_PLOT_AMPLITUDE_MODE ViInt32 gs RsRtx_rngBodeAmplitudeMode
 "Sets the amplitude mode.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nBPLot:AMPLitude:MODE\n\nOption Checking:\nK36"
 "\n"

2 all "Bode Plot Points Per Decade" RSRTX_ATTR_BODE_PLOT_POINTS_PER_DECADE ViInt32 gs 
 "Sets the number of points per decade that are measured.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nBPLot:POINts:LOGarithmic\n\nOption Checking:\nK36"
 "\n"

2 all "Bode Plot Measurement Points Display Enable" RSRTX_ATTR_BODE_PLOT_MEASUREMENT_POINTS_DISPLAY_ENABLE ViBoolean gs 
 "Enables the display of the measurement points in the bode plot.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nBPLot:MEASurement:POINt[:DISPLAY]\n\nOption Checking:\nK36"
 "\n"

2 all "Bode Plot Measurement Delay" RSRTX_ATTR_BODE_PLOT_MEASUREMENT_DELAY ViReal64 gs 
 "Sets a time delay, that the system waits before measuring the next point of the bode plot.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nBPLot:MEASurement:DELay\n\nOption Checking:\nNone"
 "\n"

2 all "Bode Plot Export Name" RSRTX_ATTR_BODE_PLOT_EXPORT_NAME ViString gs 
 "Path and file name to save Bode plot export data. File format is CSV\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nBPLot:EXPort:NAME\n\nOption Checking:\nK36"
 "\n"

2 all "Bode Plot Export Save" RSRTX_ATTR_BODE_PLOT_EXPORT_SAVE ViString s 
 "Saves the acquisition timestamps table to the file that is defined by RSRTX_ATTR_BODE_PLOT_EXPORT_NAME.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nBPLot:EXPort:SAVE\n\nOption Checking:\nK36"
 "\n"

2 all "Amplitude Profile"
 "This class contains methods for configuring the points in the Bode plot amplitude profile.\n"

3 all "Bode Plot Amplitude Profile Points" RSRTX_ATTR_BODE_PLOT_AMPLITUDE_PROFILE_POINTS ViReal64 gs 
 "Sets the number of different points that you can define for the amplitude profile.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nBPLot:AMPLitude:PROFile:COUNt\n\nOption Checking:\nK36"
 "\n"

3 all "Bode Plot Amplitude Profile Point Amplitude" RSRTX_ATTR_BODE_PLOT_AMPLITUDE_PROFILE_POINT_AMPLITUDE ViReal64 gs 
 "Sets the amplitude of the specified point of the amplitude profile.\n\nAvailable Repeated Capabilities:\nProfilePoint (Point1,Point2,Point3,Point4,Point5,Point6,Point7,Point8,Point9,Point10,Point11,Point12,Point13,Point14,Point15,Point16)\n\nRemote-control command:\nBPLot:AMPLitude:PROFile:POINt<n>:AMPLitude\n\nOption Checking:\nK36"
 "\n"

3 all "Bode Plot Amplitude Profile Point Frequency" RSRTX_ATTR_BODE_PLOT_AMPLITUDE_PROFILE_POINT_FREQUENCY ViReal64 gs 
 "Sets the frequency of the specified point of the amplitude profile.\n\nAvailable Repeated Capabilities:\nProfilePoint (Point1,Point2,Point3,Point4,Point5,Point6,Point7,Point8,Point9,Point10,Point11,Point12,Point13,Point14,Point15,Point16)\n\nRemote-control command:\nBPLot:AMPLitude:PROFile:POINt<n>:FREQuency\n\nOption Checking:\nK36"
 "\n"

2 all "Marker"
 "This class contains methods for the Bode plot marker table.\n"

3 all "Bode Plot Marker Frequency" RSRTX_ATTR_BODE_PLOT_MARKER_FREQUENCY ViReal64 gs 
 "Returns the frequency for the specified marker.\n\nAvailable Repeated Capabilities:\nBodeMarker (BodeMark1,BodeMark2)\n\nRemote-control command:\nBPLot:MARKer<m>:FREQuency\n\nOption Checking:\nK36"
 "\n"

3 all "Bode Plot Marker Gain" RSRTX_ATTR_BODE_PLOT_MARKER_GAIN ViReal64 g 
 "Returns the gain for the specified marker.\n\nAvailable Repeated Capabilities:\nBodeMarker (BodeMark1,BodeMark2)\n\nRemote-control command:\nBPLot:MARKer<m>:GAIN?\n\nOption Checking:\nK36"
 "\n"

3 all "Bode Plot Marker Phase" RSRTX_ATTR_BODE_PLOT_MARKER_PHASE ViReal64 g 
 "Returns the phase value for the specified marker.\n\nAvailable Repeated Capabilities:\nBodeMarker (BodeMark1,BodeMark2)\n\nRemote-control command:\nBPLot:MARKer<m>:PHASe?\n\nOption Checking:\nK36"
 "\n"

3 all "Bode Plot Marker Index" RSRTX_ATTR_BODE_PLOT_MARKER_INDEX ViReal64 gs 
 "Returns the index for the specified marker.\n\nAvailable Repeated Capabilities:\nBodeMarker (BodeMark1,BodeMark2)\n\nRemote-control command:\nBPLot:MARKer<m>:INDex\n\nOption Checking:\nK36"
 "\n"

3 all "Bode Plot Marker Frequency Difference" RSRTX_ATTR_BODE_PLOT_MARKER_FREQUENCY_DIFFERENCE ViReal64 g 
 "Returns the delta value of the frequency between the two markers.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nBPLot:MARKer<m>:DIFFerence:FREQ?\n\nOption Checking:\nK36"
 "\n"

3 all "Bode Plot Marker Gain Difference" RSRTX_ATTR_BODE_PLOT_MARKER_GAIN_DIFFERENCE ViReal64 g 
 "Returns the delta value of the gain between the two markers.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nBPLot:MARKer<m>:DIFFerence:GAIN?\n\nOption Checking:\nK36"
 "\n"

3 all "Bode Plot Marker Phase Difference" RSRTX_ATTR_BODE_PLOT_MARKER_PHASE_DIFFERENCE ViReal64 g 
 "Returns the delta value of the phase between the two markers.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nBPLot:MARKer<m>:DIFFerence:PHASe?\n\nOption Checking:\nK36"
 "\n"

3 all "Reset Bode Plot Markers" RSRTX_ATTR_RESET_BODE_PLOT_MARKERS ViString s 
 "Resets the markers to their initial positions. This is helpful if the markers have disappeared from the display or need to be moved for a larger distance.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nBPLot:MARKer<m>:SSCReen\n\nOption Checking:\nK36"
 "\n"

2 all "Results"
 "This class contains methods for accessing the results of Bode plot measurements.\n"

1 all "Generator"
 "The R&S RTO includes an integrated waveform generator which can generate input signals and patterns during testing.\nYou can setup and output two waveform generators and a pattern generator. It is possible to couple and synchronize the settings of the different generators and enable them on a trigger signal. With each of the waveform generators, one can output simple functions, modulated sine waveform, arbitrary waveforms and sweep waveforms.\n"

2 all "Waveform Generator"
 "Integrated waveform generator which can generate input signals.\n"

3 all "Function Generator"
 "The R&S RTO function generator can generate input signals during testing. These signals can be used for example, when testing circuits.\n"

4 all "Waveform Generator Function Type" RSRTX_ATTR_WAVEFORM_GENERATOR_FUNCTION_TYPE ViInt32 gs RsRtx_rngWaveformGeneratorFunctionType
 "Sets the type of waveform to be generated for the function generator.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nWGENerator:FUNCtion\n\nOption Checking:\nNone"
 "\n"

4 all "Waveform Generator Frequency" RSRTX_ATTR_WAVEFORM_GENERATOR_FREQUENCY ViReal64 gs 
 "Sets the frequency of the waveform. The available frequency range depends on the selected function type.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nWGENerator:FREQuency\n\nOption Checking:\nNone"
 "\n"

4 all "Waveform Generator Pulse Duty Cycle" RSRTX_ATTR_WAVEFORM_GENERATOR_PULSE_DUTY_CYCLE ViReal64 gs 
 "Sets the duty cycle for a square waveform. The duty cycle expresses for what percentage of the period, the signal state is high.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nWGENerator:FUNCtion:PULSe:DCYCle\n\nOption Checking:\nNone"
 "\n"

4 all "Waveform Generator Pulse Edge Time" RSRTX_ATTR_WAVEFORM_GENERATOR_PULSE_EDGE_TIME ViReal64 gs 
 "Configures pulse edge time.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nWGENerator:FUNCtion:PULSe:ETIMe\n\nOption Checking:\nNone"
 "\n"

4 all "Waveform Generator Ramp Polarity" RSRTX_ATTR_WAVEFORM_GENERATOR_RAMP_POLARITY ViInt32 gs rsrtx_rngPolarity
 "Configures the ramp waveform polarity.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nWGENerator:FUNCtion:RAMP:POLarity\n\nOption Checking:\nNone"
 "\n"

4 all "Waveform Generator Exponential Polarity" RSRTX_ATTR_WAVEFORM_GENERATOR_EXPONENTIAL_POLARITY ViInt32 gs rsrtx_rngPolarity
 "Configures the exponential waveform polarity.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nWGENerator:FUNCtion:EXPonential:POLarity\n\nOption Checking:\nNone"
 "\n"

4 all "Waveform Generator Triangle Symmetry" RSRTX_ATTR_WAVEFORM_GENERATOR_TRIANGLE_SYMMETRY ViReal64 gs 
 "Sets the symmetry for the triangle waveform. 50% defines symmetric triangles. Values <50% define triangles with steeper rising edge leaned to the left. Values >50% define triangles with steeper falling edge leaned to the right.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nWGENerator:TRIangle:SYMMetry\n\nOption Checking:\nNone"
 "\n"

3 all "Modulation"
 "Modulation is when properties of an original periodic waveform, the carrier signal, are varied according to a second modulating signal. The type of modulation used determines which properties are changed.\n"

4 all "Waveform Generator Modulation Enabled" RSRTX_ATTR_WAVEFORM_GENERATOR_MODULATION_ENABLED ViBoolean gs 
 "Enables the waveform modulation.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nWGENerator:MODulation[:ENABLE]\n\nOption Checking:\nNone"
 "\n"

4 all "Waveform Generator Modulation Type" RSRTX_ATTR_WAVEFORM_GENERATOR_MODULATION_TYPE ViInt32 gs RsRtx_rngWaveformGeneratorModulationType
 "Sets the modulation type.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nWGENerator:MODulation:TYPE\n\nOption Checking:\nNone"
 "\n"

4 all "Waveform Generator Modulation Function Type" RSRTX_ATTR_WAVEFORM_GENERATOR_MODULATION_FUNCTION_TYPE ViInt32 gs RsRtx_rngWaveformGeneratorModulationFunctionType
 "Sets the function type of modulation.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nWGENerator:MODulation:FUNCtion\n\nOption Checking:\nNone"
 "\n"

4 all "Waveform Generator Modulation Ramp Polarity" RSRTX_ATTR_WAVEFORM_GENERATOR_MODULATION_RAMP_POLARITY ViInt32 gs rsrtx_rngPolarity
 "Configures the ramp waveform polarity.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nWGENerator:MODulation:RAMP:POLarity\n\nOption Checking:\nNone"
 "\n"

4 all "AM"
 "For amplitude modulation (AM), the amplitude of the carrier signal is varied according to the modulation signal.\n"

5 all "Waveform Generator AM Modulation Frequency" RSRTX_ATTR_WAVEFORM_GENERATOR_AM_MODULATION_FREQUENCY ViReal64 gs 
 "Sets the frequency of the modulation waveform for amplitude modulation.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nWGENerator:MODulation:AM:FREQuency\n\nOption Checking:\nNone"
 "\n"

5 all "Waveform Generator AM Modulation Depth" RSRTX_ATTR_WAVEFORM_GENERATOR_AM_MODULATION_DEPTH ViReal64 gs 
 "Sets the amplitude modulation depth.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nWGENerator:MODulation:AM:DEPTh\n\nOption Checking:\nNone"
 "\n"

4 all "FM"
 "For frequency modulation (FM), the frequency of the carrier signal is varied according to the modulation signal.\n"

5 all "Waveform Generator FM Modulation Frequency" RSRTX_ATTR_WAVEFORM_GENERATOR_FM_MODULATION_FREQUENCY ViReal64 gs 
 "Sets the frequency of the modulation waveform for frequency modulation.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nWGENerator:MODulation:FM:FREQuency\n\nOption Checking:\nNone"
 "\n"

5 all "Waveform Generator FM Modulation Frequency Deviation" RSRTX_ATTR_WAVEFORM_GENERATOR_FM_MODULATION_FREQUENCY_DEVIATION ViReal64 gs 
 "Sets the frequency deviation, the maximum difference between and FM modulated signal and the carrier signal.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nWGENerator:MODulation:FM:DEViation\n\nOption Checking:\nNone"
 "\n"

4 all "ASK"
 "For amplitude modulation (AM), the amplitude of the carrier signal is varied according to the modulation signal.\n"

5 all "Waveform Generator ASK Modulation Frequency" RSRTX_ATTR_WAVEFORM_GENERATOR_ASK_MODULATION_FREQUENCY ViReal64 gs 
 "Sets the frequency of the modulation waveform for ASK modulation.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nWGENerator:MODulation:ASK:FREQuency\n\nOption Checking:\nNone"
 "\n"

5 all "Waveform Generator ASK Modulation Depth" RSRTX_ATTR_WAVEFORM_GENERATOR_ASK_MODULATION_DEPTH ViReal64 gs 
 "Sets the ASK modulation depth.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nWGENerator:MODulation:ASK:DEPTh\n\nOption Checking:\nNone"
 "\n"

4 all "FSK"
 "For frequency shift keying (FSK) modulation, the signal switches between Frequency 1 and Frequency 2 at a Hop rate.\n"

5 all "Waveform Generator FSK Modulation Hopping Frequency" RSRTX_ATTR_WAVEFORM_GENERATOR_FSK_MODULATION_HOPPING_FREQUENCY ViReal64 gs 
 "Sets the hopping frequency.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nWGENerator:MODulation:FSK:HFREquency\n\nOption Checking:\nNone"
 "\n"

5 all "Waveform Generator FSK Modulation Rate" RSRTX_ATTR_WAVEFORM_GENERATOR_FSK_MODULATION_RATE ViReal64 gs 
 "Sets the hop rate, the time before a switch from the carrier frequency and the modulation frequency.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nWGENerator:MODulation:FSK:RATE\n\nOption Checking:\nNone"
 "\n"

3 all "Sweep"
 "In the sweep mode, the R&S RTO generates a signal whose frequency gradually changes from the Start frequency to the Stop freuqency for a certain Sweep time.\n"

4 all "Waveform Generator Sweep Enabled" RSRTX_ATTR_WAVEFORM_GENERATOR_SWEEP_ENABLED ViBoolean gs 
 "Enables the sweep.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nWGENerator:SWEep[:ENABle]\n\nOption Checking:\nNone"
 "\n"

4 all "Waveform Generator Sweep Type" RSRTX_ATTR_WAVEFORM_GENERATOR_SWEEP_TYPE ViInt32 gs rsrtx_rngScaleLinLog
 "Configures the sweep type.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nWGENerator:SWEep:TYPE\n\nOption Checking:\nNone"
 "\n"

4 all "Waveform Generator Sweep Start Frequency" RSRTX_ATTR_WAVEFORM_GENERATOR_SWEEP_START_FREQUENCY ViReal64 gs 
 "Sets the start frequency of the sweep range.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nWGENerator:SWEep:FSTart\n\nOption Checking:\nNone"
 "\n"

4 all "Waveform Generator Sweep Stop Frequency" RSRTX_ATTR_WAVEFORM_GENERATOR_SWEEP_STOP_FREQUENCY ViReal64 gs 
 "Sets the stop frequency of the sweep range.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nWGENerator:SWEep:FEND\n\nOption Checking:\nNone"
 "\n"

4 all "Waveform Generator Sweep Time" RSRTX_ATTR_WAVEFORM_GENERATOR_SWEEP_TIME ViReal64 gs 
 "Sets the duration of the sweep.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nWGENerator:SWEep:TIME\n\nOption Checking:\nNone"
 "\n"

3 all "Arbitrary"
 "The arbitrary waveform generator allows you to output a user-defined waveform for testing your devices. You can output a waveform from a file or from the current R&S RTO reference curve format. Files in *.csv and *.bin formats are supported. This files must follow a defined structure.\n"

4 all "Waveform Generator Arbitrary File Name" RSRTX_ATTR_WAVEFORM_GENERATOR_ARBITRARY_FILE_NAME ViString gs 
 "Sets the file path and the file for an arbitrary waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nWGENerator:ARBitrary[:FILE]:NAME\n\nOption Checking:\nNone"
 "\n"

4 all "Waveform Generator Arbitrary Open File" RSRTX_ATTR_WAVEFORM_GENERATOR_ARBITRARY_OPEN_FILE ViString s 
 "Loads the arbitrary waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nWGENerator:ARBitrary[:FILE]:OPEN\n\nOption Checking:\nNone"
 "\n"

4 all "Waveform Generator Arbitrary Source" RSRTX_ATTR_WAVEFORM_GENERATOR_ARBITRARY_SOURCE ViInt32 gs RsRtx_rngWaveformGeneratorArbitrarySource
 "Selects the oscilloscope source, from which the arbitrary signal is loaded.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nWGENerator:ARBitrary:SOURce\n\nOption Checking:\nNone"
 "\n"

4 all "Waveform Generator Arbitrary Update" RSRTX_ATTR_WAVEFORM_GENERATOR_ARBITRARY_UPDATE ViString s 
 "Loads the waveform from the selected signal source.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nWGENerator:ARBitrary:UPDate\n\nOption Checking:\nNone"
 "\n"

4 all "Waveform Generator Arbitrary Range Start" RSRTX_ATTR_WAVEFORM_GENERATOR_ARBITRARY_RANGE_START ViReal64 gs 
 "Sets the start time of the copied waveform part in seconds.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nWGENerator:ARBitrary:RANGe:START\n\nOption Checking:\nNone"
 "\n"

4 all "Waveform Generator Arbitrary Range End" RSRTX_ATTR_WAVEFORM_GENERATOR_ARBITRARY_RANGE_END ViReal64 gs 
 "Sets the end time of the copied waveform part in seconds.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nWGENerator:ARBitrary:RANGe:STOP\n\nOption Checking:\nNone"
 "\n"

4 all "Waveform Generator Arbitrary Display Enable" RSRTX_ATTR_WAVEFORM_GENERATOR_ARBITRARY_DISPLAY_ENABLE ViBoolean gs 
 "Enables the display of the arbitrary waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nWGENerator:ARBitrary:VISible\n\nOption Checking:\nNone"
 "\n"

3 all "Output"
 "Configures the output values of generator.\n"

4 all "Waveform Generator Output Enabled" RSRTX_ATTR_WAVEFORM_GENERATOR_OUTPUT_ENABLED ViBoolean gs 
 "Enables the waveform generator and outputs the waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nWGENerator:OUTPut[:ENABle]\n\nOption Checking:\nNone"
 "\n"

4 all "Waveform Generator Output Amplitude" RSRTX_ATTR_WAVEFORM_GENERATOR_OUTPUT_AMPLITUDE ViReal64 gs 
 "Sets the amplitude, peak to peak voltage, of the output waveform. This is defined as the voltage difference between the maximum and the minimum voltage levels.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nWGENerator:VOLTage\n\nOption Checking:\nNone"
 "\n"

4 all "Waveform Generator Output Offset" RSRTX_ATTR_WAVEFORM_GENERATOR_OUTPUT_OFFSET ViReal64 gs 
 "Sets a voltage offset.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nWGENerator:VOLTage:OFFSet\n\nOption Checking:\nNone"
 "\n"

4 all "Waveform Generator Output User Load" RSRTX_ATTR_WAVEFORM_GENERATOR_OUTPUT_USER_LOAD ViInt32 gs RsRtx_rngWaveformGeneratorLoad
 "Sets the load of the DUT at its connection.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nWGENerator:OUTPut:LOAD\n\nOption Checking:\nNone"
 "\n"

4 all "Waveform Generator Output Destination" RSRTX_ATTR_WAVEFORM_GENERATOR_OUTPUT_DESTINATION ViInt32 gs RsRtx_rngWaveformGeneratorOutputDestination
 "Configures the output destination.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nWGENerator:OUTPut:DESTination\n\nOption Checking:\nNone"
 "\n"

3 all "Noise"
 "Configures the noise of attributes.\n"

4 all "Waveform Generator Noise Level Percent" RSRTX_ATTR_WAVEFORM_GENERATOR_NOISE_LEVEL_PERCENT ViReal64 gs 
 "Sets the noise level in percentage of the amplitude.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nWGENerator:NOISe:RELative\n\nOption Checking:\nNone"
 "\n"

4 all "Waveform Generator Noise Absolute Level" RSRTX_ATTR_WAVEFORM_GENERATOR_NOISE_ABSOLUTE_LEVEL ViReal64 gs 
 "Sets the level of the noise in volts.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nWGENerator:NOISe:ABSolute\n\nOption Checking:\nNone"
 "\n"

3 all "Burst"
 "This class contains settings for the waveform generator burst mode. With the burst mode, you can output a waveform for a set number of times.\n"

4 all "Waveform Generator Burst Enable" RSRTX_ATTR_WAVEFORM_GENERATOR_BURST_ENABLE ViBoolean gs 
 "Enables or disables the burst for the generator.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nWGENerator:BURSt[:STATe]\n\nOption Checking:\nNone"
 "\n"

4 all "Waveform Generator Burst Cycles" RSRTX_ATTR_WAVEFORM_GENERATOR_BURST_CYCLES ViInt32 gs 
 "Sets the number of times the generator outputs one cycle of the waveform per burst.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nWGENerator:BURSt:NCYCle\n\nOption Checking:\nNone"
 "\n"

4 all "Waveform Generator Burst Idle Time" RSRTX_ATTR_WAVEFORM_GENERATOR_BURST_IDLE_TIME ViReal64 gs 
 "Sets the idle time between two burst cycles.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nWGENerator:BURSt:ITIMe\n\nOption Checking:\nNone"
 "\n"

4 all "Waveform Generator Burst Phase Offset" RSRTX_ATTR_WAVEFORM_GENERATOR_BURST_PHASE_OFFSET ViReal64 gs 
 "Sets the start phase of the burst.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nWGENerator:BURSt:PHASe\n\nOption Checking:\nNone"
 "\n"

2 all "Pattern Generator"
 "Includes an integrated pattern generator which can generate patterns during testing.\n"

3 all "Pattern Generator Enabled" RSRTX_ATTR_PATTERN_GENERATOR_ENABLED ViBoolean gs 
 "Enables the pattern generator and outputs the waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPGENerator:PATTern:STATe\n\nOption Checking:\nNone"
 "\n"

3 all "Pattern Generator Function Type" RSRTX_ATTR_PATTERN_GENERATOR_FUNCTION_TYPE ViInt32 gs RsRtx_rngPatternGeneratorFunctionType
 "Selects the pattern generator function.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPGENerator:FUNCtion\n\nOption Checking:\nNone"
 "\n"

3 all "Pattern Generator Frequency" RSRTX_ATTR_PATTERN_GENERATOR_FREQUENCY ViReal64 gs 
 "Configures generator frequency.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPGENerator:PATTern:FREQuency\n\nOption Checking:\nNone"
 "\n"

3 all "Pattern Generator Period" RSRTX_ATTR_PATTERN_GENERATOR_PERIOD ViReal64 gs 
 "Configures pattern generator period.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPGENerator:PATTern:PERiod\n\nOption Checking:\nNone"
 "\n"

3 all "Pattern Generator Polarity" RSRTX_ATTR_PATTERN_GENERATOR_POLARITY ViInt32 gs rsrtx_rngChannelPolarity
 "Configures the waveform polarity.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPGENerator:PATTern:SQUarewave:POLarity\n\nOption Checking:\nNone"
 "\n"

3 all "Pattern Generator Duty Cycle" RSRTX_ATTR_PATTERN_GENERATOR_DUTY_CYCLE ViReal64 gs 
 "Configures the waveform duty cycle.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPGENerator:PATTern:SQUarewave:DCYCle\n\nOption Checking:\nNone"
 "\n"

3 all "Pattern Generator Sample Time" RSRTX_ATTR_PATTERN_GENERATOR_SAMPLE_TIME ViReal64 gs 
 "Configures generator sample time.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPGENerator:PATTern:STIMe\n\nOption Checking:\nNone"
 "\n"

3 all "Pattern Generator Counter Direction" RSRTX_ATTR_PATTERN_GENERATOR_COUNTER_DIRECTION ViInt32 gs RsRtx_rngPatternGeneratorCounterDirection
 "Configures the counter direction.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPGENerator:PATTern:COUNter:DIRection\n\nOption Checking:\nNone"
 "\n"

3 all "Pattern Generator Counter Frequency" RSRTX_ATTR_PATTERN_GENERATOR_COUNTER_FREQUENCY ViReal64 gs 
 "Configures generator counter  frequency.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPGENerator:PATTern:COUNter:FREQuency\n\nOption Checking:\nNone"
 "\n"

3 all "Pattern Generator Burst Enabled" RSRTX_ATTR_PATTERN_GENERATOR_BURST_ENABLED ViBoolean gs 
 "Turns burst on/off.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPGENerator:PATTern:BURSt:STATe\n\nOption Checking:\nNone"
 "\n"

3 all "Pattern Generator Burst Cycles" RSRTX_ATTR_PATTERN_GENERATOR_BURST_CYCLES ViInt32 gs 
 "Configures number of burst cycles.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPGENerator:PATTern:BURSt:NCYCle\n\nOption Checking:\nNone"
 "\n"

3 all "Pattern Generator Idle Time" RSRTX_ATTR_PATTERN_GENERATOR_IDLE_TIME ViReal64 gs 
 "Configures generator idle time.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPGENerator:PATTern:ITIMe\n\nOption Checking:\nNone"
 "\n"

3 all "Pattern Generator Trigger Mode" RSRTX_ATTR_PATTERN_GENERATOR_TRIGGER_MODE ViInt32 gs RsRtx_rngPatternGeneratorTriggerMode
 "Configures the trigger mode.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPGENerator:PATTern:TRIGger:MODE\n\nOption Checking:\nNone"
 "\n"

3 all "Pattern Generator Trigger Run Single" RSRTX_ATTR_PATTERN_GENERATOR_TRIGGER_RUN_SINGLE ViString s 
 "Run pattern trigur once.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPGENerator:PATTern:TRIGger:SINGle\n\nOption Checking:\nNone"
 "\n"

3 all "Pattern Generator External Trigger Slope" RSRTX_ATTR_PATTERN_GENERATOR_EXTERNAL_TRIGGER_SLOPE ViInt32 gs rsrtx_rngTriggerSlope
 "Defines the slope of the external arbitrary pattern trigger.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPGENerator:PATTern:TRIGger:EXTern:SLOPe\n\nOption Checking:\nNone"
 "\n"

3 all "ARB"
 "Configures ARB waveform.\n"

4 all "Pattern Generator ARB Pattern Length" RSRTX_ATTR_PATTERN_GENERATOR_ARB_PATTERN_LENGTH ViInt32 gs 
 "Configures pattern generator data length.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPGENerator:PATTern:ARBitrary:DATA:LENGth\n\nOption Checking:\nNone"
 "\n"

4 all "Pattern Generator ARB Index" RSRTX_ATTR_PATTERN_GENERATOR_ARB_INDEX ViInt32 gs 
 "Configures the ARB index.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPGENerator:PATTern:ARBitrary:DATA:APPend:INDex\n\nOption Checking:\nNone"
 "\n"

3 all "Manual"
 "Configures manual.\n"

4 all "Pattern Generator Manual State" RSRTX_ATTR_PATTERN_GENERATOR_MANUAL_STATE ViBoolean gs 
 "Configures manual state.\n\nAvailable Repeated Capabilities:\nOutputPin (P0,P1,P2,P3)\n\nRemote-control command:\nPGENerator:MANual:STATe<s>\n\nOption Checking:\nNone"
 "\n"

3 all "PWM"
 "You can use the pattern generator to generate several pulse width modulated (PWM)\nsignals: PWM, PWM - RGB LED, PWM-TestSignals.\n"

4 all "Pattern Generator PWM Motor Enable" RSRTX_ATTR_PATTERN_GENERATOR_PWM_MOTOR_ENABLE ViBoolean gs 
 "Switches the motor on or off if the motor driver uses a dedicated enable signal.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPGENerator:PATTern:PWM:ENABle\n\nOption Checking:\nNone"
 "\n"

4 all "Pattern Generator PWM Motor Direction" RSRTX_ATTR_PATTERN_GENERATOR_PWM_MOTOR_DIRECTION ViInt32 gs RsRtx_rngPWMMotorDirection
 "Sets the direction of motor rotation.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPGENerator:PATTern:PWM:DIRection\n\nOption Checking:\nNone"
 "\n"

4 all "Pattern Generator PWM Duty Cycle" RSRTX_ATTR_PATTERN_GENERATOR_PWM_DUTY_CYCLE ViReal64 gs 
 "Sets the duty cycle of the PWM signal at P0, and thus the motor speed.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPGENerator:PATTern:PWM:DCYCle\n\nOption Checking:\nNone"
 "\n"

4 all "Pattern Generator PWM LED Intensity" RSRTX_ATTR_PATTERN_GENERATOR_PWM_LED_INTENSITY ViReal64 gs 
 "Sets the duty cycle of the signal at P3, which corresponds to the intensity of the light. You can use this signal if the controller supports separate intensity control.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPGENerator:PATTern:LED:INTens\n\nOption Checking:\nNone"
 "\n"

4 all "Pattern Generator PWM LED Intensity Blue" RSRTX_ATTR_PATTERN_GENERATOR_PWM_LED_INTENSITY_BLUE ViReal64 gs 
 "Set the duty cycle of the red, green, and blue colors, which corresponds to the color intensity.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPGENerator:PATTern:LED:BLUE\n\nOption Checking:\nNone"
 "\n"

4 all "Pattern Generator PWM LED Intensity Green" RSRTX_ATTR_PATTERN_GENERATOR_PWM_LED_INTENSITY_GREEN ViReal64 gs 
 "Set the duty cycle of the red, green, and blue colors, which corresponds to the color intensity.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPGENerator:PATTern:LED:GREen\n\nOption Checking:\nNone"
 "\n"

4 all "Pattern Generator PWM LED Intensity Red" RSRTX_ATTR_PATTERN_GENERATOR_PWM_LED_INTENSITY_RED ViReal64 gs 
 "Set the duty cycle of the red, green, and blue colors, which corresponds to the color intensity.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nPGENerator:PATTern:LED:RED\n\nOption Checking:\nNone"
 "\n"

1 all "Display"
 "Display settings.\n"

2 all "Color And Brightness" RSRTX_ATTR_COLOR_AND_BRIGHTNESS ViInt32 gs rsrtx_rngColorBrightness
 "Sets the color and brightness of the displayed waveform samples depending on their cumulative occurance.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nDISPlay:PALette\n\nOption Checking:\nNone"
 "\n"

2 all "Signal Style" RSRTX_ATTR_SIGNAL_STYLE ViInt32 gs rsrtx_rngSignalStyle
 "Select the style in which the waveform is displayed.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nDISPlay:STYLe\n\nOption Checking:\nNone"
 "\n"

2 all "Diagram Grid Style" RSRTX_ATTR_DIAGRAM_GRID_STYLE ViInt32 gs rsrtx_rngGridStyle
 "Defines how the grid is displayed.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nDISPlay:GRID:STYLe\n\nOption Checking:\nNone"
 "\n"

2 all "Diagram Annotation Enabled" RSRTX_ATTR_DIAGRAM_ANNOTATION_ENABLED ViBoolean gs 
 "Enables grid annotation.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nDISPlay:GRID:ANNotation[:ENABle]\n\nOption Checking:\nNone"
 "\n"

2 all "Diagram Annotation Track" RSRTX_ATTR_DIAGRAM_ANNOTATION_TRACK ViInt32 gs 
 "Configures diagram annotatiom track.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nDISPlay:GRID:ANNotation:TRACk\n\nOption Checking:\nNone"
 "\n"

2 all "Waveform Intensity" RSRTX_ATTR_WAVEFORM_INTENSITY ViReal64 gs 
 "Defines the strength of the waveform line in the diagram.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nDISPlay:INTensity:WAVeform\n\nOption Checking:\nNone"
 "\n"

2 all "Background Intensity" RSRTX_ATTR_BACKGROUND_INTENSITY ViReal64 gs 
 "Defines the intensity of the background lighting of the display.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nDISPlay:INTensity:BACKlight\n\nOption Checking:\nNone"
 "\n"

2 all "Grid Intensity" RSRTX_ATTR_GRID_INTENSITY ViReal64 gs 
 "Defines the intensity of the grid on the screen.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nDISPlay:INTensity:GRID\n\nOption Checking:\nNone"
 "\n"

2 all "Display Language" RSRTX_ATTR_DISPLAY_LANGUAGE ViInt32 gs rsrtx_rngLanguage
 "Sets the language in which the softkey labels, help and other screen information can be displayed. Supported languages are listed in the Specifications data sheet.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nDISPlay:LANGuage\n\nOption Checking:\nNone"
 "\n"

2 all "Display Date And Time" RSRTX_ATTR_DISPLAY_DATE_AND_TIME ViBoolean gs 
 "Switches the date and time display in the upper right corner of the screen on or off.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nDISPlay:DTIMe\n\nOption Checking:\nNone"
 "\n"

2 all "Diagram Mode" RSRTX_ATTR_DIAGRAM_MODE ViInt32 gs rsrtx_rngDiagramMode
 "Sets the diagram mode.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nDISPlay:MODE\n\nOption Checking:\nNone"
 "\n"

2 all "Display Send Message" RSRTX_ATTR_DISPLAY_SEND_MESSAGE ViString s 
 "Sends a message text to the instrument and displays it in a message box.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nDISPlay:DIALog:MESSage\n\nOption Checking:\nNone"
 "\n"

2 all "Display Close Dialog" RSRTX_ATTR_DISPLAY_CLOSE_DIALOG ViString s 
 "Closes an open dialog box.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nDISPlay:DIALog:CLOSe\n\nOption Checking:\nNone"
 "\n"

2 all "Dialog Transparency" RSRTX_ATTR_DIALOG_TRANSPARENCY ViInt32 gs 
 "Sets the transparency of result boxes that overlay the waveforms, for example, boxes with statistical results or digital voltmeter results.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nDISPlay:DIALog:TRANsparency\n\nOption Checking:\nNone"
 "\n"

2 all "Display Clear Screen" RSRTX_ATTR_DISPLAY_CLEAR_SCREEN ViString s 
 "Clears the display.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nDISPlay:CLEar[:SCReen]\n\nOption Checking:\nNone"
 "\n"

2 all "Persistence"
 "Contains attributes for persistence settings.\n"

3 all "Persistence Enabled" RSRTX_ATTR_PERSISTENCE_ENABLED ViBoolean gs 
 "If enabled, each new data point in the diagram area remains on the screen for the duration defined using DISPlay:PERSistence:TIME, or as long as DISPlay:PERSistence:INFinite is enabled.\nIf disabled, the signal value is only displayed as long as it actually occurs.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nDISPlay:PERSistence[:STATe]\n\nOption Checking:\nNone"
 "\n"

3 all "Persistence Type" RSRTX_ATTR_PERSISTENCE_TYPE ViInt32 gs RsRtx_rngPersistenceType
 "Configures the persistence type.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nDISPlay:PERSistence:TYPE\n\nOption Checking:\nNone"
 "\n"

3 all "Infinite Persistence" RSRTX_ATTR_INFINITE_PERSISTENCE ViBoolean gs 
 "If persistence is enabled (DISPlay:PERSistence[:STATe]), each new data point in the diagram area remains on the screen infinitely until this command is set to OFF.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nDISPlay:PERSistence:INFinite\n\nOption Checking:\nNone"
 "\n"

3 all "Persistence Time" RSRTX_ATTR_PERSISTENCE_TIME ViReal64 gs 
 "If persistence is enabled (DISPlay:PERSistence[:STATe]), each new data point in the diagram area remains on the screen for the duration defined here.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nDISPlay:PERSistence:TIME\n\nOption Checking:\nNone"
 "\n"

3 all "Persistence Clear" RSRTX_ATTR_PERSISTENCE_CLEAR ViString s 
 "Removes the displayed persistent waveform from the screen.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nDISPlay:PERSistence:CLEar\n\nOption Checking:\nNone"
 "\n"

2 all "XY Diagram"
 "Contains attributes for XY Diagram settings.\n"

3 all "XY X Source" RSRTX_ATTR_XY_X_SOURCE ViInt32 gs rsrtx_rngSource
 "Defines the source to be displayed in x direction in an XY-diagram, replacing the usual time base.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nDISPlay:XY:XSOurce\n\nOption Checking:\nNone"
 "\n"

3 all "XY Y Source" RSRTX_ATTR_XY_Y_SOURCE ViInt32 gs rsrtx_rngSource
 "Defines the (first) source to be displayed in y direction in an XY-diagram.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nDISPlay:XY:Y1Source\n\nOption Checking:\nNone"
 "\n"

3 all "XY Y2 Source" RSRTX_ATTR_XY_Y2_SOURCE ViInt32 gs rsrtx_rngXY2Source
 "Defines an optional second source to be displayed in y direction in an XY-diagram. The command is only relevant for 4-channel  instruments.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nDISPlay:XY:Y2Source\n\nOption Checking:\nNone"
 "\n"

3 all "XY Z Source" RSRTX_ATTR_XY_Z_SOURCE ViInt32 gs rsrtx_rngSource
 "Defines the source to be used to determine the intensity of the xy-waveform.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nDISPlay:XY:ZSOurce\n\nOption Checking:\nNone"
 "\n"

3 all "XY Z Treshold" RSRTX_ATTR_XY_Z_TRESHOLD ViReal64 gs 
 "Defines the threshold for intensity with a two-state modulation, if DISPlay: XY: ZMODe is set to DIGital.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nDISPlay:XY:ZTHReshold\n\nOption Checking:\nNone"
 "\n"

3 all "XY Intensity Control" RSRTX_ATTR_XY_INTENSITY_CONTROL ViInt32 gs rsrtx_rngIntensityMode
 "Activates or deactivates the intensity control of the waveform via an additional signal source and sets the intensity mode.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nDISPlay:XY:ZMODe\n\nOption Checking:\nNone"
 "\n"

2 all "Zoom"
 "Zoom definition.\n"

3 all "Zoom Window Enabled" RSRTX_ATTR_ZOOM_WINDOW_ENABLED ViBoolean gs 
 "Switches the zoom window on or off.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTIMebase:ZOOM:STATe\n\nOption Checking:\nNone"
 "\n"

3 all "Zoom Diagram Timebase" RSRTX_ATTR_ZOOM_DIAGRAM_TIMEBASE ViReal64 gs 
 "Defines the time base in the zoom diagram in seconds per division.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTIMebase:ZOOM:SCALe\n\nOption Checking:\nNone"
 "\n"

3 all "Zoom Offset Of Trigger Point" RSRTX_ATTR_ZOOM_OFFSET_OF_TRIGGER_POINT ViReal64 gs 
 "Defines the offset of the trigger point to the reference point of the zoom diagram.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTIMebase:ZOOM:TIME\n\nOption Checking:\nNone"
 "\n"

3 all "Zoom Reference Point" RSRTX_ATTR_ZOOM_REFERENCE_POINT ViReal64 gs 
 "Defines the position of the zoom reference point (the reference point of the zoom window) in relation to the reference point of original time base.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTIMebase:ZOOM:POSition\n\nOption Checking:\nNone"
 "\n"

3 all "Zoom Window Position" RSRTX_ATTR_ZOOM_WINDOW_POSITION ViInt32 gs 
 "Defines the position of the divide bar between normal waveform and zoom window. Sets the vertical position in pixels, measured from the top edge. The vertical display size is 800 px.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nDISPlay:CBAR:ZOOM[:POSition]\n\nOption Checking:\nNone"
 "\n"

3 all "Zoom Sample Rate" RSRTX_ATTR_ZOOM_SAMPLE_RATE ViReal64 g 
 "Returns the sample rate of the zoom window.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nACQuire:SRATe:ZOOM?\n\nOption Checking:\nNone"
 "\n"

2 all "Markers"
 "Markers configuration.\n"

3 all "Marker Set" RSRTX_ATTR_MARKER_SET ViString s 
 "Sets a new marker (timestamp) at the reference point of the display, unless an existing marker is already set there. The reference point is set with RSRTX_ATTR_HORZ_REFERENCE.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTSTamp:SET\n\nOption Checking:\nNone"
 "\n"

3 all "Marker Clear" RSRTX_ATTR_MARKER_CLEAR ViString s 
 "Deletes the marker (timestamp) at the reference point. The reference point is set with TIMebase: REFerence.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTSTamp:CLEar\n\nOption Checking:\nNone"
 "\n"

3 all "Marker Clear All" RSRTX_ATTR_MARKER_CLEAR_ALL ViString s 
 "Deletes all markers (timestamps).\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTSTamp:ACLear\n\nOption Checking:\nNone"
 "\n"

3 all "Marker Next" RSRTX_ATTR_MARKER_NEXT ViString s 
 "Moves the next marker (timestamp, to the right) to the reference point of the display or zoom area.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTSTamp:NEXT\n\nOption Checking:\nNone"
 "\n"

3 all "Marker Previous" RSRTX_ATTR_MARKER_PREVIOUS ViString s 
 "Moves the previous marker (timestamp, to the left) to the reference point of the display or zoom area.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nTSTamp:PREVious\n\nOption Checking:\nNone"
 "\n"

2 all "Virtual Screen"
 "Contains attributes for Virtual Screen.\n"

3 all "Virtual Screen Enabled" RSRTX_ATTR_VIRTUAL_SCREEN_ENABLED ViBoolean gs 
 "Enables or disables the virtual screen. If enabled, the virtual screen has 20 divisions, 8 of them are displayed.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nDISPlay:VSCReen:ENABle\n\nOption Checking:\nNone"
 "\n"

3 all "Virtual Screen Position" RSRTX_ATTR_VIRTUAL_SCREEN_POSITION ViReal64 gs 
 "Selects the divisions to be displayed on the virtual screen. The virtual screen has 20 divisions, 8 of them are displayed.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nDISPlay:VSCReen:POSition\n\nOption Checking:\nNone"
 "\n"

2 all "History"
 "Configures history.\n"

3 all "Channel"
 "Configures history for channel\n"

4 all "History Channel Current Acquisition" RSRTX_ATTR_HISTORY_CHANNEL_CURRENT_ACQUISITION ViInt32 gs 
 "Accesses a particular acquisition segment in the memory to display it. The query returns the index of the segment that is shown.\nThere are two ways to enter the index.\nNegative index count: the newest segment has the index 0, older segments have a negative index: -(n-1), .... -1 , 0\nPositive index count: the oldest segment has the index 1, and the newest segment has the index n: 1, 2,..., n\nwhere n is the number of acquired segments.\n\nAvailable Repeated Capabilities:\nChannel "
 "(CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nCHANnel<m>:HISTory:CURRent\n\nOption Checking:\nK15"
 "\n"

4 all "History Channel Player" RSRTX_ATTR_HISTORY_CHANNEL_PLAYER ViInt32 gs rsrtx_rngHistoryPlayer
 "Starts and stops the replay of the history segments.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nCHANnel<m>:HISTory:PLAYer:STATe\n\nOption Checking:\nK15"
 "\n"

4 all "History Channel Start Acquisition" RSRTX_ATTR_HISTORY_CHANNEL_START_ACQUISITION ViInt32 gs 
 "Sets the index of the oldest segment to be displayed.\nThere are two ways to enter the index.\nNegative index count: the newest segment has the index 0, older segments have a negative index: -(n-1), .... -1 , 0\nPositive index count: the oldest segment has the index 1, and the newest segment has the index n: 1, 2,..., n\nwhere n is the number of acquired segments.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nCHANnel<m>:HISTory:STARt\n\nOption "
 "Checking:\nK15"
 "\n"

4 all "History Channel Stop Acquisition" RSRTX_ATTR_HISTORY_CHANNEL_STOP_ACQUISITION ViInt32 gs 
 "Sets the index of the latest segment to be displayed.\nThere are two ways to enter the index.\nNegative index count: the newest segment has the index 0, older segments have a negative index: -(n-1), .... -1 , 0\nPositive index count: the oldest segment has the index 1, and the newest segment has the index n: 1, 2,..., n\nwhere n is the number of acquired segments.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nCHANnel<m>:HISTory:STOP\n\nOption "
 "Checking:\nK15"
 "\n"

4 all "History Channel Play All" RSRTX_ATTR_HISTORY_CHANNEL_PLAY_ALL ViBoolean gs 
 "Enables the replay of all acquired segments.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nCHANnel<m>:HISTory:PALL\n\nOption Checking:\nK15"
 "\n"

4 all "History Channel Speed" RSRTX_ATTR_HISTORY_CHANNEL_SPEED ViInt32 gs rsrtx_rngHistorySpeed
 "Sets the speed of the history replay.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nCHANnel<m>:HISTory:PLAYer:SPEed\n\nOption Checking:\nK15"
 "\n"

4 all "History Channel Repeat" RSRTX_ATTR_HISTORY_CHANNEL_REPEAT ViBoolean gs 
 "If set to true, the replay of the selected history segments repeats automatically.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nCHANnel<m>:HISTory:REPLay\n\nOption Checking:\nK15"
 "\n"

4 all "History Channel Acquisiton Relative Time" RSRTX_ATTR_HISTORY_CHANNEL_ACQUISITON_RELATIVE_TIME ViReal64 g 
 "Returns the time difference of the selected segment to the newest segment. \n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nCHANnel<m>:HISTory:TSRelative?\n\nOption Checking:\nK15"
 "\n"

4 all "History Channel All Dates" RSRTX_ATTR_HISTORY_CHANNEL_ALL_DATES ViString g 
 "Returns the dates of all history segments.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nCHANnel<m>:HISTory:TSDate:ALL?\n\nOption Checking:\nNone"
 "\n"

4 all "History Channel All Time Differences" RSRTX_ATTR_HISTORY_CHANNEL_ALL_TIME_DIFFERENCES ViString g 
 "Returns the time differences to the newest acquisition of all history segments.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nCHANnel<m>:HISTory:TSRelative:ALL?\n\nOption Checking:\nNone"
 "\n"

4 all "History Channel All Daytimes" RSRTX_ATTR_HISTORY_CHANNEL_ALL_DAYTIMES ViString g 
 "Returns the absolute daytimes of all history segments.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nCHANnel<m>:HISTory:TSABsolute:ALL?\n\nOption Checking:\nNone"
 "\n"

4 all "History Channel Player Control Enable" RSRTX_ATTR_HISTORY_CHANNEL_PLAYER_CONTROL_ENABLE ViBoolean gs 
 "Displays or hides the history player on the screen.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nCHANnel<m>:HISTory:CONTrol:[ENABle]\n\nOption Checking:\nK15"
 "\n"

4 all "History Channel Table Mode" RSRTX_ATTR_HISTORY_CHANNEL_TABLE_MODE ViInt32 g RsRtx_rngAbsoluteRelative
 "Returns the the type of the timestamp that is shown the segment table.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nCHANnel<m>:HISTory:TMODe?\n\nOption Checking:\nNone"
 "\n"

4 all "History Channel Time Table Enable" RSRTX_ATTR_HISTORY_CHANNEL_TIME_TABLE_ENABLE ViBoolean gs 
 "Displays or hides the segment table on the screen.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nCHANnel<m>:HISTory:TTABle[:ENABle]\n\nOption Checking:\nK15"
 "\n"

4 all "History Channel Export Name" RSRTX_ATTR_HISTORY_CHANNEL_EXPORT_NAME ViString gs 
 "Configures export file name.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nCHANnel<m>:HISTory:EXPort:NAME\n\nOption Checking:\nNone"
 "\n"

4 all "History Channel Export Save" RSRTX_ATTR_HISTORY_CHANNEL_EXPORT_SAVE ViString s 
 "Exports channel history.\n\nAvailable Repeated Capabilities:\nChannel (CH0,CH1,CH2,CH3,CH4,CHExt)\n\nRemote-control command:\nCHANnel<m>:HISTory:EXPort:SAVE\n\nOption Checking:\nNone"
 "\n"

3 all "Digital"
 "Configures history for digital channel\n"

4 all "History Digital Current Acquisition" RSRTX_ATTR_HISTORY_DIGITAL_CURRENT_ACQUISITION ViInt32 gs 
 "Accesses a particular acquisition segment in the memory to display it. The query returns the index of the segment that is shown.\nThere are two ways to enter the index.\nNegative index count: the newest segment has the index 0, older segments have a negative index: -(n-1), .... -1 , 0\nPositive index count: the oldest segment has the index 1, and the newest segment has the index n: 1, 2,..., n\nwhere n is the number of acquired segments.\n\nAvailable Repeated Capabilities:\nDigital "
 "(D0,D1,D2,D3,D4,D5,D6,D7,D8,D9,D10,D11,D12,D13,D14,D15)\n\nRemote-control command:\nDIGital<m>:HISTory:CURRent\n\nOption Checking:\nK15"
 "\n"

4 all "History Digital Player" RSRTX_ATTR_HISTORY_DIGITAL_PLAYER ViInt32 gs rsrtx_rngHistoryPlayer
 "Starts and stops the replay of the history segments.\n\nAvailable Repeated Capabilities:\nDigital (D0,D1,D2,D3,D4,D5,D6,D7,D8,D9,D10,D11,D12,D13,D14,D15)\n\nRemote-control command:\nDIGital<m>:HISTory:PLAYer:STATe\n\nOption Checking:\nK15"
 "\n"

4 all "History Digital Start Acquisition" RSRTX_ATTR_HISTORY_DIGITAL_START_ACQUISITION ViInt32 gs 
 "Sets the index of the oldest segment to be displayed.\nThere are two ways to enter the index.\nNegative index count: the newest segment has the index 0, older segments have a negative index: -(n-1), .... -1 , 0\nPositive index count: the oldest segment has the index 1, and the newest segment has the index n: 1, 2,..., n\nwhere n is the number of acquired segments.\n\nAvailable Repeated Capabilities:\nDigital (D0,D1,D2,D3,D4,D5,D6,D7,D8,D9,D10,D11,D12,D13,D14,D15)\n\nRemote-control "
 "command:\nDIGital<m>:HISTory:STARt\n\nOption Checking:\nK15"
 "\n"

4 all "History Digital Stop Acquisition" RSRTX_ATTR_HISTORY_DIGITAL_STOP_ACQUISITION ViInt32 gs 
 "Sets the index of the latest segment to be displayed.\nThere are two ways to enter the index.\nNegative index count: the newest segment has the index 0, older segments have a negative index: -(n-1), .... -1 , 0\nPositive index count: the oldest segment has the index 1, and the newest segment has the index n: 1, 2,..., n\nwhere n is the number of acquired segments.\n\nAvailable Repeated Capabilities:\nDigital (D0,D1,D2,D3,D4,D5,D6,D7,D8,D9,D10,D11,D12,D13,D14,D15)\n\nRemote-control "
 "command:\nDIGital<m>:HISTory:STOP\n\nOption Checking:\nK15"
 "\n"

4 all "History Digital Play All" RSRTX_ATTR_HISTORY_DIGITAL_PLAY_ALL ViBoolean gs 
 "Enables the replay of all acquired segments.\n\nAvailable Repeated Capabilities:\nDigital (D0,D1,D2,D3,D4,D5,D6,D7,D8,D9,D10,D11,D12,D13,D14,D15)\n\nRemote-control command:\nDIGital<m>:HISTory:PALL\n\nOption Checking:\nK15"
 "\n"

4 all "History Digital Speed" RSRTX_ATTR_HISTORY_DIGITAL_SPEED ViInt32 gs rsrtx_rngHistorySpeed
 "Sets the speed of the history replay.\n\nAvailable Repeated Capabilities:\nDigital (D0,D1,D2,D3,D4,D5,D6,D7,D8,D9,D10,D11,D12,D13,D14,D15)\n\nRemote-control command:\nDIGital<m>:HISTory:PLAYer:SPEed\n\nOption Checking:\nK15"
 "\n"

4 all "History Digital Repeat" RSRTX_ATTR_HISTORY_DIGITAL_REPEAT ViBoolean gs 
 "If set to true, the replay of the selected history segments repeats automatically.\n\nAvailable Repeated Capabilities:\nDigital (D0,D1,D2,D3,D4,D5,D6,D7,D8,D9,D10,D11,D12,D13,D14,D15)\n\nRemote-control command:\nDIGital<m>:HISTory:REPLay\n\nOption Checking:\nK15"
 "\n"

4 all "History Digital Acquisiton Relative Time" RSRTX_ATTR_HISTORY_DIGITAL_ACQUISITON_RELATIVE_TIME ViReal64 g 
 "Returns the time difference of the selected segment to the newest segment. \n\nAvailable Repeated Capabilities:\nDigital (D0,D1,D2,D3,D4,D5,D6,D7,D8,D9,D10,D11,D12,D13,D14,D15)\n\nRemote-control command:\nDIGital<m>:HISTory:TSRelative?\n\nOption Checking:\nK15"
 "\n"

4 all "History Digital All Dates" RSRTX_ATTR_HISTORY_DIGITAL_ALL_DATES ViString g 
 "Returns the dates of all history segments.\n\nAvailable Repeated Capabilities:\nDigital (D0,D1,D2,D3,D4,D5,D6,D7,D8,D9,D10,D11,D12,D13,D14,D15)\n\nRemote-control command:\nDIGital<m>:HISTory:TSDate:ALL?\n\nOption Checking:\nNone"
 "\n"

4 all "History Digital All Time Differences" RSRTX_ATTR_HISTORY_DIGITAL_ALL_TIME_DIFFERENCES ViString g 
 "Returns the time differences to the newest acquisition of all history segments.\n\nAvailable Repeated Capabilities:\nDigital (D0,D1,D2,D3,D4,D5,D6,D7,D8,D9,D10,D11,D12,D13,D14,D15)\n\nRemote-control command:\nDIGital<m>:HISTory:TSRelative:ALL?\n\nOption Checking:\nNone"
 "\n"

4 all "History Digital All Daytimes" RSRTX_ATTR_HISTORY_DIGITAL_ALL_DAYTIMES ViString g 
 "Returns the absolute daytimes of all history segments.\n\nAvailable Repeated Capabilities:\nDigital (D0,D1,D2,D3,D4,D5,D6,D7,D8,D9,D10,D11,D12,D13,D14,D15)\n\nRemote-control command:\nDIGital<m>:HISTory:TSABsolute:ALL?\n\nOption Checking:\nNone"
 "\n"

4 all "History Digital Player Control Enable" RSRTX_ATTR_HISTORY_DIGITAL_PLAYER_CONTROL_ENABLE ViBoolean gs 
 "Displays or hides the history player on the screen.\n\nAvailable Repeated Capabilities:\nDigital (D0,D1,D2,D3,D4,D5,D6,D7,D8,D9,D10,D11,D12,D13,D14,D15)\n\nRemote-control command:\nDIGital<m>:HISTory:CONTrol[:ENABle]\n\nOption Checking:\nK15"
 "\n"

4 all "History Digital Time Table Enable" RSRTX_ATTR_HISTORY_DIGITAL_TIME_TABLE_ENABLE ViBoolean gs 
 "Displays or hides the segment table on the screen.\n\nAvailable Repeated Capabilities:\nDigital (D0,D1,D2,D3,D4,D5,D6,D7,D8,D9,D10,D11,D12,D13,D14,D15)\n\nRemote-control command:\nDIGital<m>:HISTory:TTABle[:ENABle]\n\nOption Checking:\nK15"
 "\n"

4 all "Digital History Export Name" RSRTX_ATTR_DIGITAL_HISTORY_EXPORT_NAME ViString gs 
 "Configures export file name.\n\nAvailable Repeated Capabilities:\nDigital (D0,D1,D2,D3,D4,D5,D6,D7,D8,D9,D10,D11,D12,D13,D14,D15)\n\nRemote-control command:\nDIGital<m>:HISTory:EXPort:NAME\n\nOption Checking:\nNone"
 "\n"

4 all "Digital History Export Save" RSRTX_ATTR_DIGITAL_HISTORY_EXPORT_SAVE ViString s 
 "Exports channel history.\n\nAvailable Repeated Capabilities:\nDigital (D0,D1,D2,D3,D4,D5,D6,D7,D8,D9,D10,D11,D12,D13,D14,D15)\n\nRemote-control command:\nDIGital<m>:HISTory:EXPort:SAVE\n\nOption Checking:\nNone"
 "\n"

3 all "Math"
 "Configures history for math channel\n"

4 all "History Math Current Acquisition" RSRTX_ATTR_HISTORY_MATH_CURRENT_ACQUISITION ViInt32 gs 
 "Accesses a particular acquisition segment in the memory to display it. The query returns the index of the segment that is shown.\nThere are two ways to enter the index.\nNegative index count: the newest segment has the index 0, older segments have a negative index: -(n-1), .... -1 , 0\nPositive index count: the oldest segment has the index 1, and the newest segment has the index n: 1, 2,..., n\nwhere n is the number of acquired segments.\n\nAvailable Repeated Capabilities:\nMath "
 "(MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:HISTory:CURRent\n\nOption Checking:\nK15"
 "\n"

4 all "History Math Player" RSRTX_ATTR_HISTORY_MATH_PLAYER ViInt32 gs rsrtx_rngHistoryPlayer
 "Starts and stops the replay of the history segments.\n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:HISTory:PLAYer:STATe\n\nOption Checking:\nK15"
 "\n"

4 all "History Math Start Acquisition" RSRTX_ATTR_HISTORY_MATH_START_ACQUISITION ViInt32 gs 
 "Sets the index of the oldest segment to be displayed.\nThere are two ways to enter the index.\nNegative index count: the newest segment has the index 0, older segments have a negative index: -(n-1), .... -1 , 0\nPositive index count: the oldest segment has the index 1, and the newest segment has the index n: 1, 2,..., n\nwhere n is the number of acquired segments.\n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:HISTory:STARt\n\nOption "
 "Checking:\nK15"
 "\n"

4 all "History Math Stop Acquisition" RSRTX_ATTR_HISTORY_MATH_STOP_ACQUISITION ViInt32 gs 
 "Sets the index of the latest segment to be displayed.\nThere are two ways to enter the index.\nNegative index count: the newest segment has the index 0, older segments have a negative index: -(n-1), .... -1 , 0\nPositive index count: the oldest segment has the index 1, and the newest segment has the index n: 1, 2,..., n\nwhere n is the number of acquired segments.\n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:HISTory:STOP\n\nOption "
 "Checking:\nK15"
 "\n"

4 all "History Math Play All" RSRTX_ATTR_HISTORY_MATH_PLAY_ALL ViBoolean gs 
 "Enables the replay of all acquired segments.\n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:HISTory:PALL\n\nOption Checking:\nK15"
 "\n"

4 all "History Math Speed" RSRTX_ATTR_HISTORY_MATH_SPEED ViInt32 gs rsrtx_rngHistorySpeed
 "Sets the speed of the history replay.\n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:HISTory:PLAYer:SPEed\n\nOption Checking:\nK15"
 "\n"

4 all "History Math Repeat" RSRTX_ATTR_HISTORY_MATH_REPEAT ViBoolean gs 
 "If set to true, the replay of the selected history segments repeats automatically.\n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:HISTory:REPLay\n\nOption Checking:\nK15"
 "\n"

4 all "History Math Acquisiton Relative Time" RSRTX_ATTR_HISTORY_MATH_ACQUISITON_RELATIVE_TIME ViReal64 g 
 "Returns the time difference of the selected segment to the newest segment. \n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:HISTory:TSRelative?\n\nOption Checking:\nK15"
 "\n"

4 all "History Math All Dates" RSRTX_ATTR_HISTORY_MATH_ALL_DATES ViString g 
 "Returns the dates of all history segments.\n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:HISTory:TSDate:ALL?\n\nOption Checking:\nNone"
 "\n"

4 all "History Math All Time Differences" RSRTX_ATTR_HISTORY_MATH_ALL_TIME_DIFFERENCES ViString g 
 "Returns the time differences to the newest acquisition of all history segments.\n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:HISTory:TSRelative:ALL?\n\nOption Checking:\nNone"
 "\n"

4 all "History Math All Daytimes" RSRTX_ATTR_HISTORY_MATH_ALL_DAYTIMES ViString g 
 "Returns the absolute daytimes of all history segments.\n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:HISTory:TSABsolute:ALL?\n\nOption Checking:\nNone"
 "\n"

4 all "History Math Player Control Enable" RSRTX_ATTR_HISTORY_MATH_PLAYER_CONTROL_ENABLE ViBoolean gs 
 "Displays or hides the history player on the screen.\n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:HISTory:CONTrol[:ENABle]\n\nOption Checking:\nK15"
 "\n"

4 all "History Math Time Table Enable" RSRTX_ATTR_HISTORY_MATH_TIME_TABLE_ENABLE ViBoolean gs 
 "Displays or hides the segment table on the screen.\n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:HISTory:TTABle[:ENABle]\n\nOption Checking:\nK15"
 "\n"

4 all "History Math Export Name" RSRTX_ATTR_HISTORY_MATH_EXPORT_NAME ViString gs 
 "History export file name.\n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:HISTory:EXPort:NAME\n\nOption Checking:\nNone"
 "\n"

4 all "History Math Export Save" RSRTX_ATTR_HISTORY_MATH_EXPORT_SAVE ViString s 
 "Exports history.\n\nAvailable Repeated Capabilities:\nMath (MA1,MA2,MA3,MA4,MA5)\n\nRemote-control command:\nCALCulate:MATH<m>:HISTory:EXPort:SAVE\n\nOption Checking:\nNone"
 "\n"

3 all "Protocol"
 "Configures history for protocol.\n"

4 all "History Protocol Current Acquisition" RSRTX_ATTR_HISTORY_PROTOCOL_CURRENT_ACQUISITION ViInt32 gs 
 "Accesses a particular acquisition segment in the memory to display it. The query returns the index of the segment that is shown.\nThere are two ways to enter the index.\nNegative index count: the newest segment has the index 0, older segments have a negative index: -(n-1), .... -1 , 0\nPositive index count: the oldest segment has the index 1, and the newest segment has the index n: 1, 2,..., n\nwhere n is the number of acquired segments.\n\nAvailable Repeated Capabilities:\nSerialBus "
 "(SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:HISTory:CURRent\n\nOption Checking:\nK15"
 "\n"

4 all "History Protocol Player" RSRTX_ATTR_HISTORY_PROTOCOL_PLAYER ViInt32 gs rsrtx_rngHistoryPlayer
 "Starts and stops the replay of the history segments.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:HISTory:PLAYer:STATe\n\nOption Checking:\nK15"
 "\n"

4 all "History Protocol Start Acquisition" RSRTX_ATTR_HISTORY_PROTOCOL_START_ACQUISITION ViInt32 gs 
 "Sets the index of the oldest segment to be displayed.\nThere are two ways to enter the index.\nNegative index count: the newest segment has the index 0, older segments have a negative index: -(n-1), .... -1 , 0\nPositive index count: the oldest segment has the index 1, and the newest segment has the index n: 1, 2,..., n\nwhere n is the number of acquired segments.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:HISTory:STARt\n\nOption Checking:\nK15"
 "\n"

4 all "History Protocol Stop Acquisition" RSRTX_ATTR_HISTORY_PROTOCOL_STOP_ACQUISITION ViInt32 gs 
 "Sets the index of the latest segment to be displayed.\nThere are two ways to enter the index.\nNegative index count: the newest segment has the index 0, older segments have a negative index: -(n-1), .... -1 , 0\nPositive index count: the oldest segment has the index 1, and the newest segment has the index n: 1, 2,..., n\nwhere n is the number of acquired segments.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:HISTory:STOP\n\nOption Checking:\nK15"
 "\n"

4 all "History Protocol Play All" RSRTX_ATTR_HISTORY_PROTOCOL_PLAY_ALL ViBoolean gs 
 "Enables the replay of all acquired segments.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:HISTory:PALL\n\nOption Checking:\nK15"
 "\n"

4 all "History Protocol Speed" RSRTX_ATTR_HISTORY_PROTOCOL_SPEED ViInt32 gs rsrtx_rngHistorySpeed
 "Sets the speed of the history replay.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:HISTory:PLAYer:SPEed\n\nOption Checking:\nK15"
 "\n"

4 all "History Protocol Repeat" RSRTX_ATTR_HISTORY_PROTOCOL_REPEAT ViBoolean gs 
 "If set to true, the replay of the selected history segments repeats automatically.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:HISTory:REPLay\n\nOption Checking:\nK15"
 "\n"

4 all "History Protocol Acquisiton Relative Time" RSRTX_ATTR_HISTORY_PROTOCOL_ACQUISITON_RELATIVE_TIME ViReal64 g 
 "Returns the time difference of the selected segment to the newest segment. \n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:HISTory:TSRelative?\n\nOption Checking:\nK15"
 "\n"

4 all "History Protocol All Dates" RSRTX_ATTR_HISTORY_PROTOCOL_ALL_DATES ViString g 
 "Returns the dates of all history segments.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:HISTory:TSDate:ALL?\n\nOption Checking:\nNone"
 "\n"

4 all "History Protocol All Time Differences" RSRTX_ATTR_HISTORY_PROTOCOL_ALL_TIME_DIFFERENCES ViString g 
 "Returns the time differences to the newest acquisition of all history segments.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:HISTory:TSRelative:ALL?\n\nOption Checking:\nNone"
 "\n"

4 all "History Protocol All Daytimes" RSRTX_ATTR_HISTORY_PROTOCOL_ALL_DAYTIMES ViString g 
 "Returns the absolute daytimes of all history segments.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:HISTory:TSABsolute:ALL?\n\nOption Checking:\nNone"
 "\n"

4 all "History Protocol Player Control Enable" RSRTX_ATTR_HISTORY_PROTOCOL_PLAYER_CONTROL_ENABLE ViBoolean gs 
 "Displays or hides the history player on the screen.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:HISTory:CONTrol[:ENABle]\n\nOption Checking:\nK15"
 "\n"

4 all "History Protocol Time Table Enable" RSRTX_ATTR_HISTORY_PROTOCOL_TIME_TABLE_ENABLE ViBoolean gs 
 "Displays or hides the segment table on the screen.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:HISTory:TTABle[:ENABle]\n\nOption Checking:\nK15"
 "\n"

4 all "History Protocol Export Name" RSRTX_ATTR_HISTORY_PROTOCOL_EXPORT_NAME ViString gs 
 "History export file name.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:HISTory:EXPort:NAME\n\nOption Checking:\nNone"
 "\n"

4 all "History Protocol Export Save" RSRTX_ATTR_HISTORY_PROTOCOL_EXPORT_SAVE ViString s 
 "Exports history.\n\nAvailable Repeated Capabilities:\nSerialBus (SB1,SB2,SB3,SB4)\n\nRemote-control command:\nBUS<b>:HISTory:EXPort:SAVE\n\nOption Checking:\nNone"
 "\n"

3 all "Spectrum"
 "Contains attributes for Spectrum History.\n"

4 all "History Spectrum Current Acquisition" RSRTX_ATTR_HISTORY_SPECTRUM_CURRENT_ACQUISITION ViInt32 gs 
 "Accesses a particular acquisition segment in the memory to display it. The query returns the index of the segment that is shown.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:HISTory:CURRent\n\nOption Checking:\nK15"
 "\n"

4 all "History Spectrum Player" RSRTX_ATTR_HISTORY_SPECTRUM_PLAYER ViInt32 gs rsrtx_rngHistoryPlayer
 "Starts and stops the replay of the history segments.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:HISTory:PLAYer:STATe\n\nOption Checking:\nK15"
 "\n"

4 all "History Spectrum Start Acquisition" RSRTX_ATTR_HISTORY_SPECTRUM_START_ACQUISITION ViInt32 gs 
 "Sets the index of the oldest segment to be displayed.\nThere are two ways to enter the index.\nNegative index count: the newest segment has the index 0, older segments have a negative index: -(n-1), .... -1 , 0\nPositive index count: the oldest segment has the index 1, and the newest segment has the index n: 1, 2,..., n\nwhere n is the number of acquired segments.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:HISTory:STARt\n\nOption Checking:\nK15"
 "\n"

4 all "History Spectrum Stop Acquisition" RSRTX_ATTR_HISTORY_SPECTRUM_STOP_ACQUISITION ViInt32 gs 
 "Sets the index of the latest segment to be displayed.\nThere are two ways to enter the index.\nNegative index count: the newest segment has the index 0, older segments have a negative index: -(n-1), .... -1 , 0\nPositive index count: the oldest segment has the index 1, and the newest segment has the index n: 1, 2,..., n\nwhere n is the number of acquired segments.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:HISTory:STOP\n\nOption Checking:\nK15"
 "\n"

4 all "History Spectrum Play All" RSRTX_ATTR_HISTORY_SPECTRUM_PLAY_ALL ViBoolean gs 
 "Enables the replay of all acquired segments.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:HISTory:PALL\n\nOption Checking:\nK15"
 "\n"

4 all "History Spectrum Speed" RSRTX_ATTR_HISTORY_SPECTRUM_SPEED ViInt32 gs rsrtx_rngHistorySpeed
 "Sets the speed of the history replay.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:HISTory:PLAYer:SPEed\n\nOption Checking:\nK15"
 "\n"

4 all "History Spectrum Repeat" RSRTX_ATTR_HISTORY_SPECTRUM_REPEAT ViBoolean gs 
 "If set to true, the replay of the selected history segments repeats automatically.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:HISTory:REPLay\n\nOption Checking:\nK15"
 "\n"

4 all "History Spectrum Acquisition Relative Time" RSRTX_ATTR_HISTORY_SPECTRUM_ACQUISITION_RELATIVE_TIME ViReal64 g 
 "Returns the time difference of the selected segment to the newest segment. To select a segment, use RSRTX_ATTR_HISTORY_CHANNEL_CURRENT_ACQUISITION. The newest segment has index 0.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:HISTory:TSRelative?\n\nOption Checking:\nNone"
 "\n"

4 all "History Spectrum All Dates" RSRTX_ATTR_HISTORY_SPECTRUM_ALL_DATES ViString g 
 "Returns the dates of all history segments as a list of comma-separated list of year, month, and day values. The list starts with the oldest segment, and the newest segment is the last one.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:HISTory:TSDate:ALL?\n\nOption Checking:\nNone"
 "\n"

4 all "History Spectrum All Time Differences" RSRTX_ATTR_HISTORY_SPECTRUM_ALL_TIME_DIFFERENCES ViString g 
 "Returns the time differences to the newest acquisition of all history segments.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:HISTory:TSRelative:ALL?\n\nOption Checking:\nNone"
 "\n"

4 all "History Spectrum All Daytimes" RSRTX_ATTR_HISTORY_SPECTRUM_ALL_DAYTIMES ViString g 
 "Returns the absolute daytimes of all history segments.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:HISTory:TSABsolute:ALL?\n\nOption Checking:\nNone"
 "\n"

4 all "History Spectrum Export Name" RSRTX_ATTR_HISTORY_SPECTRUM_EXPORT_NAME ViString gs 
 "Defines the path and filename of the spectrum analysis timestamps file. The file format is CSV. If the file already exists, it will be overwritten.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:HISTory:EXPort:NAME\n\nOption Checking:\nK15"
 "\n"

4 all "History Spectrum Export Save" RSRTX_ATTR_HISTORY_SPECTRUM_EXPORT_SAVE ViString s 
 "Saves the spectrum analysis timestamps table to the file that is defined by the SPECtrum:HISTory:EXPort:NAME command.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSPECtrum:HISTory:EXPort:SAVE\n\nOption Checking:\nK15"
 "\n"

3 all "Logic"
 "Configures history for logic probe.\n"

4 all "History Logic Current Acquisition" RSRTX_ATTR_HISTORY_LOGIC_CURRENT_ACQUISITION ViInt32 gs 
 "Accesses a particular acquisition segment in the memory to display it. The query returns the index of the segment that is shown.\nThere are two ways to enter the index.\nNegative index count: the newest segment has the index 0, older segments have a negative index: -(n-1), .... -1 , 0\nPositive index count: the oldest segment has the index 1, and the newest segment has the index n: 1, 2,..., n\nwhere n is the number of acquired segments.\n\nAvailable Repeated Capabilities:\nLogic "
 "(Logic1,Logic2)\n\nRemote-control command:\nLOGic<p>:HISTory:CURRent\n\nOption Checking:\nK15"
 "\n"

4 all "History Logic Player" RSRTX_ATTR_HISTORY_LOGIC_PLAYER ViInt32 gs rsrtx_rngHistoryPlayer
 "Starts and stops the replay of the history segments.\n\nAvailable Repeated Capabilities:\nLogic (Logic1,Logic2)\n\nRemote-control command:\nLOGic<p>:HISTory:PLAYer:STATe\n\nOption Checking:\nK15"
 "\n"

4 all "History Logic Start Acquisition" RSRTX_ATTR_HISTORY_LOGIC_START_ACQUISITION ViInt32 gs 
 "Sets the index of the oldest segment to be displayed.\nThere are two ways to enter the index.\nNegative index count: the newest segment has the index 0, older segments have a negative index: -(n-1), .... -1 , 0\nPositive index count: the oldest segment has the index 1, and the newest segment has the index n: 1, 2,..., n\nwhere n is the number of acquired segments.\n\nAvailable Repeated Capabilities:\nLogic (Logic1,Logic2)\n\nRemote-control command:\nLOGic<p>:HISTory:STARt\n\nOption Checking:\nK15"
 "\n"

4 all "History Logic Stop Acquisition" RSRTX_ATTR_HISTORY_LOGIC_STOP_ACQUISITION ViInt32 gs 
 "Sets the index of the latest segment to be displayed.\nThere are two ways to enter the index.\nNegative index count: the newest segment has the index 0, older segments have a negative index: -(n-1), .... -1 , 0\nPositive index count: the oldest segment has the index 1, and the newest segment has the index n: 1, 2,..., n\nwhere n is the number of acquired segments.\n\nAvailable Repeated Capabilities:\nLogic (Logic1,Logic2)\n\nRemote-control command:\nLOGic<p>:HISTory:STOP\n\nOption Checking:\nK15"
 "\n"

4 all "History Logic Play All" RSRTX_ATTR_HISTORY_LOGIC_PLAY_ALL ViBoolean gs 
 "Enables the replay of all acquired segments.\n\nAvailable Repeated Capabilities:\nLogic (Logic1,Logic2)\n\nRemote-control command:\nLOGic<p>:HISTory:PALL\n\nOption Checking:\nK15"
 "\n"

4 all "History Logic Speed" RSRTX_ATTR_HISTORY_LOGIC_SPEED ViInt32 gs rsrtx_rngHistorySpeed
 "Sets the speed of the history replay.\n\nAvailable Repeated Capabilities:\nLogic (Logic1,Logic2)\n\nRemote-control command:\nLOGic<p>:HISTory:PLAYer:SPEed\n\nOption Checking:\nK15"
 "\n"

4 all "History Logic Repeat" RSRTX_ATTR_HISTORY_LOGIC_REPEAT ViBoolean gs 
 "If set to true, the replay of the selected history segments repeats automatically.\n\nAvailable Repeated Capabilities:\nLogic (Logic1,Logic2)\n\nRemote-control command:\nLOGic<p>:HISTory:REPLay\n\nOption Checking:\nK15"
 "\n"

4 all "History Logic Acquisiton Relative Time" RSRTX_ATTR_HISTORY_LOGIC_ACQUISITON_RELATIVE_TIME ViReal64 g 
 "Returns the time difference of the selected segment to the newest segment. \n\nAvailable Repeated Capabilities:\nLogic (Logic1,Logic2)\n\nRemote-control command:\nLOGic<p>:HISTory:TSRelative?\n\nOption Checking:\nK15"
 "\n"

4 all "History Logic All Dates" RSRTX_ATTR_HISTORY_LOGIC_ALL_DATES ViString g 
 "Returns the dates of all history segments.\n\nAvailable Repeated Capabilities:\nLogic (Logic1,Logic2)\n\nRemote-control command:\nLOGic<p>:HISTory:TSRelative:ALL?\n\nOption Checking:\nNone"
 "\n"

4 all "History Logic All Time Differences" RSRTX_ATTR_HISTORY_LOGIC_ALL_TIME_DIFFERENCES ViString g 
 "Returns the time differences to the newest acquisition of all history segments.\n\nAvailable Repeated Capabilities:\nLogic (Logic1,Logic2)\n\nRemote-control command:\nLOGic<p>:HISTory:TSDate:ALL?\n\nOption Checking:\nK15"
 "\n"

4 all "History Logic All Daytimes" RSRTX_ATTR_HISTORY_LOGIC_ALL_DAYTIMES ViString g 
 "Returns the absolute daytimes of all history segments.\n\nAvailable Repeated Capabilities:\nLogic (Logic1,Logic2)\n\nRemote-control command:\nLOGic<p>:HISTory:TSABsolute:ALL?\n\nOption Checking:\nNone"
 "\n"

4 all "History Logic Player Control Enable" RSRTX_ATTR_HISTORY_LOGIC_PLAYER_CONTROL_ENABLE ViBoolean gs 
 "Displays or hides the history player on the screen.\n\nAvailable Repeated Capabilities:\nLogic (Logic1,Logic2)\n\nRemote-control command:\nLOGic<p>:HISTory:CONTrol[:ENABle]\n\nOption Checking:\nK15"
 "\n"

4 all "History Logic Time Table Enable" RSRTX_ATTR_HISTORY_LOGIC_TIME_TABLE_ENABLE ViBoolean gs 
 "Displays or hides the segment table on the screen.\n\nAvailable Repeated Capabilities:\nLogic (Logic1,Logic2)\n\nRemote-control command:\nLOGic<p>:HISTory:TTABle[:ENABle]\n\nOption Checking:\nK15"
 "\n"

4 all "History Logic Export Name" RSRTX_ATTR_HISTORY_LOGIC_EXPORT_NAME ViString gs 
 "History export file name.\n\nAvailable Repeated Capabilities:\nLogic (Logic1,Logic2)\n\nRemote-control command:\nLOGic<p>:HISTory:EXPort:NAME\n\nOption Checking:\nK15"
 "\n"

4 all "History Logic Export Save" RSRTX_ATTR_HISTORY_LOGIC_EXPORT_SAVE ViString s 
 "Exports history.\n\nAvailable Repeated Capabilities:\nLogic (Logic1,Logic2)\n\nRemote-control command:\nLOGic<p>:HISTory:EXPort:SAVE\n\nOption Checking:\nK15"
 "\n"

2 all "Segmentation"
 "Configures Display Segmentation.\n"

3 all "Segmentation Record Length" RSRTX_ATTR_SEGMENTATION_RECORD_LENGTH ViInt32 gs 
 "Record length, the number of recorded waveform points in a segment.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nACQuire:POINts[:VALue]\n\nOption Checking:\nK15"
 "\n"

3 all "Ultra Segmentation Enabled" RSRTX_ATTR_ULTRA_SEGMENTATION_ENABLED ViBoolean gs 
 "Enables the ultra segementation mode. The acquisitions are performed very fast without processing and displaying the waveforms. When acquisition has been stopped, the latest waveform is displayed, the older ones are stored in segments.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nACQuire:SEGMented:STATe\n\nOption Checking:\nK15"
 "\n"

3 all "Segmentation Record Maximum Segments" RSRTX_ATTR_SEGMENTATION_RECORD_MAXIMUM_SEGMENTS ViBoolean gs 
 "Always records maximum possible number of segments.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nACQuire:SEGMented:MAXimum\n\nOption Checking:\nNone"
 "\n"

3 all "Segmentation Nx Single Maximum" RSRTX_ATTR_SEGMENTATION_NX_SINGLE_MAXIMUM ViBoolean gs 
 "Sets the maximum possible number of segments for a RUN Nx SINGLE acquisition.\nThus, all segments of the memory are captured.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nACQuire:NSINgle:MAXimum\n\nOption Checking:\nK15"
 "\n"

3 all "Segmentation Maximum Number Of Segments" RSRTX_ATTR_SEGMENTATION_MAXIMUM_NUMBER_OF_SEGMENTS ViInt32 gs 
 "Sets the number of segments to be captured. In automatic mode, the command is query only and returns the maximum number of segments that can be captured with the current configuration.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nACQuire:COUNt\n\nOption Checking:\nK15"
 "\n"

3 all "Segmentation Number Of Available Segments" RSRTX_ATTR_SEGMENTATION_NUMBER_OF_AVAILABLE_SEGMENTS ViInt32 g 
 "Returns the number of segments that are currently saved in the memory. This number is available for history viewing.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nACQuire:AVAilable?\n\nOption Checking:\nK15"
 "\n"

1 all "Data Management"
 "Mass memory, save and load\n"

2 all "Drives" RSRTX_ATTR_DRIVES ViString g 
 "Returns a list of the drives of the instrument.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nMMEMory:DRIVes?\n\nOption Checking:\nNone"
 "\n"

2 all "Change Drive" RSRTX_ATTR_CHANGE_DRIVE ViString s 
 "Change current drive.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nMMEMory:MSIS\n\nOption Checking:\nNone"
 "\n"

2 all "Current Directory" RSRTX_ATTR_CURRENT_DIRECTORY ViString gs 
 "Changes the default directory for mass memory storage.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nMMEMory:CDIRectory\n\nOption Checking:\nNone"
 "\n"

2 all "Create Directory" RSRTX_ATTR_CREATE_DIRECTORY ViString s 
 "Creates a new directory for mass memory storage.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nMMEMory:MDIRectory\n\nOption Checking:\nNone"
 "\n"

2 all "Remove Directory" RSRTX_ATTR_REMOVE_DIRECTORY ViString s 
 "Removes an existing directory from the mass memory storage system.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nMMEMory:RDIRectory\n\nOption Checking:\nNone"
 "\n"

2 all "Delete File" RSRTX_ATTR_DELETE_FILE ViString s 
 "Removes a file from the specified directory.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nMMEMory:DELete\n\nOption Checking:\nNone"
 "\n"

1 all "Hardcopy and Printer"
 "Contains attributes for Hardcopy and printers setup.\n"

2 all "Hardcopy File Name" RSRTX_ATTR_HARDCOPY_FILE_NAME ViString gs 
 "Defines the file name when an image of the display is stored to a file rather than printed to a printer using RSRTX_ATTR_HARDCOPY_PRINT.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nMMEMory:NAME\n\nOption Checking:\nNone"
 "\n"

2 all "Hardcopy Device Destination" RSRTX_ATTR_HARDCOPY_DEVICE_DESTINATION ViInt32 gs rsrtx_rngHardcopyDevice
 "This command selects the printer output medium (Disk, Printer or Clipboard).\n\nThe type of instrument is selected with SYSTem:COMMunicate:PRINter:SELect<1..2>, which automatically selects a default output medium. Therefore the HCOPy:DESTination command should always be sent after setting the device type.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nHCOPy:DESTination\n\nOption Checking:\nNone"
 "\n"

2 all "Hardcopy Color Scheme" RSRTX_ATTR_HARDCOPY_COLOR_SCHEME ViInt32 gs rsrtx_rngColorScheme
 "Defines the color mode for saved and printed screenshots.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nHCOPy:COLor:SCHeme\n\nOption Checking:\nNone"
 "\n"

2 all "Hardcopy Command Set" RSRTX_ATTR_HARDCOPY_COMMAND_SET ViInt32 gs rsrtx_rngHardcopyCommandSet
 "Sets the printer language that is supported by the printer.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSYSTem:COMMunicate:PRINter:CSET\n\nOption Checking:\nNone"
 "\n"

2 all "Hardcopy Close Dialogs" RSRTX_ATTR_HARDCOPY_CLOSE_DIALOGS ViBoolean gs 
 "If ON, open dialog boxes and menus are closed before the screenshot is saved. Thus, the waveforms and results are always visible on the screenshot.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nHCOPy:CWINdow\n\nOption Checking:\nNone"
 "\n"

2 all "Hardcopy Device Language Output Format" RSRTX_ATTR_HARDCOPY_DEVICE_LANGUAGE_OUTPUT_FORMAT ViInt32 gs rsrtx_rngHardcopyDeviceLang
 "Defines the file format for the image of the display.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nHCOPy:LANGuage\n\nOption Checking:\nNone"
 "\n"

2 all "Hardcopy Output Format" RSRTX_ATTR_HARDCOPY_OUTPUT_FORMAT ViInt32 gs rsrtx_rngHardcopyFormat
 "Defines the file format for the image of the display.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nHCOPy:FORMat\n\nOption Checking:\nNone"
 "\n"

2 all "Hardcopy Device Orientation" RSRTX_ATTR_HARDCOPY_DEVICE_ORIENTATION ViInt32 gs rsrtx_rngHardcopyDeviceOrientation
 "Defines the page orientation.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nHCOPy:PAGE:ORIentation\n\nOption Checking:\nNone"
 "\n"

2 all "Hardcopy Page Size X" RSRTX_ATTR_HARDCOPY_PAGE_SIZE_X ViInt32 g 
 "Queries X size of the page.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nHCOPy:SIZE:X?\n\nOption Checking:\nNone"
 "\n"

2 all "Hardcopy Page Size Y" RSRTX_ATTR_HARDCOPY_PAGE_SIZE_Y ViInt32 g 
 "Queries Y size of the page.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nHCOPy:SIZE:Y?\n\nOption Checking:\nNone"
 "\n"

2 all "Hardcopy Print" RSRTX_ATTR_HARDCOPY_PRINT ViString s 
 "Prints an image of the display to the printer or saves an image to a file or the clipboard, depending on the RSRTX_ATTR_HARDCOPY_DEVICE_DESTINATION attribute.\nThe printer is defined by RSRTX_ATTR_HARDCOPY_SELECT_PRINTER attribute. The file name for storage is defined by RSRTX_ATTR_HARDCOPY_FILE_NAME attribute.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nHCOPy[:IMMediate]\n\nOption Checking:\nNone"
 "\n"

2 all "Hardcopy Select Printer" RSRTX_ATTR_HARDCOPY_SELECT_PRINTER ViString gs 
 "Selects a configured printer. To determine which printers are installed, use the RSRTX_ATTR_HARDCOPY_GET_FIRST_PRINTER and RSRTX_ATTR_HARDCOPY_GET_NEXT_PRINTER attributes.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSYSTem:COMMunicate:PRINter:SELect\n\nOption Checking:\nNone"
 "\n"

2 all "Hardcopy Get First Printer" RSRTX_ATTR_HARDCOPY_GET_FIRST_PRINTER ViString g 
 "This command queries the name of the first printer (in the list of printers) available.\nIf no printer is configured an empty string is output.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSYSTem:COMMunicate:PRINter:ENUMerate:FIRSt?\n\nOption Checking:\nNone"
 "\n"

2 all "Hardcopy Get Next Printer" RSRTX_ATTR_HARDCOPY_GET_NEXT_PRINTER ViString g 
 "This command queries the name of the next printer installed. After all available printer names have been output, an empty string enclosed by quotation marks ('') is output for the next query. Further queries are answered by a query error.\nThe RSRTX_ATTR_HARDCOPY_GET_FIRST_PRINTER attribute should be sent previously to return to the beginning of the printer list and query the name of the first printer.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control "
 "command:\nSYSTem:COMMunicate:PRINter:ENUMerate[:NEXT]?\n\nOption Checking:\nNone"
 "\n"

1 all "System"
 "System attributes.\n"

2 all "Device Mode" RSRTX_ATTR_DEVICE_MODE ViInt32 gs RsRtx_rngDeviceMode
 "Configures the device mode.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nDEVice:MODE\n\nOption Checking:\nNone"
 "\n"

2 all "Interface Select" RSRTX_ATTR_INTERFACE_SELECT ViInt32 gs RsRtx_rngInterface
 "Selects the interface for remote control and web browser access ( ETHernet only).\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSYSTem:COMMunicate:INTerface[:SELect]\n\nOption Checking:\nNone"
 "\n"

2 all "USB Class" RSRTX_ATTR_USB_CLASS ViInt32 gs RsRtx_rngUSBClass
 "Selects the USB mode.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSYSTem:COMMunicate:INTerface:USB:CLASs\n\nOption Checking:\nNone"
 "\n"

2 all "Ethernet DHCP" RSRTX_ATTR_ETHERNET_DHCP ViBoolean gs 
 "Enables DHCP for automatic network parameter distribution.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSYSTem:COMMunicate:INTerface:ETHernet:DHCP\n\nOption Checking:\nNone"
 "\n"

2 all "Ethernet IP Port" RSRTX_ATTR_ETHERNET_IP_PORT ViInt32 gs 
 "Specify the IP port number.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSYSTem:COMMunicate:INTerface:ETHernet:IPPort\n\nOption Checking:\nNone"
 "\n"

2 all "Ethernet VXI11 Port" RSRTX_ATTR_ETHERNET_VXI11_PORT ViInt32 gs 
 "Returns or specifies the VXI-11 port number.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSYSTem:COMMunicate:INTerface:ETHernet:VXIPort\n\nOption Checking:\nNone"
 "\n"

2 all "Ethernet HTTP Port" RSRTX_ATTR_ETHERNET_HTTP_PORT ViInt32 gs 
 "Returns or specifies the HTTP port number.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSYSTem:COMMunicate:INTerface:ETHernet:HTTPport\n\nOption Checking:\nNone"
 "\n"

2 all "Ethernet Transfer" RSRTX_ATTR_ETHERNET_TRANSFER ViInt32 gs RsRtx_rngEthernetTransfer
 "Enables automatic transfer speed selection, or selects one of the predefined settings that corresponds to your network data rate.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSYSTem:COMMunicate:INTerface:ETHernet:TRANsfer\n\nOption Checking:\nNone"
 "\n"

2 all "Ethernet MAC Address" RSRTX_ATTR_ETHERNET_MAC_ADDRESS ViString g 
 "Returns the instrument's media access control address.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSYSTem:COMMunicate:INTerface:ETHernet:MACaddress?\n\nOption Checking:\nNone"
 "\n"

2 all "Preset Education" RSRTX_ATTR_PRESET_EDUCATION ViString s 
 "Deletes the password of the education mode.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSYSTem:EDUCation:PRESet\n\nOption Checking:\nNone"
 "\n"

2 all "Device Footprint" RSRTX_ATTR_DEVICE_FOOTPRINT ViString g 
 "Returns the device footprint of the instrument. The device footprint contains the configuration of the instrument, installed modules, installed software and software licenses. This information is written in the device footprint xml file might be useful in case of maintenance or support request.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSYSTem:DFPRint?\n\nOption Checking:\nNone"
 "\n"

2 all "IO Timeout" RSRTX_ATTR_IO_TIMEOUT ViInt32 gs 
 "Thise parameter specifies the visa timeout in milliseconds.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\ncmd\n\nOption Checking:\nNone"
 "\n"

1 all "Utility Functions"
 "This subsystem contains functions for Utility Functions.\n\n\n\n"

2 all "ID Query Response" RSRTX_ATTR_ID_QUERY_RESPONSE ViString g 
 "Returns the ID Query response string. The instrument driver gets the value of this attribute when you pass VI_TRUE for the ID Query parameter to the rsrtx_init or rsrtx_InitWithOptions function.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n*IDN?\n\nOption Checking:\nNone"
 "\n"

2 all "ID Query Response" RSRTX_ATTR_ID_QUERY_RESPONSE ViString g 
 "Returns the ID Query response string.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n*IDN?\n\nOption Checking:\nNone"
 "\n"

2 all "System Preset" RSRTX_ATTR_SYSTEM_PRESET ViString s 
 "Presets all parameters.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSYSTem:PRESet\n\nOption Checking:\nNone"
 "\n"

2 all "Logging" RSRTX_ATTR_LOGGING ViBoolean gs 
 "This attribute switches logging.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nno_command\n\nOption Checking:\nNone"
 "\n"

2 all "Calibration" RSRTX_ATTR_CALIBRATION ViInt32 g 
 "Initiates a calibration of the instrument and subsequently queries the calibration status. Responses > 0 indicate errors.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n*CAL?\n\nOption Checking:\nNone"
 "\n"

2 all "Self-Test Query" RSRTX_ATTR_SELF_TEST_QUERY ViInt32 g 
 "Triggers selftests of the instrument and returns an error code in decimal form (see Service Manual supplied with the instrument). 0 indicates no errors occured.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n*TST?\n\nOption Checking:\nNone"
 "\n"

2 all "System Error" RSRTX_ATTR_SYSTEM_ERROR ViString g 
 "Queries error from error queue.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSYSTem:ERRor:[NEXT]?\n\nOption Checking:\nNone"
 "\n"

2 all "System Error List" RSRTX_ATTR_SYST_ERR_LIST ViString g 
 "Returns the error message string read from the instrument's error message queue.\n\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSYSTem:ERRor:ALL?\n\nOption Checking:\nNone"
 "\n"

2 all "Instrument Name" RSRTX_ATTR_INSTRUMENT_NAME ViString gs 
 "Defines an instrument name (String with max. 20 characters).\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSYSTem:NAME\n\nOption Checking:\nNone"
 "\n"

2 all "Reset Status Register" RSRTX_ATTR_RESET_STATUS_REGISTER ViString s 
 "Resets all STATUS:QUESTIONALBLE registers.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSTATus:PRESet\n\nOption Checking:\nNone"
 "\n"

2 all "Self Alignment" RSRTX_ATTR_SELF_ALIGNMENT ViString s 
 "Executes an internal self-alignment of the instrument.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nCALibration\n\nOption Checking:\nNone"
 "\n"

2 all "Self Alignment State" RSRTX_ATTR_SELF_ALIGNMENT_STATE ViInt32 g rsrtx_rngSelfAlignmentState
 "Returns the overall state of the self-alignment.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nCALibration:STATe?\n\nOption Checking:\nNone"
 "\n"

2 all "Operation Complete (OPC) Timeout" RSRTX_ATTR_OPC_TIMEOUT ViInt32 gs 
 "Thise parameter specifies the maximum time to wait for operation complete in milliseconds.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n\n\nOption Checking:\nNone"
 "\n"

2 all "Query OPC" RSRTX_ATTR_QUERY_OPC ViInt32 g 
 "Queries the OPC.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n*OPC?\n\nOption Checking:\nNone"
 "\n"

2 all "Visa Timeout" RSRTX_ATTR_VISA_TIMEOUT ViInt32 gs 
 "Thise parameter specifies the visa timeout in milliseconds.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\ncmd\n\nOption Checking:\nNone"
 "\n"

2 all "Process All Previous Commands" RSRTX_ATTR_PROCESS_ALL_PREVIOUS_COMMANDS ViString s 
 "Stops further command processing until all commands sent before *WAI have been executed.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n*WAI\n\nOption Checking:\nNone"
 "\n"

2 all "Visa Manufacturer" RSRTX_ATTR_VISA_MANUFACTURER ViString g 
 "Reads VISA manufacturer string.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\ncmd\n\nOption Checking:\nNone"
 "\n"

2 all "Clear Status" RSRTX_ATTR_CLEAR_STATUS ViString s 
 "Clear status.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\n*CLS\n\nOption Checking:\nNone"
 "\n"

2 all "Option Checking" RSRTX_ATTR_OPTION_CHECKING ViBoolean gs 
 "Turns option checking ON or OFF.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\ncmd\n\nOption Checking:\nNone"
 "\n"

2 all "Sound"
 "Additional Sound Attributes.\n"

3 all "Sound Enabled" RSRTX_ATTR_SOUND_ENABLED ViBoolean gs 
 "Enables or diables a sound for general control events, e.g. reaching the rotary encoder end or changing the measuring mode in the Automeasure menu.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSYSTem:BEEPer:CONTrol:STATe\n\nOption Checking:\nNone"
 "\n"

3 all "Sound Error Enabled" RSRTX_ATTR_SOUND_ERROR_ENABLED ViBoolean gs 
 "Enables or disables the beep if an error occurs.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSYSTem:BEEPer:ERRor:STATe\n\nOption Checking:\nNone"
 "\n"

3 all "Sound Trigger Enabled" RSRTX_ATTR_SOUND_TRIGGER_ENABLED ViBoolean gs 
 "Enables or disables the beep if a trigger occurs.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSYSTem:BEEPer:TRIG:STATe\n\nOption Checking:\nNone"
 "\n"

3 all "Sound Generate" RSRTX_ATTR_SOUND_GENERATE ViString s 
 "Generates an immediate beep.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSYSTem:BEEPer[:IMMediate]\n\nOption Checking:\nNone"
 "\n"

2 all "Status Register"
 "Configures the status reporting system.\n"

3 all "Operation"
 "Configures the operation status reporting system.\n"

4 all "Operation Condition" RSRTX_ATTR_OPERATION_CONDITION ViInt32 g 
 "Sets the status reporting system Operation Condition.\n\nNote:\n(1) For detailed description of Status Reporting System see also operating manual.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSTATus:OPERation:CONDition?\n\nOption Checking:\nNone"
 "\n"

4 all "Operation Enable" RSRTX_ATTR_OPERATION_ENABLE ViInt32 gs 
 "Sets the status reporting system Operation Enable.\n\nNote:\n(1) For detailed description of Status Reporting System see also operating manual.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSTATus:OPERation:ENABle\n\nOption Checking:\nNone"
 "\n"

4 all "Operation N Transition" RSRTX_ATTR_OPERATION_N_TRANSITION ViInt32 gs 
 "Sets the status reporting system Operation N Transition.\n\nNote:\n(1) For detailed description of Status Reporting System see also operating manual.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSTATus:OPERation:NTRansition\n\nOption Checking:\nNone"
 "\n"

4 all "Operation P Transition" RSRTX_ATTR_OPERATION_P_TRANSITION ViInt32 gs 
 "Sets the status reporting system Operation P Transition.\n\nNote:\n(1) For detailed description of Status Reporting System see also operating manual.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSTATus:OPERation:PTRansition\n\nOption Checking:\nNone"
 "\n"

4 all "Operation Event" RSRTX_ATTR_OPERATION_EVENT ViInt32 g 
 "Sets the status reporting system Operation Event.\n\nNote:\n(1) For detailed description of Status Reporting System see also operating manual.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSTATus:OPERation[:EVENt]?\n\nOption Checking:\nNone"
 "\n"

3 all "Questionable"
 "Configures the questionable status reporting system.\n"

4 all "Questionable Condition" RSRTX_ATTR_QUESTIONABLE_CONDITION ViInt32 g 
 "Sets the status reporting system Questionable Condition.\n\nNote:\n(1) For detailed description of Status Reporting System see also operating manual.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSTATus:QUEStionable:CONDition?\n\nOption Checking:\nNone"
 "\n"

4 all "Questionable Enable" RSRTX_ATTR_QUESTIONABLE_ENABLE ViInt32 gs 
 "Sets the status reporting system Questionable Enable.\n\nNote:\n(1) For detailed description of Status Reporting System see also operating manual.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSTATus:QUEStionable:ENABle\n\nOption Checking:\nNone"
 "\n"

4 all "Questionable N Transition" RSRTX_ATTR_QUESTIONABLE_N_TRANSITION ViInt32 gs 
 "Sets the status reporting system Questionable N Transition.\n\nNote:\n(1) For detailed description of Status Reporting System see also operating manual.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSTATus:QUEStionable:NTRansition\n\nOption Checking:\nNone"
 "\n"

4 all "Questionable P Transition" RSRTX_ATTR_QUESTIONABLE_P_TRANSITION ViInt32 gs 
 "Sets the status reporting system Questionable P Transition.\n\nNote:\n(1) For detailed description of Status Reporting System see also operating manual.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSTATus:QUEStionable:PTRansition\n\nOption Checking:\nNone"
 "\n"

4 all "Questionable Event" RSRTX_ATTR_QUESTIONABLE_EVENT ViInt32 g 
 "Sets the status reporting system Questionable Event.\n\nNote:\n(1) For detailed description of Status Reporting System see also operating manual.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSTATus:QUEStionable[:EVENt]?\n\nOption Checking:\nNone"
 "\n"

4 all "Channel Overload"
 "Configures the questionable channel overload status reporting system.\n"

5 all "Questionable Channel Overload Condition" RSRTX_ATTR_QUESTIONABLE_CHANNEL_OVERLOAD_CONDITION ViInt32 g 
 "Sets the status reporting system Questionable Channel Overload Condition.\n\nNote:\n(1) For detailed description of Status Reporting System see also operating manual.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSTATus:QUEStionable:COVerload:CONDition?\n\nOption Checking:\nNone"
 "\n"

5 all "Questionable Channel Overload Enable" RSRTX_ATTR_QUESTIONABLE_CHANNEL_OVERLOAD_ENABLE ViInt32 gs 
 "Sets the status reporting system Questionable Channel Overload Enable.\n\nNote:\n(1) For detailed description of Status Reporting System see also operating manual.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSTATus:QUEStionable:COVerload:ENABle\n\nOption Checking:\nNone"
 "\n"

5 all "Questionable Channel Overload N Transition" RSRTX_ATTR_QUESTIONABLE_CHANNEL_OVERLOAD_N_TRANSITION ViInt32 gs 
 "Sets the status reporting system Questionable Channel Overload N Transition.\n\nNote:\n(1) For detailed description of Status Reporting System see also operating manual.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSTATus:QUEStionable:COVerload:NTRansition\n\nOption Checking:\nNone"
 "\n"

5 all "Questionable Channel Overload P Transition" RSRTX_ATTR_QUESTIONABLE_CHANNEL_OVERLOAD_P_TRANSITION ViInt32 gs 
 "Sets the status reporting system Questionable Channel Overload P Transition.\n\nNote:\n(1) For detailed description of Status Reporting System see also operating manual.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSTATus:QUEStionable:COVerload:PTRansition\n\nOption Checking:\nNone"
 "\n"

5 all "Questionable Channel Overload Event" RSRTX_ATTR_QUESTIONABLE_CHANNEL_OVERLOAD_EVENT ViInt32 g 
 "Sets the status reporting system Questionable Channel Overload Event.\n\nNote:\n(1) For detailed description of Status Reporting System see also operating manual.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSTATus:QUEStionable:COVerload[:EVENt]?\n\nOption Checking:\nNone"
 "\n"

4 all "Limit"
 "Configures the questionable limit status reporting system.\n"

5 all "Questionable Limit Condition" RSRTX_ATTR_QUESTIONABLE_LIMIT_CONDITION ViInt32 g 
 "Sets the status reporting system Questionable Limit Condition.\n\nNote:\n(1) For detailed description of Status Reporting System see also operating manual.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSTATus:QUEStionable:LIMit:CONDition?\n\nOption Checking:\nNone"
 "\n"

5 all "Questionable Limit Enable" RSRTX_ATTR_QUESTIONABLE_LIMIT_ENABLE ViInt32 gs 
 "Sets the status reporting system Questionable Limit Enable.\n\nNote:\n(1) For detailed description of Status Reporting System see also operating manual.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSTATus:QUEStionable:LIMit:ENABle\n\nOption Checking:\nNone"
 "\n"

5 all "Questionable Limit N Transition" RSRTX_ATTR_QUESTIONABLE_LIMIT_N_TRANSITION ViInt32 gs 
 "Sets the status reporting system Questionable Limit N Transition.\n\nNote:\n(1) For detailed description of Status Reporting System see also operating manual.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSTATus:QUEStionable:LIMit:NTRansition\n\nOption Checking:\nNone"
 "\n"

5 all "Questionable Limit P Transition" RSRTX_ATTR_QUESTIONABLE_LIMIT_P_TRANSITION ViInt32 gs 
 "Sets the status reporting system Questionable Limit P Transition.\n\nNote:\n(1) For detailed description of Status Reporting System see also operating manual.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSTATus:QUEStionable:LIMit:PTRansition\n\nOption Checking:\nNone"
 "\n"

5 all "Questionable Limit Event" RSRTX_ATTR_QUESTIONABLE_LIMIT_EVENT ViInt32 g 
 "Sets the status reporting system Questionable Limit Event.\n\nNote:\n(1) For detailed description of Status Reporting System see also operating manual.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSTATus:QUEStionable:LIMit[:EVENt]?\n\nOption Checking:\nNone"
 "\n"

4 all "Mask"
 "Configures the questionable mask status reporting system.\n"

5 all "Questionable Mask Condition" RSRTX_ATTR_QUESTIONABLE_MASK_CONDITION ViInt32 g 
 "Sets the status reporting system Questionable Mask Condition.\n\nNote:\n(1) For detailed description of Status Reporting System see also operating manual.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSTATus:QUEStionable:MASK:CONDition?\n\nOption Checking:\nNone"
 "\n"

5 all "Questionable Mask Enable" RSRTX_ATTR_QUESTIONABLE_MASK_ENABLE ViInt32 gs 
 "Sets the status reporting system Questionable Mask Enable.\n\nNote:\n(1) For detailed description of Status Reporting System see also operating manual.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSTATus:QUEStionable:MASK:ENABle\n\nOption Checking:\nNone"
 "\n"

5 all "Questionable Mask N Transition" RSRTX_ATTR_QUESTIONABLE_MASK_N_TRANSITION ViInt32 gs 
 "Sets the status reporting system Questionable Mask N Transition.\n\nNote:\n(1) For detailed description of Status Reporting System see also operating manual.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSTATus:QUEStionable:MASK:NTRansition\n\nOption Checking:\nNone"
 "\n"

5 all "Questionable Mask P Transition" RSRTX_ATTR_QUESTIONABLE_MASK_P_TRANSITION ViInt32 gs 
 "Sets the status reporting system Questionable Mask P Transition.\n\nNote:\n(1) For detailed description of Status Reporting System see also operating manual.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSTATus:QUEStionable:MASK:PTRansition\n\nOption Checking:\nNone"
 "\n"

5 all "Questionable Mask Event" RSRTX_ATTR_QUESTIONABLE_MASK_EVENT ViInt32 g 
 "Sets the status reporting system Questionable Mask Event.\n\nNote:\n(1) For detailed description of Status Reporting System see also operating manual.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSTATus:QUEStionable:MASK[:EVENt]?\n\nOption Checking:\nNone"
 "\n"

4 all "ADC State"
 "Configures the questionable ADC overflow reporting system.\n"

5 all "Questionable ADC State Condition" RSRTX_ATTR_QUESTIONABLE_ADC_STATE_CONDITION ViInt32 g 
 "Returns the contents of the CONDition part of the status register to check for questionable instrument or measurement states. Reading the CONDition registers does not delete the contents.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSTATus:QUEStionable:ADCState:CONDition?\n\nOption Checking:\nNone"
 "\n"

5 all "Questionable ADC State Enable" RSRTX_ATTR_QUESTIONABLE_ADC_STATE_ENABLE ViInt32 gs 
 "Sets the ENABle part that allows true conditions in the EVENt part to be reported in the summary bit. If a bit is set to 1 in the enable part and its associated event bit transitions to true, a positive transition occurs in the summary bit and is reported to the next higher level.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSTATus:QUEStionable:ADCState:ENABle\n\nOption Checking:\nNone"
 "\n"

5 all "Questionable ADC State N Transition" RSRTX_ATTR_QUESTIONABLE_ADC_STATE_N_TRANSITION ViInt32 gs 
 "Sets the negative transition filter. If a bit is set, a 1 to 0 transition in the corresponding bit of the condition register causes a 1 to be written in the corresponding bit of the event register.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSTATus:QUEStionable:ADCState:NTRansition\n\nOption Checking:\nNone"
 "\n"

5 all "Questionable ADC State P Transition" RSRTX_ATTR_QUESTIONABLE_ADC_STATE_P_TRANSITION ViInt32 gs 
 "Sets the positive transition filter. If a bit is set, a 0 to 1 transition in the corresponding bit of the condition register causes a 1 to be written in the corresponding bit of the event register.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSTATus:QUEStionable:ADCState:PTRansition\n\nOption Checking:\nNone"
 "\n"

5 all "Questionable ADC State Event" RSRTX_ATTR_QUESTIONABLE_ADC_STATE_EVENT ViInt32 g 
 "Returns the contents of the EVENt part of the status register to check whether an event has occurred since the last reading. Reading an EVENt register deletes its contents.\n\nAvailable Repeated Capabilities:\n\n\nRemote-control command:\nSTATus:QUEStionable:ADCState[:EVENt]?\n\nOption Checking:\nNone"
 "\n"

